<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MongoDB.Driver</name>
    </assembly>
    <members>
        <member name="T:MongoDB.Driver.AggregateBucketAutoGranularity">
            <summary>
            Represents the granularity value for a $bucketAuto stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E6">
            <summary>
            Gets the E6 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E12">
            <summary>
            Gets the E12 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E24">
            <summary>
            Gets the E24 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E48">
            <summary>
            Gets the E48 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E96">
            <summary>
            Gets the E96 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E192">
            <summary>
            Gets the E192 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.PowersOf2">
            <summary>
            Gets the POWERSOF2 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R5">
            <summary>
            Gets the R5 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R10">
            <summary>
            Gets the R10 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R20">
            <summary>
            Gets the R20 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R40">
            <summary>
            Gets the R40 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R80">
            <summary>
            Gets the R80 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.S1_2_5">
            <summary>
            Gets the 1-2-5 granularity.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoGranularity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketAutoGranularity"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoOptions">
            <summary>
            Represents options for the BucketAuto method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoOptions.Granularity">
            <summary>
            Gets or sets the granularity.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoResult`1">
            <summary>
            Represents the result of the $bucketAuto stage.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResult`1.#ctor(MongoDB.Driver.AggregateBucketAutoResultId{`0},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketResult`1"/> class.
            </summary>
            <param name="id">The inclusive lower boundary of the bucket.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResult`1.#ctor(`0,`0,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketResult`1" /> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Id">
            <summary>
            Gets the inclusive lower boundary of the bucket.
            </summary>
            <value>
            The inclusive lower boundary of the bucket.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Max">
            <summary>
            Gets the maximum.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Min">
            <summary>
            Gets the minimum.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoResultId`1">
            <summary>
            Represents the _id value in the result of a $bucketAuto stage.
            </summary>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultId`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketAutoResultId`1"/> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResultId`1.Max">
            <summary>
            Gets the max value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResultId`1.Min">
            <summary>
            Gets the min value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoResultIdSerializer">
            <summary>
            Static factory class for AggregateBucketAutoResultIdSerializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer.Create``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Creates an instance of AggregateBucketAutoResultIdSerializer.
            </summary>
            <typeparam name="TValue">The value type.</typeparam>
            <param name="valueSerializer">The value serializer.</param>
            <returns>A AggregateBucketAutoResultIdSerializer.</returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1">
            <summary>
            A serializer for AggregateBucketAutoResultId.
            </summary>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1"/> class.
            </summary>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.AggregateBucketAutoResultId{`0})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultIdSerializer`1.TryGetMemberSerializationInfo(System.String,MongoDB.Bson.Serialization.BsonSerializationInfo@)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketOptions`1">
            <summary>
            Represents options for the Bucket method.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketOptions`1.DefaultBucket">
            <summary>
            Gets or sets the default bucket.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketResult`1">
            <summary>
            Represents the result of the $bucket stage.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketResult`1.#ctor(`0,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketResult`1"/> class.
            </summary>
            <param name="id">The inclusive lower boundary of the bucket.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketResult`1.Id">
            <summary>
            Gets the inclusive lower boundary of the bucket.
            </summary>
            <value>
            The inclusive lower boundary of the bucket.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketResult`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateCountResult">
            <summary>
            Result type for the aggregate $count stage.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateCountResult.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateCountResult"/> class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateCountResult.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateExpressionDefinition`2">
            <summary>
            An aggregation expression.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateExpressionDefinition`2.op_Implicit(MongoDB.Bson.BsonValue)~MongoDB.Driver.AggregateExpressionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonValue"/> to <see cref="T:MongoDB.Driver.AggregateExpressionDefinition`2"/>.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.AggregateExpressionDefinition`2.op_Implicit(System.String)~MongoDB.Driver.AggregateExpressionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.AggregateExpressionDefinition`2"/>.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.AggregateExpressionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the aggregation expression to a <see cref="T:MongoDB.Bson.BsonValue"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="T:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonValue"/> based aggregate expression.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <seealso cref="T:MongoDB.Driver.AggregateExpressionDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2.#ctor(MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2"/> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonValue"/> based aggregate expression.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <seealso cref="T:MongoDB.Driver.AggregateExpressionDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DocumentsAggregateExpressionDefinition`1">
            <summary>
            An aggregate expression for the $documents stage.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <seealso cref="T:MongoDB.Driver.AggregateExpressionDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.DocumentsAggregateExpressionDefinition`1.#ctor(System.Collections.Generic.IEnumerable{`0},MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2" /> class.
            </summary>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.DocumentsAggregateExpressionDefinition`1.Render(MongoDB.Driver.RenderArgs{MongoDB.Driver.NoPipelineInput})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacet">
            <summary>
            Represents static methods for creating facets.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet.Create``2(System.String,MongoDB.Driver.PipelineDefinition{``0,``1})">
            <summary>
            Creates a new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`2" /> class.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="name">The facet name.</param>
            <param name="pipeline">The facet pipeline.</param>
            <returns>
            A new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`2" /> class
            </returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacet`1">
            <summary>
            Represents a facet to be passed to the Facet method.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`1"/> class.
            </summary>
            <param name="name">The facet name.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`1.Name">
            <summary>
            Gets the facet name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`1.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`1.OutputType">
            <summary>
            Gets the type of the output documents.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`1.RenderPipeline(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the facet pipeline.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacet`2">
            <summary>
            Represents a facet to be passed to the Facet method.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`2.#ctor(System.String,MongoDB.Driver.PipelineDefinition{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`2"/> class.
            </summary>
            <param name="name">The facet name.</param>
            <param name="pipeline">The facet pipeline.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`2.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`2.OutputType">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`2.Pipeline">
            <summary>
            Gets the facet pipeline.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`2.RenderPipeline(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetOptions`1">
            <summary>
            Options for the aggregate $facet stage.
            </summary>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetOptions`1.OutputSerializer">
            <summary>
            Gets or sets the output serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetResult">
            <summary>
            Represents an abstract AggregateFacetResult with an arbitrary TOutput type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacetResult" /> class.
            </summary>
            <param name="name">The name of the facet.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetResult.Name">
            <summary>
            Gets the name of the facet.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResult.Output``1">
            <summary>
            Gets the output of the facet.
            </summary>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <returns>The output of the facet.</returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetResult`1">
            <summary>
            Represents the result of a single facet.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResult`1.#ctor(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacetResult`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="output">The output.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetResult`1.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetResults">
            <summary>
            Represents the results of a $facet stage with an arbitrary number of facets.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResults.#ctor(MongoDB.Driver.AggregateFacetResult[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacetResults"/> class.
            </summary>
            <param name="facets">The facets.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetResults.Facets">
            <summary>
            Gets the facets.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateFluentBase`1">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IAggregateFluent`1" />.
            </summary>
            <typeparam name="TResult">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateFluentBase`1.Database">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.AggregateFluentBase`1.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.AggregateFluentBase`1.Stages">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.AppendStage``1(MongoDB.Driver.PipelineStageDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Bucket``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.AggregateBucketOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Bucket``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.BucketAuto``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.BucketAuto``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketAutoOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ChangeStream(MongoDB.Driver.ChangeStreamStageOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Count">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Densify(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{MongoDB.Driver.FieldDefinition{`0}})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Densify(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.DensifyRange,MongoDB.Driver.FieldDefinition{`0}[])">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Facet``1(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{`0}},MongoDB.Driver.AggregateFacetOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.GraphLookup``7(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``0,``2},MongoDB.Driver.AggregateExpressionDefinition{`0,``3},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.FieldDefinition{``4,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``0,``4,``6})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Group``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Limit(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Lookup``2(System.String,MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateLookupOptions{``0,``1})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Lookup``4(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``3,``2},MongoDB.Driver.AggregateLookupOptions{``0,``3})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Match(MongoDB.Driver.FilterDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Merge``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.MergeAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OfType``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Out(MongoDB.Driver.IMongoCollection{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Out(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Out(MongoDB.Driver.IMongoCollection{`0},MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Out(System.String,MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OutAsync(MongoDB.Driver.IMongoCollection{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OutAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OutAsync(MongoDB.Driver.IMongoCollection{`0},MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OutAsync(System.String,MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ReplaceRoot``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ReplaceWith``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Sample(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Search(MongoDB.Driver.Search.SearchDefinition{`0},MongoDB.Driver.Search.SearchHighlightOptions{`0},System.String,MongoDB.Driver.Search.SearchCountOptions,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Search(MongoDB.Driver.Search.SearchDefinition{`0},MongoDB.Driver.Search.SearchOptions{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.SearchMeta(MongoDB.Driver.Search.SearchDefinition{`0},System.String,MongoDB.Driver.Search.SearchCountOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Set(MongoDB.Driver.SetFieldDefinitions{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.SetWindowFields``1(MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{`0},``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.SetWindowFields``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{`0},``1})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.SetWindowFields``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},MongoDB.Driver.SortDefinition{`0},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{`0},``1})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Skip(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Sort(MongoDB.Driver.SortDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.SortByCount``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ThenBy(MongoDB.Driver.SortDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.UnionWith``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.PipelineDefinition{``0,`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.AggregateUnwindOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.VectorSearch(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ToCollection(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ToCollectionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ToCursor(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ToCursorAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.AggregateGraphLookupOptions`3">
            <summary>
            Represents options for the GraphLookup method.
            </summary>
            <typeparam name="TFrom">The type of from documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.AsElementSerializer">
            <summary>
            Gets or sets the TAsElement serialzier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.FromSerializer">
            <summary>
            Gets or sets the TFrom serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.MaxDepth">
            <summary>
            Gets or sets the maximum depth.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.OutputSerializer">
            <summary>
            Gets or sets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.RestrictSearchWithMatch">
            <summary>
            Gets the filter to restrict the search with.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateLookupOptions`2">
            <summary>
            Options for the aggregate $lookup stage.
            </summary>
            <typeparam name="TForeignDocument">The type of the foreign document.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateLookupOptions`2.ForeignSerializer">
            <summary>
            Gets or sets the foreign document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateLookupOptions`2.ResultSerializer">
            <summary>
            Gets or sets the result serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateOptions">
            <summary>
            Options for an aggregate operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateOptions.op_Implicit(MongoDB.Driver.ExpressionTranslationOptions)~MongoDB.Driver.AggregateOptions">
            <summary>
            Creates an AggregateOptions instance with the specified translation options.
            </summary>
            <param name="translationOptions">The translation options.</param>
            <returns>An AggregateOptions instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.AllowDiskUse">
            <summary>
            Gets or sets a value indicating whether to allow disk use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.BatchSize">
            <summary>
            Gets or sets the size of a batch.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Hint">
            <summary>
            Gets or sets the hint. This must either be a BsonString representing the index name or a BsonDocument representing the key pattern of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Let">
            <summary>
            Gets or sets the "let" definition.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.TranslationOptions">
            <summary>
            Gets or sets the translation options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.UseCursor">
            <summary>
            Gets or sets a value indicating whether to use a cursor.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateSortByCountResult`1">
            <summary>
            Result type for the aggregate $sortByCount stage.
            </summary>
            <typeparam name="TId">The type of the identifier.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateSortByCountResult`1.#ctor(`0,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateCountResult" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateSortByCountResult`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateSortByCountResult`1.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateUnwindOptions`1">
            <summary>
            Options for the $unwind aggregation stage.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateUnwindOptions`1.IncludeArrayIndex">
            <summary>
            Gets or sets the field with which to include the array index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateUnwindOptions`1.PreserveNullAndEmptyArrays">
            <summary>
            Gets or sets whether to preserve null and empty arrays.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateUnwindOptions`1.ResultSerializer">
            <summary>
            Gets or sets the result serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ArrayFilterDefinition">
            <summary>
            Base class for array filters.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ArrayFilterDefinition.ItemType">
            <summary>
            Gets the type of an item.
            </summary>
            <value>
            The type of an item.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the array filter to a <see cref="T:MongoDB.Bson.BsonDocument" />.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:MongoDB.Bson.BsonDocument" />.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ArrayFilterDefinition`1">
            <summary>
            Base class for array filters.
            </summary>
            <typeparam name="TItem">The type of an item.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.ArrayFilterDefinition`1.ItemType">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.ArrayFilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.ArrayFilterDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition`1.op_Implicit(System.String)~MongoDB.Driver.ArrayFilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.ArrayFilterDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the array filter to a <see cref="T:MongoDB.Bson.BsonDocument" />.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:MongoDB.Bson.BsonDocument" />.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based array filter.
            </summary>
            <typeparam name="TItem">The type of an item.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonArrayFilterDefinition`1">
            <summary>
            A JSON <see cref="T:System.String"/> based array filter.
            </summary>
            <typeparam name="TItem">The type of an item.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonArrayFilterDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1"/> class.
            </summary>
            <param name="json">The JSON string.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonArrayFilterDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.JsonArrayFilterDefinition`1.Json">
            <summary>
            Gets the JSON string.
            </summary>
            <value>
            The JSON string.
            </value>
        </member>
        <member name="M:MongoDB.Driver.JsonArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.JsonArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Authentication.DefaultAuthenticator">
            <summary>
            The default authenticator.
            If saslSupportedMechs is not present in the hello or legacy hello results for mechanism negotiation uses SCRAM-SHA-1.
            Else, uses SCRAM-SHA-256 if present in the list of mechanisms. Otherwise, uses
            SCRAM-SHA-1 the default, regardless of whether SCRAM-SHA-1 is in the list.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Libgssapi.LibgssapiException">
            <summary>
            Represents a Libgssapi exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Libgssapi.LibgssapiException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Gssapi.Libgssapi.LibgssapiException"/> class.
            </summary>
            <param name="message">Error message from libgssapi.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Libgssapi.LibgssapiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Gssapi.Libgssapi.LibgssapiException" /> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.AuthIdentity">
            <summary>
            SEC_WINNT_AUTH_IDENTITY
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.AuthIdentityFlag">
            <summary>
            Flag for the AuthIdentity structure.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.AuthIdentityFlag.Ansi">
            <summary>
            SEC_WINNT_AUTH_IDENTITY_ANSI
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.AuthIdentityFlag.Unicode">
            <summary>
            SEC_WINNT_AUTH_IDENTITY_UNICODE
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.DataRepresentation">
            <summary>
            Flags for InitiateSecurityContext.
            </summary>
            <remarks>
            See the TargetDataRep parameter at
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375507(v=vs.85).aspx
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.DataRepresentation.Network">
            <summary>
            SECURITY_NETWORK_DREP
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.DataRepresentation.Native">
            <summary>
            SECURITY_NATIVE_DREP
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.EncryptQualityOfProtection">
            <summary>
            Flags for EncryptMessage.
            </summary>
            <remarks>
            See the fQOP parameter at 
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375378(v=vs.85).aspx.
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.EncryptQualityOfProtection.WrapNoEncrypt">
            <summary>
            SECQOP_WRAP_NO_ENCRYPT
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.CreateException(System.Int64,System.String)">
            <summary>
            Creates an exception for the specified error code.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="defaultMessage">The default message.</param>
            <returns>A Win32Exception.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.AcquireCredentialsHandle(System.String,System.String,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityCredentialUse,System.IntPtr,MongoDB.Driver.Authentication.Gssapi.Sspi.AuthIdentity,System.Int32,System.IntPtr,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,System.Int64@)">
            <summary>
            Acquires the credentials handle.
            </summary>
            <param name="principal">The principal.</param>
            <param name="package">The package.</param>
            <param name="credentialUsage">The credential usage.</param>
            <param name="logonId">The logon id.</param>
            <param name="identity">The identity.</param>
            <param name="keyCallback">The key callback.</param>
            <param name="keyArgument">The key argument.</param>
            <param name="credentialHandle">The credential handle.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa374712(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.AcquireCredentialsHandle(System.String,System.String,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityCredentialUse,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,System.Int64@)">
            <summary>
            Acquires the credentials handle.
            </summary>
            <param name="principal">The principal.</param>
            <param name="package">The package.</param>
            <param name="credentialUsage">The credential usage.</param>
            <param name="logonId">The logon id.</param>
            <param name="identity">The identity.</param>
            <param name="keyCallback">The key callback.</param>
            <param name="keyArgument">The key argument.</param>
            <param name="credentialHandle">The credential handle.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa374712(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.DeleteSecurityContext(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@)">
            <summary>
            Deletes the security context.
            </summary>
            <param name="context">The context.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375354(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.DecryptMessage(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor@,System.UInt32,System.UInt32@)">
            <summary>
            Decrypts the message.
            </summary>
            <param name="context">The context.</param>
            <param name="pMessage">The p message.</param>
            <param name="sequenceNumber">The sequence number.</param>
            <param name="quality">The quality.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375211(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.EncryptMessage(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,MongoDB.Driver.Authentication.Gssapi.Sspi.EncryptQualityOfProtection,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor@,System.UInt32)">
            <summary>
            Encrypts the message.
            </summary>
            <param name="context">The context.</param>
            <param name="quality">The quality.</param>
            <param name="pMessage">The p message.</param>
            <param name="sequenceNumber">The sequence number.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375378(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.EnumerateSecurityPackages(System.UInt32@,System.IntPtr@)">
            <summary>
            Enumerates the security packages.
            </summary>
            <param name="numPackages">The pc packages.</param>
            <param name="securityPackageInfoArray">The pp package information.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/aa375397%28v=VS.85%29.aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.FreeContextBuffer(System.IntPtr)">
            <summary>
            Frees the context buffer.
            </summary>
            <param name="contextBuffer">The context buffer.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/aa375416(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.FreeCredentialsHandle(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@)">
            <summary>
            Frees the credentials handle.
            </summary>
            <param name="sspiHandle">The sspi handle.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375417(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.InitializeSecurityContext(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,System.IntPtr,System.String,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags,System.Int32,MongoDB.Driver.Authentication.Gssapi.Sspi.DataRepresentation,System.IntPtr,System.Int32,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor@,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags@,System.Int64@)">
            <summary>
            Initializes the security context.
            </summary>
            <param name="credentialHandle">The credential handle.</param>
            <param name="inContextPtr">The in context PTR.</param>
            <param name="targetName">Name of the target.</param>
            <param name="flags">The flags.</param>
            <param name="reserved1">The reserved1.</param>
            <param name="dataRepresentation">The data representation.</param>
            <param name="inputBuffer">The input buffer.</param>
            <param name="reserved2">The reserved2.</param>
            <param name="outContextHandle">The out context handle.</param>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outAttributes">The out attributes.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375506(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.InitializeSecurityContext(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,System.String,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags,System.Int32,MongoDB.Driver.Authentication.Gssapi.Sspi.DataRepresentation,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor@,System.Int32,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor@,MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags@,System.Int64@)">
            <summary>
            Initializes the security context.
            </summary>
            <param name="credentialHandle">The credential handle.</param>
            <param name="inContextHandle">The in context handle.</param>
            <param name="targetName">Name of the target.</param>
            <param name="flags">The flags.</param>
            <param name="reserved1">The reserved1.</param>
            <param name="dataRepresentation">The data representation.</param>
            <param name="inputBuffer">The input buffer.</param>
            <param name="reserved2">The reserved2.</param>
            <param name="outContext">The out context.</param>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outAttributes">The out attributes.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375506(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.NativeMethods.QueryContextAttributes(MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle@,MongoDB.Driver.Authentication.Gssapi.Sspi.QueryContextAttributes,MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityPackageContextSizes@)">
            <summary>
            Queries the context attributes.
            </summary>
            <param name="inContextHandle">The in context handle.</param>
            <param name="attribute">The attribute.</param>
            <param name="sizes">The sizes.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379326(v=vs.85).aspx
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.QueryContextAttributes">
            <summary>
            Flags for QueryContextAttributes.
            </summary>
            <remarks>
            See the ulAttribute parameter at
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379326(v=vs.85).aspx.
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.QueryContextAttributes.Sizes">
            <summary>
            SECPKG_ATTR_SIZES
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBuffer">
            <summary>
            A SecBuffer structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379814(v=vs.85).aspx
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor">
            <summary>
            A SecBufferDesc structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379815(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferDescriptor.ToByteArray">
            <summary>
            To the byte array.
            </summary>
            <returns>A byte array.</returns>
            <exception cref="T:System.InvalidOperationException">Object has already been disposed!!!</exception>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType">
            <summary>
            Types for the SecurityBuffer structure.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType.Version">
            <summary>
            SECBUFFER_VERSION
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType.Empty">
            <summary>
            SECBUFFER_EMPTY
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType.Data">
            <summary>
            SECBUFFER_DATA
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType.Token">
            <summary>
            SECBUFFER_TOKEN
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType.Padding">
            <summary>
            SECBUFFER_PADDING
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityBufferType.Stream">
            <summary>
            SECBUFFER_STREAM
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityCredentialUse">
            <summary>
            Flags for AcquireCredentialsHandle.
            </summary>
            <remarks>
            See the fCredentialUse at http://msdn.microsoft.com/en-us/library/windows/desktop/aa374712(v=vs.85).aspx.
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityCredentialUse.Outbound">
            <summary>
            SECPKG_CRED_OUTBOUND
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityPackageContextSizes">
            <summary>
            A SecPkgContext_Sizes structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa380097(v=vs.85).aspx
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SecurityPackageInfo">
            <summary>
            A SecPkgInfo structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa380104(v=vs.85).aspx
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags">
            <summary>
            Flags for InitiateSecurityContext.
            </summary>
            <remarks>
            See the fContextReq parameter at
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375507(v=vs.85).aspx
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags.MutualAuth">
            <summary>
            ISC_REQ_MUTUAL_AUTH
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags.Confidentiality">
            <summary>
            ISC_REQ_CONFIDENTIALITY
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiContextFlags.InitIntegrity">
            <summary>
            ISC_REQ_INTEGRITY
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle">
            <summary>
            A SecHandle structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa380495(v=vs.85).aspx
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle.IsZero">
            <summary>
            Gets a value indicating whether this instance is zero.
            </summary>
            <value>
              <c>true</c> if this instance is zero; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiHandle.SetToInvalid">
            <summary>
            Sets to invalid.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiPackage">
            <summary>
            This is represented as a string in AcquireCredentialsHandle. This value will have .ToString() called on it.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiPackage.Kerberos">
            <summary>
            Kerberos
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiSecurityContext">
            <summary>
            A wrapper around the SspiHandle structure specifically used as a security context handle.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiSecurityCredential">
            <summary>
            A wrapper around the SspiHandle structure specifically used as a credential handle.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.SspiSecurityCredential.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception">
            <summary>
            Thrown from a win32 wrapped operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception.#ctor(System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Gssapi.Sspi.Win32Exception" /> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.Authentication.GssapiException">
            <summary>
            Thrown from a GSSAPI-related method.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.GssapiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.GssapiException" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.GssapiException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.GssapiException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.GssapiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.GssapiException" /> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.Authentication.ISaslMechanism">
            <summary>
            Represents a SASL mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.ISaslMechanism.Name">
            <summary>
            Gets the name of the mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.ISaslMechanism.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanism.CreateSpeculativeAuthenticationStep">
            <summary>
            Creates speculative authentication step if supported.
            </summary>
            <returns>Speculative authenticate step if supported by mechanism, otherwise <value>null</value>.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanism.CustomizeSaslStartCommand(MongoDB.Bson.BsonDocument)">
            <summary>
            Optionally customizes SASL start command.
            </summary>
            <param name="startCommand">Sasl Start Command</param>
            <returns>Mutated command</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanism.OnReAuthenticationRequired">
            <summary>
            Method called when server returns 391 error (ReauthenticationRequired), so auth mechanism can clear cache or perform another activity to reset mechanism internal state.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanism.Initialize(MongoDB.Driver.Authentication.SaslConversation,MongoDB.Driver.Core.Connections.ConnectionDescription)">
            <summary>
            Initializes the SASL conversation for the connection.
            </summary>
            <param name="conversation">The SASL conversation.</param>
            <param name="description">The connection description.</param>
            <returns>The initial SASL step.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanism.TryHandleAuthenticationException(MongoDB.Driver.MongoException,MongoDB.Driver.Authentication.ISaslStep,MongoDB.Driver.Authentication.SaslConversation,MongoDB.Driver.Core.Connections.ConnectionDescription,MongoDB.Driver.Authentication.ISaslStep@)">
            <summary>
            Tries to handle the authentication exception.
            </summary>
            <param name="exception">The exception.</param>
            <param name="step">The step caused the exception.</param>
            <param name="conversation">The SASL conversation.</param>
            <param name="description">The connection description.</param>
            <param name="nextStep">Next step to continue authentication with.</param>
            <returns><value>true</value> if the exception was handled and authentication can be continued with <paramref name="nextStep"/>; otherwise <value>false</value></returns>
        </member>
        <member name="T:MongoDB.Driver.Authentication.ISaslMechanismRegistry">
            <summary>
            SASL Mechanism Registry.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanismRegistry.Register(System.String,System.Func{MongoDB.Driver.Authentication.SaslContext,MongoDB.Driver.Authentication.ISaslMechanism})">
            <summary>
            Registers new SASL mechanism factory.
            </summary>
            <param name="mechanismName">Mechanism name.</param>
            <param name="factory">Factory method.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslMechanismRegistry.TryCreate(MongoDB.Driver.Authentication.SaslContext,MongoDB.Driver.Authentication.ISaslMechanism@)">
            <summary>
            Creates SASL mechanism if possible.
            </summary>
            <param name="context">Sasl context.</param>
            <param name="mechanism">When this method succeeds contains the created mechanism, otherwise <value>null</value>.</param>
            <returns><value>true</value> if the requested provider was created, otherwise <value>false</value>.</returns>
        </member>
        <member name="T:MongoDB.Driver.Authentication.ISaslStep">
            <summary>
            Represents a SASL step.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslStep.Execute(MongoDB.Driver.Authentication.SaslConversation,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Executes the SASL step and create the next step.
            </summary>
            <param name="conversation">The SASL conversation.</param>
            <param name="bytesReceivedFromServer">The bytes received from server.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The next SASL step.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ISaslStep.ExecuteAsync(MongoDB.Driver.Authentication.SaslConversation,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Executes the SASL step and create the next step.
            </summary>
            <param name="conversation">The SASL conversation.</param>
            <param name="bytesReceivedFromServer">The bytes received from server.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The next SASL step.</returns>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters">
            <summary>
            Represents OIDC callback request.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters" /> class.
            </summary>
            <param name="version">Callback API version number.</param>
            <param name="userName">User name.</param>
        </member>
        <member name="P:MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters.Version">
            <summary>
            Callback API version number.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Oidc.OidcAccessToken">
            <summary>
            Represents OIDC callback response.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Oidc.OidcAccessToken.#ctor(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.Oidc.OidcAccessToken" /> class.
            </summary>
            <param name="accessToken">OIDC Access Token string.</param>
            <param name="expiresIn">Expiration duration for the Access Token.</param>
        </member>
        <member name="P:MongoDB.Driver.Authentication.Oidc.OidcAccessToken.AccessToken">
            <summary>
            OIDC Access Token string.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.Oidc.OidcAccessToken.ExpiresIn">
            <summary>
            Expiration duration for the Access Token.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.Oidc.IOidcCallback">
            <summary>
            Represents OIDC callback provider.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Oidc.IOidcCallback.GetOidcAccessToken(MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters,System.Threading.CancellationToken)">
            <summary>
            Get OIDC callback response.
            </summary>
            <param name="parameters">The information used by callbacks to authenticate with the Identity Provider.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>OIDC callback response</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.Oidc.IOidcCallback.GetOidcAccessTokenAsync(MongoDB.Driver.Authentication.Oidc.OidcCallbackParameters,System.Threading.CancellationToken)">
            <summary>
            Get OIDC callback response.
            </summary>
            <param name="parameters">The information used by callbacks to authenticate with the Identity Provider.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>OIDC callback response</returns>
        </member>
        <member name="T:MongoDB.Driver.Authentication.SaslContext">
            <summary>
            Represents SASL context.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslContext.EndPoint">
            <summary>
            Remove endpoint of the current connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslContext.ClusterEndPoints">
            <summary>
            Cluster's end points.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslContext.Identity">
            <summary>
            Identity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslContext.IdentityEvidence">
            <summary>
            Identity Evidence.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslContext.Mechanism">
            <summary>
            Configured SASL Mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslContext.MechanismProperties">
            <summary>
            SASL Mechanism's properties.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.SaslConversation">
            <summary>
            Represents a SASL conversation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslConversation.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Net.EndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.SaslConversation"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="endPoint">The connection remote EndPoint</param>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslConversation.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Authentication.SaslConversation.EndPoint">
            <summary>
            Gets the connection remote EndPoint.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslConversation.RegisterItemForDisposal(System.IDisposable)">
            <summary>
            Registers the item for disposal.
            </summary>
            <param name="item">The disposable item.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslConversation.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Authentication.SaslMapParser">
            <summary>
            Per RFC5802: https://tools.ietf.org/html/rfc5802
            "SCRAM is a SASL mechanism whose client response and server challenge
            messages are text-based messages containing one or more attribute-
            value pairs separated by commas. Each attribute has a one-letter
            name."  
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Authentication.SaslPrepHelper">
            <summary>
            Utility class for Sasl string preparation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.SaslPrepQuery(System.String)">
            <summary>
            Return the SASLPrep-canonicalised version of the given <paramref name="str"/> for use as a query string.
            This implements the {@code SASLPrep} algorithm defined in <a href="https://tools.ietf.org/html/rfc4013">RFC 4013</a>.
            See <a href="https://tools.ietf.org/html/rfc3454#section-7">RFC 3454, Section 7</a> for discussion of what a
            query string is.
            </summary>
            <param name="str">The string to canonicalise.</param>
            <returns>The canonicalised string.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.SaslPrepStored(System.String)">
             <summary>
             Return the SASLPrep-canonicalised version of the given <paramref name="str"/> for use as a stored string.
             This implements the SASLPrep algorithm defined in <a href="https://tools.ietf.org/html/rfc4013">RFC 4013</a>.
             See <a href="https://tools.ietf.org/html/rfc3454#section-7">RFC 3454, Section 7</a> for discussion of what a
             stored string is.
             </summary>
            <param name="str">The string to canonicalise.</param>
            <returns>The canonicalised string.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.AsciiControl(System.Char)">
            <summary>
            Return true if the given <paramref name="ch"/> is an ASCII control character as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.2.1">RFC 3454, Appendix C.2.1</a>. 
            </summary>
            <param name="ch">The character.</param>
            <returns>Whether the given character is an ASCII control character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.ChangeDisplayProperties(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is a "change display properties" or a deprecated
            character as defined by <a href="https://tools.ietf.org/html/rfc3454#appendix-C.8">RFC 3454, Appendix C.8</a>.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether the codepoint is a "change display properties" or a deprecated character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.CharCount(System.Int32)">
            <summary>
            Returns the number of characters required to represent a specified Unicode character.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Number of characters required to represent a specified Unicode character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.InappropriateForCanonical(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is inappropriate for canonical representation
            characters as defined by <a href="https://tools.ietf.org/html/rfc3454#appendix-C.7">RFC 3454, Appendix C.7</a>. 
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>True if the codepoint is inappropriate for canonical.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.InappropriateForPlainText(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is inappropriate for plain text characters as defined
            by <a href="https://tools.ietf.org/html/rfc3454#appendix-C.6">RFC 3454, Appendix C.6</a>.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>True if the codepoint is inappropriate for plain text.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.IsDefined(System.Int32)">
            <summary>
            Returns whether or not a Unicode character represented by a codepoint is defined in Unicode.
            A character is considered to be defined if its Unicode designation is "Cn" (other, not assigned) OR if it is
            part of a surrogate pair.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether or not the Unicode character represnted by codepoint is defined in Unicode.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.IsLCat(System.Int32)">
            <summary>
            Returns whether or not a Unicode character represented by a codepoint is an "LCat" character.
            See <a href="https://tools.ietf.org/html/rfc3454#section-6">RFC 3454: Section 6</a> and
            <a href="https://tools.ietf.org/html/rfc3454#appendix-D.2">RFC 3454: Appendix D.2 </a> for more details.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether or not the character is an "LCat" character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.IsRandALcat(System.Int32)">
            <summary>
            Returns whether or not a Unicode character represented by a codepoint is an "RandALCat" character.
            See <a href="https://tools.ietf.org/html/rfc3454#section-6">RFC 3454: Section 6</a> and
            <a href="https://tools.ietf.org/html/rfc3454#appendix-D.1">RFC 3454: Appendix D.1 </a> for more details.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether or not the character is an "RandALCat" character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.MappedToNothing(System.Char)">
            <summary>
             Return true if the given <paramref name="ch"/> is a "commonly mapped to nothing" character as defined by
             <a href="https://tools.ietf.org/html/rfc3454#appendix-B.1">RFC 3454, Appendix B.1</a>. 
            </summary>
            <param name="ch">The character.</param>
            <returns>Whether the given character is a "commonly mapped to nothing" character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.NonAsciiControl(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is a non-ASCII control character as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.2.2">RFC 3454, Appendix C.2.2</a>. 
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether the given character is a non-ASCII control character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.NonAsciiSpace(System.Char)">
            <summary>
            Return true if the given <paramref name="ch"/> is a non-ASCII space character as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.1.2">RFC 3454, Appendix C.1.2</a>. 
            </summary>
            <param name="ch">The character.</param>
            <returns>Whether the given character is a non-ASCII space character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.NonCharacterCodepoint(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is a non-character code point as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.4">RFC 3454, Appendix C.4</a>.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether the given <paramref name="codepoint"/> is a non-character code point.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.PrivateUse(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is a private use character as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.3">RFC 3454, Appendix C.3</a>.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether if the given codepoint is a private use character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.Prohibited(System.Int32)">
             <summary>
             Return true if the given <paramref name="codepoint"/> is a prohibited character as defined by
            <a href="https://tools.ietf.org/html/rfc4013#section-2.3">RFC 4013, Section 2.3</a>. 
             </summary>
             <param name="codepoint">The Unicode character's codepoint.</param>
             <returns>Whether the codepoint is a prohibited character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.Surrogatecodepoint(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is a surrogate code point as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.5">RFC 3454, Appendix C.5</a>.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>Whether the given <paramref name="codepoint"/> is a surrogate code point.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.SaslPrepHelper.Tagging(System.Int32)">
            <summary>
            Return true if the given <paramref name="codepoint"/> is a tagging character as defined by
            <a href="https://tools.ietf.org/html/rfc3454#appendix-C.9">RFC 3454, Appendix C.9</a>.
            </summary>
            <param name="codepoint">The Unicode character's codepoint.</param>
            <returns>True if the codepoint is a tagging character.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ScramSha.IScramShaAlgorithm.H(System.Byte[])">
            <summary>
            An H function as defined in RFC5802.
            </summary>
            <param name="data">The data to hash. Also called "str" in RFC5802.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ScramSha.IScramShaAlgorithm.Hi(MongoDB.Driver.Authentication.UsernamePasswordCredential,System.Byte[],System.Int32)">
            <summary>
            A Hi function used to compute the SaltedPassword as defined in RFC5802, except with "str" parameter replaced
            with a UsernamePassword credential so that the password can be optionally digested/prepped in a secure fashion
            before being consumed as the "str" parameter would be in RFC5802's Hi.
            </summary>
            <param name="credentials">The credential to be digested/prepped before being consumed as the "str"
            parameter would be in RFC5802's Hi</param>
            <param name="salt">The salt.</param>
            <param name="iterations">The iteration count.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ScramSha.IScramShaAlgorithm.Hmac(System.Text.UTF8Encoding,System.Byte[],System.String)">
            <summary>
            An HMAC function as defined in RFC5802, plus the encoding of the data.
            </summary>
            <param name="encoding">The encoding of the data.</param>
            <param name="data">The data. Also called "str" in RFC5802.</param>
            <param name="key">The key.</param>
        </member>
        <member name="T:MongoDB.Driver.Authentication.ScramSha.ScramCache">
            <summary>
            A cache for Client and Server keys, to be used during authentication.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ScramSha.ScramCache.TryGet(MongoDB.Driver.Authentication.ScramSha.ScramCacheKey,MongoDB.Driver.Authentication.ScramSha.ScramCacheEntry@)">
            <summary>
            Try to get a cached entry.
            </summary>
            <param name="key">The key.</param>
            <param name="entry">The entry.</param>
            <returns>True if the cache contained an entry for the key.</returns>
        </member>
        <member name="M:MongoDB.Driver.Authentication.ScramSha.ScramCache.Add(MongoDB.Driver.Authentication.ScramSha.ScramCacheKey,MongoDB.Driver.Authentication.ScramSha.ScramCacheEntry)">
            <summary>
            Add a cached entry.
            </summary>
            <param name="key">The key.</param>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.UsernamePasswordCredential.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.UsernamePasswordCredential"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:MongoDB.Driver.Authentication.UsernamePasswordCredential.#ctor(System.String,System.String,System.Security.SecureString)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Authentication.UsernamePasswordCredential"/> class.
            Less secure when used in conjunction with SCRAM-SHA-256, due to the need to store the password in a managed
            string in order to SaslPrep it.
            See <a href="https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst#scram-sha-256">Driver Authentication: SCRAM-SHA-256</a>
            for additional details.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="T:MongoDB.Driver.AutoEncryptionOptions">
            <summary>
            Auto encryption options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AutoEncryptionOptions.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},MongoDB.Driver.Optional{MongoDB.Driver.IMongoClient},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument}},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Driver.SslSettings}},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AutoEncryptionOptions"/> class.
            </summary>
            <param name="keyVaultNamespace">The keyVault namespace.</param>
            <param name="kmsProviders">The kms providers.</param>
            <param name="bypassAutoEncryption">The bypass auto encryption flag.</param>
            <param name="extraOptions">The extra options.</param>
            <param name="keyVaultClient">The keyVault client.</param>
            <param name="schemaMap">The schema map.</param>
            <param name="tlsOptions">The tls options.</param>
            <param name="encryptedFieldsMap">The encryptedFields map.</param>
            <param name="bypassQueryAnalysis">The bypass query analysis flag.</param>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.BypassAutoEncryption">
            <summary>
            Gets a value indicating whether to bypass automatic encryption.
            </summary>
            <value>
              <c>true</c> if automatic encryption should be bypasssed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.BypassQueryAnalysis">
            <summary>
            Gets a value indicating whether to bypass query analysis.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.EncryptedFieldsMap">
            <summary>
            Gets the encrypted fields map.
            Supplying an encryptedFieldsMap provides more security than relying on an encryptedFields obtained from the server. It protects against a malicious server advertising a false encryptedFields.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.ExtraOptions">
            <summary>
            Gets the extra options.
            </summary>
            <value>
            The extra options.
            </value>
            <remarks>
            All MongoClient objects in the same process should use the same setting for extraOptions.cryptSharedLibPath,
            as it is an error to load more that one crypt_shared dynamic library simultaneously in a single operating system process.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.KeyVaultClient">
            <summary>
            Gets the key vault client.
            </summary>
            <value>
            The key vault client.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.KeyVaultNamespace">
            <summary>
            Gets the key vault namespace.
            </summary>
            <value>
            The key vault namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.KmsProviders">
            <summary>
            Gets the KMS providers.
            </summary>
            <value>
            The KMS providers.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.TlsOptions">
            <summary>
            Gets the tls options.
            </summary>
            <value>
            The tls options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AutoEncryptionOptions.SchemaMap">
            <summary>
            Gets the schema map.
            </summary>
            <value>
            The schema map.
            </value>
        </member>
        <member name="M:MongoDB.Driver.AutoEncryptionOptions.With(MongoDB.Driver.Optional{MongoDB.Driver.CollectionNamespace},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}}},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},MongoDB.Driver.Optional{MongoDB.Driver.IMongoClient},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument}},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Driver.SslSettings}},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument}})">
            <summary>
            Returns a new instance of the <see cref="T:MongoDB.Driver.AutoEncryptionOptions"/> class.
            </summary>
            <param name="keyVaultNamespace">The keyVault namespace.</param>
            <param name="kmsProviders">The kms providers.</param>
            <param name="bypassAutoEncryption">The bypass auto encryption flag.</param>
            <param name="bypassQueryAnalysis">The bypass query analysis flag.</param>
            <param name="extraOptions">The extra options.</param>
            <param name="keyVaultClient">The keyVault client.</param>
            <param name="schemaMap">The schema map.</param>
            <param name="tlsOptions">The tls options.</param>
            <param name="encryptedFieldsMap">The encryptedFields map.</param>
            <returns>A new instance of <see cref="T:MongoDB.Driver.AutoEncryptionOptions"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.AutoEncryptionOptions.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AutoEncryptionOptions.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AutoEncryptionOptions.ToString">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Builders`1">
            <summary>
            A static helper class containing various builders.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Filter">
            <summary>Gets a <see cref="T:MongoDB.Driver.FilterDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.IndexKeys">
            <summary>Gets an <see cref="T:MongoDB.Driver.IndexKeysDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Projection">
            <summary>Gets a <see cref="T:MongoDB.Driver.ProjectionDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.SetFields">
            <summary>Gets a <see cref="T:MongoDB.Driver.SetFieldDefinitionsBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Sort">
            <summary>Gets a <see cref="T:MongoDB.Driver.SortDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Update">
            <summary>Gets an <see cref="T:MongoDB.Driver.UpdateDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.SearchFacet">
            <summary>Gets a <see cref="T:MongoDB.Driver.Search.SearchFacetBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.SearchPath">
            <summary>Gets a <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.SearchScore">
            <summary>Gets a <see cref="T:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.SearchScoreFunction">
            <summary>Gets a <see cref="T:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Search">
            <summary>Gets a <see cref="T:MongoDB.Driver.Search.SearchDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.SearchSpan">
            <summary> Gets a <see cref="T:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1"/>.</summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteDeleteManyModel`1">
            <summary>
            Represents delete many operation in the scope of BulkWrite operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteDeleteManyModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteDeleteManyModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteDeleteManyModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteDeleteManyModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteManyModel`1.Collation">
            <summary>
            Specifies a collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteManyModel`1.Filter">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteManyModel`1.Hint">
            <summary>
            The index to use.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteDeleteOneModel`1">
            <summary>
            Represents delete one operation in the scope of BulkWrite operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteDeleteOneModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteDeleteOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteDeleteOneModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteDeleteOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteOneModel`1.Collation">
            <summary>
            Specifies a collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteOneModel`1.Filter">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteOneModel`1.Hint">
            <summary>
            The index to use.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteDeleteResult">
            <summary>
            Represents result <see cref="T:MongoDB.Driver.BulkWriteDeleteOneModel`1"/> or <see cref="T:MongoDB.Driver.BulkWriteDeleteManyModel`1"/> operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteDeleteResult.DeletedCount">
            <summary>
            The number of documents that were deleted.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteError">
            <summary>
            Represents the details of a write error for a particular request.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteError.Index">
            <summary>
            Gets the index of the request that had an error.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteInsertOneModel`1">
            <summary>
            Represents insert one operation in the scope of BulkWrite operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteInsertOneModel`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteInsertOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteInsertOneModel`1.#ctor(MongoDB.Driver.CollectionNamespace,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteInsertOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteInsertOneModel`1.Document">
            <summary>
            The document to insert
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteInsertOneResult">
            <summary>
            Represents result of <see cref="T:MongoDB.Driver.BulkWriteInsertOneModel`1"/> operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteInsertOneResult.InsertedId">
            <summary>
            The id of the inserted document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteModel">
            <summary>
            Represents base class for all operations in the scope of bulk write.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteModel.#ctor(MongoDB.Driver.CollectionNamespace)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteModel"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteModel.Namespace">
            <summary>
            The namespace on which to perform the operation.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteOptions">
            <summary>
            Options for a bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteOptions"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteOptions.IsOrdered">
            <summary>
            Gets or sets a value indicating whether the requests are fulfilled in order.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteOptions.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteReplaceOneModel`1">
            <summary>
            Represents replace one operation in the scope of BulkWrite operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteReplaceOneModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteReplaceOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="replacement">Update definition.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">A value indicating whether to insert the document if it doesn't already exist.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteReplaceOneModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteReplaceOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="replacement">Update definition.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteReplaceOneModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.SortDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteReplaceOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="replacement">Update definition.</param>
            <param name="sort">The sort definition to use.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">A value indicating whether to insert the document if it doesn't already exist.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteReplaceOneModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.SortDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteReplaceOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="replacement">Update definition.</param>
            <param name="sort">The sort definition to use.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteReplaceOneModel`1.Collation">
            <summary>
            Specifies a collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteReplaceOneModel`1.Filter">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteReplaceOneModel`1.Hint">
            <summary>
            The index to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteReplaceOneModel`1.IsUpsert">
            <summary>
            Indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteReplaceOneModel`1.Replacement">
            <summary>
            Update definition.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteReplaceOneModel`1.Sort">
            <summary>
            The sort definition to use.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult">
            <summary>
            Represents the result of a bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.DeletedCount">
            <summary>
            Gets the number of documents that were deleted.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.InsertedCount">
            <summary>
            Gets the number of documents that were inserted.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The available modified count.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.MatchedCount">
            <summary>
            Gets the number of documents that were matched.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.ModifiedCount">
            <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.RequestCount">
            <summary>
            Gets the request count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.Upserts">
            <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult`1">
            <summary>
            Represents the result of a bulk write operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult`1.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.WriteModel{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult" /> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="processedRequests">The processed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.ProcessedRequests">
            <summary>
            Gets the processed requests.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult`1.Acknowledged">
            <summary>
            Result from an acknowledged write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult`1.Acknowledged.#ctor(System.Int32,System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IReadOnlyList{MongoDB.Driver.WriteModel{`0}},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteUpsert})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult`1.Acknowledged" /> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="matchedCount">The matched count.</param>
            <param name="deletedCount">The deleted count.</param>
            <param name="insertedCount">The inserted count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="processedRequests">The processed requests.</param>
            <param name="upserts">The upserts.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.InsertedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.Upserts">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult`1.Unacknowledged">
            <summary>
            Result from an unacknowledged write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.WriteModel{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult`1.Unacknowledged"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="processedRequests">The processed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.InsertedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.Upserts">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteUpdateManyModel`1">
            <summary>
            Represents update many operation in the scope of BulkWrite operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpdateManyModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean,System.Collections.Generic.IEnumerable{MongoDB.Driver.ArrayFilterDefinition})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteUpdateManyModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="update">Update definition.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
            <param name="arrayFilters">A set of filters specifying to which array elements an update should apply.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpdateManyModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean,System.Collections.Generic.IEnumerable{MongoDB.Driver.ArrayFilterDefinition})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteUpdateManyModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="update">Update definition.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
            <param name="arrayFilters">A set of filters specifying to which array elements an update should apply.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateManyModel`1.ArrayFilters">
            <summary>
            A set of filters specifying to which array elements an update should apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateManyModel`1.Collation">
            <summary>
            Specifies a collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateManyModel`1.Filter">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateManyModel`1.Hint">
            <summary>
            The index to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateManyModel`1.IsUpsert">
            <summary>
            Indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateManyModel`1.Update">
            <summary>
            Update definition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteUpdateOneModel`1">
            <summary>
            Represents update one operation in the scope of BulkWrite operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpdateOneModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean,System.Collections.Generic.IEnumerable{MongoDB.Driver.ArrayFilterDefinition})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteUpdateOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="update">Update definition.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
            <param name="arrayFilters">A set of filters specifying to which array elements an update should apply.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpdateOneModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean,System.Collections.Generic.IEnumerable{MongoDB.Driver.ArrayFilterDefinition})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteUpdateOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="update">Update definition.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
            <param name="arrayFilters">A set of filters specifying to which array elements an update should apply.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpdateOneModel`1.#ctor(System.String,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.SortDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean,System.Collections.Generic.IEnumerable{MongoDB.Driver.ArrayFilterDefinition})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteUpdateOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="update">Update definition.</param>
            <param name="sort">The sort definition to use.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
            <param name="arrayFilters">A set of filters specifying to which array elements an update should apply.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpdateOneModel`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.SortDefinition{`0},MongoDB.Driver.Collation,MongoDB.Bson.BsonValue,System.Boolean,System.Collections.Generic.IEnumerable{MongoDB.Driver.ArrayFilterDefinition})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteUpdateOneModel`1"/> class.
            </summary>
            <param name="collectionNamespace">Collection on which the operation should be performed.</param>
            <param name="filter">The filter to apply.</param>
            <param name="update">Update definition.</param>
            <param name="sort">The sort definition to use.</param>
            <param name="collation">Specifies a collation.</param>
            <param name="hint">The index to use.</param>
            <param name="isUpsert">Indicating whether to insert the document if it doesn't already exist.</param>
            <param name="arrayFilters">A set of filters specifying to which array elements an update should apply.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.ArrayFilters">
            <summary>
            A set of filters specifying to which array elements an update should apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.Collation">
            <summary>
            Specifies a collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.Filter">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.Hint">
            <summary>
            The index to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.IsUpsert">
            <summary>
            Indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.Sort">
            <summary>
            The sort definition to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateOneModel`1.Update">
            <summary>
            Update definition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteUpdateResult">
            <summary>
            Represents update operation result in the scope of BulkWrite.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateResult.MatchedCount">
            <summary>
            The number of documents that matched the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateResult.ModifiedCount">
            <summary>
            The number of documents that were modified.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpdateResult.UpsertedId">
            <summary>
            The _id field of the upserted document if an upsert occurred.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteUpsert">
            <summary>
            Represents the information about one Upsert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpsert.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpsert.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpsert.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpsert.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamOptions">
            <summary>
            Options for a change stream operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.BatchSize">
            <summary>
            Gets or sets the size of the batch.
            </summary>
            <value>
            The size of the batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
            <value>
            The collation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.FullDocument">
            <summary>
            Gets or sets the full document.
            </summary>
            <value>
            The full document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.FullDocumentBeforeChange">
            <summary>
            Gets or sets the full document before change.
            </summary>
            <value>
            The full document before change.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time.
            </summary>
            <value>
            The maximum await time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.ResumeAfter">
            <summary>
            Gets or sets the resume after.
            </summary>
            <value>
            The resume after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.ShowExpandedEvents">
            <summary>
            Gets or sets whether the change stream should show expanded events (MongoDB 6.0 and later).
            Expanded change stream events include:
            <list type="bullet">
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Create"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.CreateIndexes"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.DropIndexes"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Modify"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.RefineCollectionShardKey"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.ReshardCollection"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.ShardCollection"/></description></item>
            </list>
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.StartAfter">
            <summary>
            Gets or sets the start after.
            </summary>
            <value>
            The start after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.StartAtOperationTime">
            <summary>
            Gets or sets the start at operation time.
            </summary>
            <value>
            The start at operation time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions">
            <summary>
            Change stream pre and post images options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions"/> class.
            </summary>
            <param name="bsonDocument">The backing document.</param>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions.BackingDocument">
            <summary>
            Gets the backing document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamPreAndPostImagesOptions.Enabled">
            <summary>
            Gets or sets a value indicating whether ChangeStreamPreAndPostImages is enabled.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamStageOptions">
            <summary>
            Options for a $changeStream stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.AllChangesForCluster">
            <summary>
            Gets or sets whether to include all changes for an entire cluster in the change stream.
            </summary>
            <value>
            Whether to include all changes for an entire cluster in the change stream.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.FullDocument">
            <summary>
            Gets or sets the full document.
            </summary>
            <value>
            The full document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.ResumeAfter">
            <summary>
            Gets or sets the resume after.
            </summary>
            <value>
            The resume after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.StartAfter">
            <summary>
            Get or sets the start after.
            </summary>
            <value>
            The start after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.StartAtOperationTime">
            <summary>
            Gets or sets the start at operation time.
            </summary>
            <value>
            The start at operation time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ClientBulkWriteException">
            <summary>
            Represents a bulk write exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ClientBulkWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Collections.Generic.IReadOnlyDictionary{System.Int32,MongoDB.Driver.WriteError},MongoDB.Driver.ClientBulkWriteResult,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.MongoWriteConcernException},System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClientBulkWriteException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="writeErrors">Errors that occurred during the execution of individual write operations.</param>
            <param name="partialResult">The results of any successful operations that were performed before the error was encountered.</param>
            <param name="writeConcernErrors">Write concern errors that occurred while executing the bulk write.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteException.PartialResult">
            <summary>
            The results of any successful operations that were performed before the error was encountered.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteException.WriteConcernErrors">
            <summary>
            Write concern errors that occurred while executing the bulk write.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteException.WriteErrors">
            <summary>
            Errors that occurred during the execution of individual write operations.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ClientBulkWriteOptions">
            <summary>
            Options for a bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ClientBulkWriteOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteOptions"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ClientBulkWriteOptions.#ctor(System.Boolean,System.Nullable{System.Boolean},System.Boolean,MongoDB.Driver.WriteConcern,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteOptions"/> class.
            </summary>
            <param name="isOrdered"></param>
            <param name="bypassDocumentValidation"></param>
            <param name="verboseResult"></param>
            <param name="writeConcern"></param>
            <param name="let"></param>
            <param name="comment"></param>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteOptions.BypassDocumentValidation">
            <summary>
            Bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteOptions.Comment">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteOptions.IsOrdered">
            <summary>
            A value indicating is bulk requests are fulfilled in order.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteOptions.Let">
            <summary>
            Let document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteOptions.VerboseResult">
            <summary>
            Whether detailed results for each successful operation should be included in the returned results.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteOptions.WriteConcern">
            <summary>
            The write concern to use for this bulk write.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ClientBulkWriteResult">
            <summary>
            Represents BulkWrite operation results.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.Acknowledged">
            <summary>
            Indicates whether this bulk write result was acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.InsertedCount">
            <summary>
            The total number of documents inserted across all insert operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.UpsertedCount">
            <summary>
            The total number of documents upserted across all update operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.MatchedCount">
            <summary>
            The total number of documents matched across all update operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.ModifiedCount">
            <summary>
            The total number of documents modified across all update operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.DeletedCount">
            <summary>
            The total number of documents deleted across all delete operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.InsertResults">
            <summary>
            The results of each individual insert operation that was successfully performed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.UpdateResults">
            <summary>
            The results of each individual update operation that was successfully performed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientBulkWriteResult.DeleteResults">
            <summary>
            The results of each individual delete operation that was successfully performed.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ClientSessionHandle">
            <summary>
            A client session handle.
            </summary>
            <seealso cref="T:MongoDB.Driver.IClientSessionHandle" />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.#ctor(MongoDB.Driver.IMongoClient,MongoDB.Driver.ClientSessionOptions,MongoDB.Driver.Core.Bindings.ICoreSessionHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClientSessionHandle" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <param name="coreSession">The wrapped session.</param>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.Client">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.ClusterTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.IsImplicit">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.IsInTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.OperationTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.ServerSession">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.WrappedCoreSession">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AbortTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AbortTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.CommitTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.CommitTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.Fork">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.WithTransaction``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,``0},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.WithTransactionAsync``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ClientSessionOptions">
            <summary>
            Client session options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionOptions.CausalConsistency">
            <summary>
            When true or unspecified, an application will read its own writes and subsequent
            reads will never observe an earlier version of the data.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionOptions.DefaultTransactionOptions">
            <summary>
            Gets or sets the default transaction options.
            </summary>
            <value>
            The default transaction options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionOptions.Snapshot">
            <summary>
            Gets or sets a value indicating whether snapshot reads are requested.
            </summary>
            <value>
              <c>true</c> if snapshot reads are requested; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ClientSideProjectionDeserializer`2">
            <summary>
            A deserializer for doing client side projections.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ClientSideProjectionDeserializer`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0},System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClientSideProjectionDeserializer`2"/> class.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="projector">The client side projector.</param>
        </member>
        <member name="M:MongoDB.Driver.ClientSideProjectionDeserializer`2.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ClusteredIndexOptions`1">
            <summary>
            Options for creating a clustered index.
            </summary>
            <typeparam name="TDocument">The document type.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ClusteredIndexOptions`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClusteredIndexOptions`1"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClusteredIndexOptions`1.Key">
            <summary>
            Gets or sets the index key, which must currently be {_id: 1}.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClusteredIndexOptions`1.Name">
            <summary>
            Gets or sets the index name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClusteredIndexOptions`1.Unique">
            <summary>
            Gets or sets whether the index entries must be unique, which currently must be true.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ClusterRegistry">
            <summary>
            Represents a registry of already created clusters.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClusterRegistry.Instance">
            <summary>
            Gets the default cluster registry.
            </summary>
            <value>
            The default cluster registry.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ClusterRegistry.UnregisterAndDisposeCluster(MongoDB.Driver.Core.Clusters.ICluster)">
            <summary>
            Unregisters and disposes the cluster.
            </summary>
            <param name="cluster">The cluster.</param>
        </member>
        <member name="T:MongoDB.Driver.RenderedCommand`1">
            <summary>
            A rendered command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedCommand`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedCommand`1" /> class.
            </summary>
            <param name="document">The document.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedCommand`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Command`1">
            <summary>
            Base class for commands.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Command`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the command to a <see cref="T:MongoDB.Driver.RenderedCommand`1" />.
            </summary>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedCommand`1" />.</returns>
        </member>
        <member name="M:MongoDB.Driver.Command`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.Command{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.Command`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Command`1.op_Implicit(System.String)~MongoDB.Driver.Command{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.Command`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentCommand`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument" /> based command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentCommand`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentCommand`1"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentCommand`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentCommand`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonCommand`1">
            <summary>
            A JSON <see cref="T:System.String" /> based command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonCommand`1.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonCommand`1"/> class.
            </summary>
            <param name="json">The json.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonCommand`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.JsonCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonCommand`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectCommand`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectCommand`1.Object" /> based command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectCommand`1.#ctor(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectCommand`1"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectCommand`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ObjectCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectCommand`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.BatchTransformingAsyncCursor`2">
            <summary>
            Represents a cursor that wraps another cursor with a transformation function on the documents.
            </summary>
            <typeparam name="TFromDocument">The type of from document.</typeparam>
            <typeparam name="TToDocument">The type of to document.</typeparam>
            <seealso cref="T:MongoDB.Driver.IAsyncCursor`1" />
        </member>
        <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.#ctor(MongoDB.Driver.IAsyncCursor{`0},System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BatchTransformingAsyncCursor`2"/> class.
            </summary>
            <param name="wrapped">The wrapped.</param>
            <param name="transformer">The transformer.</param>
        </member>
        <member name="P:MongoDB.Driver.BatchTransformingAsyncCursor`2.Current">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.MoveNext(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.MoveNextAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.CoreSession">
            <summary>
            Represents a session.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.ICoreSession" />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.Cluster">
            <summary>
            Gets the cluster.
            </summary>
            <value>
            The cluster.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.ClusterTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.CurrentTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.Id">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.IsCausallyConsistent">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.IsImplicit">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.IsInTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.IsSnapshot">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.OperationTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.ServerSession">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSession.SnapshotTime">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.AbortTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.AbortTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.AboutToSendCommand">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.AdvanceTransactionNumber">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.CommitTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.CommitTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.MarkDirty">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.SetSnapshotTimeIfNeeded(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSession.WasUsed">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.CoreSessionHandle">
            <summary>
            A handle to a reference counted core session.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.ICoreSessionHandle" />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSessionHandle.#ctor(MongoDB.Driver.Core.Bindings.ICoreSession)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.CoreSessionHandle"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSessionHandle.#ctor(MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.CoreSessionHandle"/> class.
            </summary>
            <param name="wrapped">The wrapped.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSessionHandle.Fork">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSessionHandle.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.CoreSessionOptions">
            <summary>
            Core session options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreSessionOptions.#ctor(System.Boolean,System.Boolean,MongoDB.Driver.TransactionOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.CoreSessionOptions" /> class.
            </summary>
            <param name="isCausallyConsistent">if set to <c>true</c> this session is causally consistent]</param>
            <param name="isImplicit">if set to <c>true</c> this session is an implicit session.</param>
            <param name="isSnapshot">if set to <c>true</c> this session is a snapshot session.</param>
            <param name="defaultTransactionOptions">The default transaction options.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSessionOptions.DefaultTransactionOptions">
            <summary>
            Gets the default transaction options.
            </summary>
            <value>
            The default transaction options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSessionOptions.IsCausallyConsistent">
            <summary>
            Gets a value indicating whether this session is causally consistent.
            </summary>
            <value>
              <c>true</c> if this session is causally consistent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSessionOptions.IsImplicit">
            <summary>
            Gets a value indicating whether this session is an implicit session.
            </summary>
            <value>
              <c>true</c> if this session is an implicit session; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreSessionOptions.IsSnapshot">
            <summary>
            Gets a value indicating whether this session is a snapshot session.
            </summary>
            <value>
              <c>true</c> if this session is a snapshot session; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.CoreTransaction">
            <summary>
            The state of a transaction.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.CoreTransaction.#ctor(System.Int64,MongoDB.Driver.TransactionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.CoreTransaction" /> class.
            </summary>
            <param name="transactionNumber">The transaction number.</param>
            <param name="transactionOptions">The transaction options.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreTransaction.IsEmpty">
            <summary>
            Gets a value indicating whether the transaction is empty.
            </summary>
            <value>
              <c>true</c> if the transaction is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreTransaction.State">
            <summary>
            Gets the transaction state.
            </summary>
            <value>
            The transaction state.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreTransaction.PinnedServer">
            <summary>
            Gets or sets pinned server for the current transaction.
            Value has meaning if and only if a transaction is in progress.
            </summary>
            <value>
            The pinned server for the current transaction.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreTransaction.TransactionNumber">
            <summary>
            Gets the transaction number.
            </summary>
            <value>
            The transaction number.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreTransaction.TransactionOptions">
            <summary>
            Gets the transaction options.
            </summary>
            <value>
            The transaction options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.CoreTransaction.RecoveryToken">
            <summary>
            Gets the recovery token used in sharded transactions.
            </summary>
            <value>
            The recovery token.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.CoreTransactionState">
            <summary>
            Represents the current state of a Core transaction.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Bindings.CoreTransactionState.Starting">
            <summary>
            StartTransaction has been called but no operations have been performed yet.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Bindings.CoreTransactionState.InProgress">
            <summary>
            The transaction is in progress.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Bindings.CoreTransactionState.Committed">
            <summary>
            CommitTransaction has been called.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Bindings.CoreTransactionState.Aborted">
            <summary>
            AbortTransaction has been called.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.ICoreSession">
            <summary>
            The interface for a session in Core.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.ClusterTime">
            <summary>
            Gets the cluster time.
            </summary>
            <value>
            The cluster time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.CurrentTransaction">
            <summary>
            Gets the current transaction.
            </summary>
            <value>
            The current transaction.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.Id">
            <summary>
            Gets the session Id.
            </summary>
            <value>
            The session Id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.IsCausallyConsistent">
            <summary>
            Gets a value indicate whether this instance is causally consistent.
            </summary>
            <value>
              <c>true</c> if the session is causally consistent.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.IsDirty">
            <summary>
            Gets a value indicate whether this session is dirty.
            </summary>
            <value>
              <c>true</c> if the session is dirty.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.IsImplicit">
            <summary>
            Gets a value indicating whether this instance is implicit session.
            </summary>
            <value>
              <c>true</c> if this instance is implicit session; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.IsInTransaction">
            <summary>
            Gets a value indicating whether this instance is in a transaction.
            </summary>
            <value>
              <c>true</c> if this instance is in a transaction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.IsSnapshot">
            <summary>
            Gets a value indicate whether this instance is a snapshot session.
            </summary>
            <value>
              <c>true</c> if the session is a snapshot session.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.OperationTime">
            <summary>
            Gets the operation time.
            </summary>
            <value>
            The operation time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.Options">
            <summary>
            Gets the session options.
            </summary>
            <value>
            The session options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.ServerSession">
            <summary>
            Gets the server session.
            </summary>
            <value>
            The server session.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.ICoreSession.SnapshotTime">
            <summary>
            Gets the snapshot time.
            </summary>
            <value>
            The snapshot time.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.AbortTransaction(System.Threading.CancellationToken)">
            <summary>
            Aborts the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.AbortTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Aborts the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.AboutToSendCommand">
            <summary>
            The driver is about to send a command on this session. Called to track session state.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <summary>
            Advances the cluster time.
            </summary>
            <param name="newClusterTime">The new cluster time.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <summary>
            Advances the operation time.
            </summary>
            <param name="newOperationTime">The new operation time.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.AdvanceTransactionNumber">
            <summary>
            Advances the transaction id.
            </summary>
            <returns>The transaction id.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.CommitTransaction(System.Threading.CancellationToken)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.CommitTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.MarkDirty">
            <summary>
            Marks the session as dirty.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <summary>
            Starts a transaction.
            </summary>
            <param name="transactionOptions">The transaction options.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.SetSnapshotTimeIfNeeded(MongoDB.Bson.BsonTimestamp)">
            <summary>
            Sets the snapshot time if not set.
            </summary>
            <param name="snapshotTime">The snapshot time.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSession.WasUsed">
            <summary>
            Called by the driver when the session is used (i.e. sent to the server).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.ICoreSessionHandle">
            <summary>
            A handle to a reference counted core session.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.ICoreSession" />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ICoreSessionHandle.Fork">
            <summary>
            Increments the reference count of the underlying session and returns a new handle to it.
            </summary>
            <returns>A new handle.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.NoCoreSession">
            <summary>
            An object that represents no core session.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.ICoreSession" />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.Instance">
            <summary>
            Gets the pre-created instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.NewHandle">
            <summary>
            Returns a new handle to a NoCoreSession object.
            </summary>
            <returns>A new handle to the NoCoreSession object.</returns>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.ClusterTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.CurrentTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.Id">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.IsCausallyConsistent">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.IsImplicit">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.IsInTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.IsSnapshot">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.OperationTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.ServerSession">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.NoCoreSession.SnapshotTime">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.AbortTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.AbortTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.AboutToSendCommand">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.AdvanceTransactionNumber">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.CommitTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.CommitTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.MarkDirty">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.SetSnapshotTimeIfNeeded(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NoCoreSession.WasUsed">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle">
            <summary>
            A handle to a core session that should not be disposed when the handle is disposed.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.ICoreSessionHandle" />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle.#ctor(MongoDB.Driver.Core.Bindings.ICoreSession)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle" /> class.
            </summary>
            <param name="wrapped">The wrapped session.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle.Fork">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession">
            <summary>
            A reference counted core session.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.WrappingCoreSession" />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession.#ctor(MongoDB.Driver.Core.Bindings.ICoreSession)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession"/> class.
            </summary>
            <param name="wrapped">The wrapped.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession.DecrementReferenceCount">
            <summary>
            Decrements the reference count.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession.IncrementReferenceCount">
            <summary>
            Increments the reference count.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Bindings.WrappingCoreSession">
            <summary>
            An abstract base class for a core session that wraps another core session.
            </summary>
            <seealso cref="T:MongoDB.Driver.Core.Bindings.ICoreSession" />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.#ctor(MongoDB.Driver.Core.Bindings.ICoreSession,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.WrappingCoreSession" /> class.
            </summary>
            <param name="wrapped">The wrapped.</param>
            <param name="ownsWrapped">if set to <c>true</c> [owns wrapped].</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.ClusterTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.CurrentTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.Id">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.IsCausallyConsistent">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.IsImplicit">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.IsInTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.IsSnapshot">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.OperationTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.ServerSession">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.SnapshotTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Bindings.WrappingCoreSession.Wrapped">
            <summary>
            Gets the wrapped session.
            </summary>
            <value>
            The wrapped session.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.AbortTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.AbortTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.AboutToSendCommand">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.AdvanceTransactionNumber">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.CommitTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.CommitTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.MarkDirty">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.SetSnapshotTimeIfNeeded(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.WasUsed">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.IsDisposed">
            <summary>
            Determines whether this instance is disposed.
            </summary>
            <returns>
              <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Bindings.WrappingCoreSession.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ClusterDescription">
            <summary>
            Represents information about a cluster.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.Boolean,System.Exception,MongoDB.Driver.Core.Clusters.ClusterType,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterDescription" /> class.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
            <param name="directConnection">Whether to make a direct connection.</param>
            <param name="dnsMonitorException">The last DNS monitor exception (null if there was none).</param>
            <param name="type">The type.</param>
            <param name="servers">The servers.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.DirectConnection">
            <summary>
            Gets the DirectConnection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.DnsMonitorException">
            <summary>
            Gets the last DNS monitor exception (null if there was none).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.IsCompatibleWithDriver">
            <summary>
            Gets a value indicating whether this cluster is compatible with the driver.
            </summary>
            <value>
              <c>true</c> if this cluster is compatible with the driver; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.LogicalSessionTimeout">
            <summary>
            Gets the logical session timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.Servers">
            <summary>
            Gets the servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.State">
            <summary>
            Gets the cluster state.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.Type">
            <summary>
            Gets the cluster type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.Equals(MongoDB.Driver.Core.Clusters.ClusterDescription)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithDnsMonitorException(System.Exception)">
            <summary>
            Returns a new ClusterDescription with a changed DnsMonitorException.
            </summary>
            <param name="value">The exception.</param>
            <returns>A ClusterDescription.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithServerDescription(MongoDB.Driver.Core.Servers.ServerDescription)">
            <summary>
            Returns a new ClusterDescription with a changed ServerDescription.
            </summary>
            <param name="value">The server description.</param>
            <returns>A ClusterDescription.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithoutServerDescription(System.Net.EndPoint)">
            <summary>
            Returns a new ClusterDescription with a ServerDescription removed.
            </summary>
            <param name="endPoint">The end point of the server description to remove.</param>
            <returns>A ClusterDescription.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithType(MongoDB.Driver.Core.Clusters.ClusterType)">
            <summary>
            Returns a new ClusterDescription with a changed ClusterType.
            </summary>
            <param name="value">The value.</param>
            <returns>A ClusterDescription.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs">
            <summary>
            Represents the data for the event that fires when a cluster description changes.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ClusterDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs"/> class.
            </summary>
            <param name="oldClusterDescription">The old cluster description.</param>
            <param name="newClusterDescription">The new cluster description.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs.OldClusterDescription">
            <summary>
            Gets the old cluster description.
            </summary>
            <value>
            The old cluster description.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs.NewClusterDescription">
            <summary>
            Gets the new cluster description.
            </summary>
            <value>
            The new cluster description.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ClusterId">
            <summary>
            Represents a cluster identifier.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterId"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterId"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ClusterId.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.Equals(MongoDB.Driver.Core.Clusters.ClusterId)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ClusterState">
            <summary>
            Represents the state of a cluster.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterState.Disconnected">
            <summary>
            The cluster is disconnected.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterState.Connected">
            <summary>
            The cluster is connected.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ClusterType">
            <summary>
            Represents the type of a cluster.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.Unknown">
            <summary>
            The type of the cluster is unknown.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.Standalone">
            <summary>
            The cluster is a standalone cluster.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.ReplicaSet">
            <summary>
            The cluster is a replica set.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.Sharded">
            <summary>
            The cluster is a sharded cluster.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.LoadBalanced">
            <summary>
            The cluster is in a load balanced mode.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ElectionId">
            <summary>
            An election id from the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.#ctor(MongoDB.Bson.ObjectId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ElectionId"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.CompareTo(MongoDB.Driver.Core.Clusters.ElectionId)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.Equals(MongoDB.Driver.Core.Clusters.ElectionId)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ICluster">
            <summary>
            Represents a MongoDB cluster.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ICluster.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
            <value>
            The cluster identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ICluster.Description">
            <summary>
            Gets the cluster description.
            </summary>
            <value>
            The cluster description.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ICluster.Settings">
            <summary>
            Gets the cluster settings.
            </summary>
            <value>
            The cluster settings.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ReplicaSetConfig">
            <summary>
            Represents the config of a replica set (as reported by one of the members of the replica set).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Empty">
            <summary>
            Gets an empty replica set config.
            </summary>
            <value>
            An empty replica set config.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.#ctor(System.Collections.Generic.IEnumerable{System.Net.EndPoint},System.String,System.Net.EndPoint,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ReplicaSetConfig"/> class.
            </summary>
            <param name="members">The members.</param>
            <param name="name">The name.</param>
            <param name="primary">The primary.</param>
            <param name="version">The version.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Members">
            <summary>
            Gets the members.
            </summary>
            <value>
            The members.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Name">
            <summary>
            Gets the name of the replica set.
            </summary>
            <value>
            The name of the replica set.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Primary">
            <summary>
            Gets the primary.
            </summary>
            <value>
            The primary.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Version">
            <summary>
            Gets the replica set config version.
            </summary>
            <value>
            The replica set config version.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Equals(MongoDB.Driver.Core.Clusters.ReplicaSetConfig)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector">
            <summary>
            Represents a selector that selects servers based on multiple partial selectors
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector"/> class.
            </summary>
            <param name="selectors">The selectors.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector">
            <summary>
            Represents a server selector that wraps a delegate.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector.#ctor(System.Func{MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription},System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector"/> class.
            </summary>
            <param name="selector">The selector.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector">
            <summary>
            Represents a selector that selects servers based on an end point.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector.#ctor(System.Net.EndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector">
            <summary>
            Represents a selector that selects servers.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <summary>
            Selects the servers.
            </summary>
            <param name="cluster">The cluster.</param>
            <param name="servers">The servers.</param>
            <returns>The selected servers.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector">
            <summary>
            Represents a selector that selects servers within an acceptable latency range.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector"/> class.
            </summary>
            <param name="allowedLatencyRange">The allowed latency range.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.OperationsCountServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.OperationsCountServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.PriorityServerSelector">
            <summary>
            Represents a server selector that selects servers based on a collection of servers to deprioritize.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.PriorityServerSelector.#ctor(System.Collections.Generic.IReadOnlyCollection{MongoDB.Driver.Core.Servers.ServerDescription})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.PriorityServerSelector"/> class.
            </summary>
            <param name="deprioritizedServers">The collection of servers to deprioritize.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.PriorityServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.PriorityServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector">
            <summary>
            Represents a selector that selects a random server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector">
            <summary>
            Represents a selector that selects servers based on a read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.Primary">
            <summary>
            Gets a ReadPreferenceServerSelector that selects the Primary.
            </summary>
            <value>
            A server selector.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.#ctor(MongoDB.Driver.ReadPreference)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector"/> class.
            </summary>
            <param name="readPreference">The read preference.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector">
            <summary>
            Represents a server selector that selects writable servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.Instance">
            <summary>
            Gets a WritableServerSelector.
            </summary>
            <value>
            A server selector.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.#ctor">
            <summary>
            Initializes an instance of the WritableServerSelector class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.#ctor(MongoDB.Driver.Core.Bindings.IMayUseSecondaryCriteria)">
            <summary>
            Initializes an instance of the WritableServerSelector class.
            </summary>
            <param name="mayUseSecondary">The may use secondary criteria.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.MayUseSecondary">
            <summary>
            Returns the may use secondary criteria.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Compression.ICompressorSource">
            <summary>
            Represents a compressor source.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.ICompressorSource.Get(MongoDB.Driver.Core.Compression.CompressorType)">
            <summary>
            Gets or creates a compressor based on the compressor type.
            </summary>
            <param name="compressorType">The compressor type.</param>
            <returns>The compressor.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Compression.CompressorType">
            <summary>
            Represents the compressor type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Compression.CompressorType.Noop">
            <summary>
            The content of the message is uncompressed. This is realistically only used for testing.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Compression.CompressorType.Snappy">
            <summary>
            The content of the message is compressed using snappy.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Compression.CompressorType.Zlib">
            <summary>
            The content of the message is compressed using zlib. 
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Compression.CompressorType.ZStandard">
            <summary>
            The content of the message is compressed using zstandard. 
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Compression.ICompressor">
            <summary>
            Represents a compressor.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Compression.ICompressor.Type">
            <summary>
            Gets the compressor type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.ICompressor.Compress(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compresses the specified stream.
            </summary>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.ICompressor.Decompress(System.IO.Stream,System.IO.Stream)">
            <summary>
            Decompresses the specified stream.
            </summary>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.SnappyCompressor.Compress(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compresses the remainder of <paramref name="input"/>, writing the compressed data to
            <paramref name="output"/>.
            </summary>
            <param name="input"> The input stream.</param>
            <param name="output">The output stream.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.SnappyCompressor.Decompress(System.IO.Stream,System.IO.Stream)">
            <summary>
            Decompresses the remainder of  <paramref name="input"/>, writing the uncompressed data to <paramref name="output"/>.
            </summary>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
        </member>
        <member name="T:MongoDB.Driver.Core.Compression.ZlibCompressor">
            <summary>
            Compressor according to the zlib algorithm.
            </summary> 
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.ZlibCompressor.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Compression.ZlibCompressor" /> class.
            </summary>
            <param name="compressionLevel">The compression level.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Compression.ZlibCompressor.Type">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.ZlibCompressor.Compress(System.IO.Stream,System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Compression.ZlibCompressor.Decompress(System.IO.Stream,System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ClusterBuilder">
            <summary>
            Represents a cluster builder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ClusterBuilder"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.BuildCluster">
            <summary>
            Builds the cluster.
            </summary>
            <returns>A cluster.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureCluster(System.Func{MongoDB.Driver.Core.Configuration.ClusterSettings,MongoDB.Driver.Core.Configuration.ClusterSettings})">
            <summary>
            Configures the cluster settings.
            </summary>
            <param name="configurator">The cluster settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureConnection(System.Func{MongoDB.Driver.Core.Configuration.ConnectionSettings,MongoDB.Driver.Core.Configuration.ConnectionSettings})">
            <summary>
            Configures the connection settings.
            </summary>
            <param name="configurator">The connection settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureConnectionPool(System.Func{MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings})">
            <summary>
            Configures the connection pool settings.
            </summary>
            <param name="configurator">The connection pool settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureLoggingSettings(System.Func{MongoDB.Driver.Core.Configuration.LoggingSettings,MongoDB.Driver.Core.Configuration.LoggingSettings})">
            <summary>
            Configures the logging settings.
            </summary>
            <param name="configurator">The logging settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureServer(System.Func{MongoDB.Driver.Core.Configuration.ServerSettings,MongoDB.Driver.Core.Configuration.ServerSettings})">
            <summary>
            Configures the server settings.
            </summary>
            <param name="configurator">The server settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureSsl(System.Func{MongoDB.Driver.Core.Configuration.SslStreamSettings,MongoDB.Driver.Core.Configuration.SslStreamSettings})">
            <summary>
            Configures the SSL stream settings.
            </summary>
            <param name="configurator">The SSL stream settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureTcp(System.Func{MongoDB.Driver.Core.Configuration.TcpStreamSettings,MongoDB.Driver.Core.Configuration.TcpStreamSettings})">
            <summary>
            Configures the TCP stream settings.
            </summary>
            <param name="configurator">The TCP stream settings configurator delegate.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.Subscribe``1(System.Action{``0})">
            <summary>
            Subscribes to events of type <typeparamref name="TEvent"/>.
            </summary>
            <typeparam name="TEvent">The type of the event.</typeparam>
            <param name="handler">The handler.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.Subscribe(MongoDB.Driver.Core.Events.IEventSubscriber)">
            <summary>
            Subscribes the specified subscriber.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions">
            <summary>
            Extension methods for a ClusterBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.ConfigureWithConnectionString(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.String)">
            <summary>
            Configures a cluster builder from a connection string.
            </summary>
            <param name="builder">The cluster builder.</param>
            <param name="connectionString">The connection string.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.ConfigureWithConnectionString(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.String,MongoDB.Driver.ServerApi)">
            <summary>
            Configures a cluster builder from a connection string.
            </summary>
            <param name="builder">The cluster builder.</param>
            <param name="connectionString">The connection string.</param>
            <param name="serverApi">The server API.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.ConfigureWithConnectionString(MongoDB.Driver.Core.Configuration.ClusterBuilder,MongoDB.Driver.Core.Configuration.ConnectionString)">
            <summary>
            Configures a cluster builder from a connection string.
            </summary>
            <param name="builder">The cluster builder.</param>
            <param name="connectionString">The connection string.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.ConfigureWithConnectionString(MongoDB.Driver.Core.Configuration.ClusterBuilder,MongoDB.Driver.Core.Configuration.ConnectionString,MongoDB.Driver.ServerApi)">
            <summary>
            Configures a cluster builder from a connection string.
            </summary>
            <param name="builder">The cluster builder.</param>
            <param name="connectionString">The connection string.</param>
            <param name="serverApi">The server API.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.TraceWith(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.Diagnostics.TraceSource)">
            <summary>
            Configures the cluster to trace events to the specified <paramref name="traceSource"/>.
            </summary>
            <param name="builder">The builder.</param>
            <param name="traceSource">The trace source.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.TraceCommandsWith(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.Diagnostics.TraceSource)">
            <summary>
            Configures the cluster to trace command events to the specified <paramref name="traceSource"/>.
            </summary>
            <param name="builder">The builder.</param>
            <param name="traceSource">The trace source.</param>
            <returns>A reconfigured cluster builder.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ClusterSettings">
            <summary>
            Represents settings for a cluster.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterSettings.#ctor(MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.CryptClientSettings},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Net.EndPoint}},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{MongoDB.Driver.ServerApi},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector},MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.ConnectionStringScheme},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ClusterSettings"/> class.
            </summary>
            <param name="cryptClientSettings">Crypt client settings.</param>
            <param name="directConnection">The directConnection.</param>
            <param name="endPoints">The end points.</param>
            <param name="loadBalanced">The load balanced.</param>
            <param name="localThreshold">The local threshold.</param>
            <param name="maxServerSelectionWaitQueueSize">Maximum size of the server selection wait queue.</param>
            <param name="replicaSetName">Name of the replica set.</param>
            <param name="serverApi">The server API.</param>
            <param name="serverSelectionTimeout">The server selection timeout.</param>
            <param name="preServerSelector">The pre server selector.</param>
            <param name="postServerSelector">The post server selector.</param>
            <param name="scheme">The connection string scheme.</param>
            <param name="srvMaxHosts">Limits the number of SRV records used to populate the seedlist during initial discovery, as well as the number of additional hosts that may be added during SRV polling.</param>
            <param name="srvServiceName"> The SRV service name which modifies the srv URI to look like: <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code> Defaults to "mongodb".</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.CryptClientSettings">
            <summary>
            Gets the crypt client settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.DirectConnection">
            <summary>
            Gets the DirectConnection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.EndPoints">
            <summary>
            Gets the end points.
            </summary>
            <value>
            The end points.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.LoadBalanced">
            <summary>
            Gets whether to use load balanced.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.LocalThreshold">
            <summary>
            Gets the local threshold.
            </summary>
            <value>
            The local threshold.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.MaxServerSelectionWaitQueueSize">
            <summary>
            Gets the maximum size of the server selection wait queue.
            </summary>
            <value>
            The maximum size of the server selection wait queue.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.ReplicaSetName">
            <summary>
            Gets the name of the replica set.
            </summary>
            <value>
            The name of the replica set.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.Scheme">
            <summary>
            Gets the connection string scheme.
            </summary>
            <value>
            The connection string scheme.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.ServerApi">
            <summary>
            Gets the server API.
            </summary>
            <value>
            The server API.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.ServerSelectionTimeout">
            <summary>
            Gets the server selection timeout.
            </summary>
            <value>
            The server selection timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.SrvMaxHosts">
            <summary>
            Limits the number of SRV records used to populate the seedlist
            during initial discovery, as well as the number of additional hosts
            that may be added during SRV polling.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.SrvServiceName">
            <summary>
            Gets the SRV service name which modifies the srv URI to look like:
            <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code>
            The default value is "mongodb".
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.PreServerSelector">
            <summary>
            Gets the pre server selector.
            </summary>
            <value>
            The pre server selector.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.PostServerSelector">
            <summary>
            Gets the post server selector.
            </summary>
            <value>
            The post server selector.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ClusterSettings.With(MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.CryptClientSettings},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Net.EndPoint}},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{MongoDB.Driver.ServerApi},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector},MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.ConnectionStringScheme},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.String})">
            <summary>
            Returns a new ClusterSettings instance with some settings changed.
            </summary>
            <param name="cryptClientSettings">Crypt client settings.</param>
            <param name="directConnection">The directConnection.</param>
            <param name="endPoints">The end points.</param>
            <param name="loadBalanced">The load balanced.</param>
            <param name="localThreshold">The local threshold.</param>
            <param name="maxServerSelectionWaitQueueSize">Maximum size of the server selection wait queue.</param>
            <param name="replicaSetName">Name of the replica set.</param>
            <param name="serverApi">The server API.</param>
            <param name="serverSelectionTimeout">The server selection timeout.</param>
            <param name="preServerSelector">The pre server selector.</param>
            <param name="postServerSelector">The post server selector.</param>
            <param name="scheme">The connection string scheme.</param>
            <param name="srvMaxHosts">Limits the number of SRV records used to populate the seedlist during initial discovery, as well as the number of additional hosts that may be added during SRV polling.</param>
            <param name="srvServiceName"> The SRV service name which modifies the srv URI to look like: <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code> Defaults to "mongodb".</param>
            <returns>A new ClusterSettings instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.CompressorConfiguration">
            <summary>
            Represents a compressor configuration.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.CompressorConfiguration.#ctor(MongoDB.Driver.Core.Compression.CompressorType)">
            <summary>
            Initializes an instance of <see cref="T:MongoDB.Driver.Core.Configuration.CompressorConfiguration"/>.
            </summary>
            <param name="type">The compressor type.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CompressorConfiguration.Properties">
            <summary>
            Gets the compression properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CompressorConfiguration.Type">
            <summary>
            Gets the compressor type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.CompressorConfiguration.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.CompressorConfiguration.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings">
            <summary>
            Represents settings for a connection pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.#ctor(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings"/> class.
            </summary>
            <param name="maintenanceInterval">The maintenance interval.</param>
            <param name="maxConnections">The maximum number of connections.</param>
            <param name="minConnections">The minimum number of connections.</param>
            <param name="waitQueueSize">Size of the wait queue.</param>
            <param name="waitQueueTimeout">The wait queue timeout.</param>
            <param name="maxConnecting">The maximum concurrently connecting connections.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MaintenanceInterval">
            <summary>
            Gets the maintenance interval.
            <see cref="F:System.Threading.Timeout.Infinite"/> values indicates that maintenance thread is disabled.
            </summary>
            <value>
            The maintenance interval.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MaxConnecting">
            <summary>
            Gets the maximum number of connections a pool may be establishing concurrently. Defaults to 2.
            </summary>
            <value>
            The maximum concurrently connecting connections.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MaxConnections">
            <summary>
            Gets the maximum number of connections.
            </summary>
            <value>
            The maximum number of connections.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MinConnections">
            <summary>
            Gets the minimum number of connections.
            </summary>
            <value>
            The minimum number of connections.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.WaitQueueSize">
            <summary>
            Gets the size of the wait queue.
            </summary>
            <value>
            The size of the wait queue.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.WaitQueueTimeout">
            <summary>
            Gets the wait queue timeout.
            </summary>
            <value>
            The wait queue timeout.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.With(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32})">
            <summary>
            Returns a new ConnectionPoolSettings instance with some settings changed.
            </summary>
            <param name="maintenanceInterval">The maintenance interval.</param>
            <param name="maxConnecting">The maximum concurrently connecting connections.</param>
            <param name="maxConnections">The maximum connections.</param>
            <param name="minConnections">The minimum connections.</param>
            <param name="waitQueueSize">Size of the wait queue.</param>
            <param name="waitQueueTimeout">The wait queue timeout.</param>
            <returns>A new ConnectionPoolSettings instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ConnectionSettings">
            <summary>
            Represents settings for a connection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionSettings.#ctor(MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Configuration.CompressorConfiguration}},MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.LibraryInfo},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionSettings" /> class.
            </summary>
            <param name="compressors">The compressors.</param>
            <param name="libraryInfo">The library information.</param>
            <param name="loadBalanced">Whether the load balanced mode is enabled.</param>
            <param name="maxIdleTime">The maximum idle time.</param>
            <param name="maxLifeTime">The maximum life time.</param>
            <param name="applicationName">The application name.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.ApplicationName">
            <summary>
            Gets the name of the application.
            </summary>
            <value>
            The name of the application.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.AuthenticatorFactory">
            <summary>
            Gets the authenticator factory.
            </summary>
            <value>
            The authenticator factory.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.Compressors">
            <summary>
            Gets the compressors.
            </summary>
            <value>
            The compressors.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.LibraryInfo">
            <summary>
            Information about a library using the .NET driver.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.LoadBalanced">
            <summary>
            Whether the load balanced mode is enabled.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.MaxIdleTime">
            <summary>
            Gets the maximum idle time.
            </summary>
            <value>
            The maximum idle time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.MaxLifeTime">
            <summary>
            Gets the maximum life time.
            </summary>
            <value>
            The maximum life time.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionSettings.With(MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Configuration.CompressorConfiguration}},MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.LibraryInfo},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.String})">
            <summary>
            Returns a new ConnectionSettings instance with some settings changed.
            </summary>
            <param name="compressors">The compressors.</param>
            <param name="libraryInfo">The library information.</param>
            <param name="loadBalanced">Whether the load balanced mode is enabled.</param>
            <param name="maxIdleTime">The maximum idle time.</param>
            <param name="maxLifeTime">The maximum life time.</param>
            <param name="applicationName">The application name.</param>
            <returns>A new ConnectionSettings instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionSettings.With(MongoDB.Driver.Optional{MongoDB.Driver.Authentication.IAuthenticatorFactory},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Configuration.CompressorConfiguration}},MongoDB.Driver.Optional{MongoDB.Driver.Core.Configuration.LibraryInfo},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.String})">
            <summary>
            Returns a new ConnectionSettings instance with some settings changed.
            </summary>
            <param name="authenticatorFactory">The authenticator factories.</param>
            <param name="compressors">The compressors.</param>
            <param name="libraryInfo">The library information.</param>
            <param name="loadBalanced">Whether the load balanced mode is enabled.</param>
            <param name="maxIdleTime">The maximum idle time.</param>
            <param name="maxLifeTime">The maximum life time.</param>
            <param name="applicationName">The application name.</param>
            <returns>A new ConnectionSettings instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ConnectionStringScheme">
            <summary>
             Represents the scheme used to construct the connection string.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Configuration.ConnectionStringScheme.MongoDB">
            <summary>
            Mongodb scheme (mongodb://)
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Configuration.ConnectionStringScheme.MongoDBPlusSrv">
            <summary>
            SRV scheme (mongodb+srv://)
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ConnectionString">
            <summary>
            Represents a connection string.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionString" /> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionString" /> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="isResolved">Whether the connection string is resolved.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AllOptionNames">
            <summary>
            Gets all the option names.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AllUnknownOptionNames">
            <summary>
            Gets all the unknown option names.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AuthMechanism">
            <summary>
            Gets the auth mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AuthMechanismProperties">
            <summary>
            Gets the auth mechanism properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AuthSource">
            <summary>
            Gets the auth source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Compressors">
            <summary>
            Gets the requested compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ConnectTimeout">
            <summary>
            Gets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.DirectConnection">
            <summary>
            Gets the directConnection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.FSync">
            <summary>
            Gets the fsync value of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.HeartbeatInterval">
            <summary>
            Gets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.HeartbeatTimeout">
            <summary>
            Gets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Hosts">
            <summary>
            Gets the hosts.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Ipv6">
            <summary>
            Gets whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.IsResolved">
            <summary>
            Gets whether the connection string has been resolved. Always true when scheme is MongoDB.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Journal">
            <summary>
            Gets the journal value of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.LoadBalanced">
            <summary>
            Gets a value indicating whether load balanced mode is used.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.LocalThreshold">
            <summary>
            Gets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxConnecting">
            <summary>
            Gets the maximum number of connections a pool may be establishing concurrently. Defaults to 2.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxIdleTime">
            <summary>
            Gets the max idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxLifeTime">
            <summary>
            Gets the max life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxPoolSize">
            <summary>
            Gets the max size of the connection pool.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxStaleness">
            <summary>
            Gets the max staleness.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MinPoolSize">
            <summary>
            Gets the min size of the connection pool.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReadConcernLevel">
            <summary>
            Gets the read concern level.
            </summary>
            <value>
            The read concern level.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReadPreference">
            <summary>
            Gets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReplicaSet">
            <summary>
            Gets the replica set name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReadPreferenceTags">
            <summary>
            Gets the read preference tags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.RetryReads">
            <summary>
            Gets a value indicating whether or not to retry reads.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.RetryWrites">
            <summary>
            Gets a value indicating whether or not to retry writes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Scheme">
            <summary>
            Gets the connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ServerMonitoringMode">
            <summary>
            Gets the server monitoring mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ServerSelectionTimeout">
            <summary>
            Gets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.SocketTimeout">
            <summary>
            Gets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.SrvMaxHosts">
            <summary>
            Limits the number of SRV records used to populate the seedlist
            during initial discovery, as well as the number of additional hosts
            that may be added during SRV polling.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.SrvServiceName">
            <summary>
            Gets the SRV service name which modifies the srv URI to look like:
            <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code>
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Ssl">
            <summary>
            Gets whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.SslVerifyCertificate">
            <summary>
            Gets whether to verify SSL certificates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Tls">
            <summary>
            Gets whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.TlsDisableCertificateRevocationCheck">
            <summary>
             Get whether or not certificate revocation checking is disabled during the TLS handshake.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.TlsInsecure">
            <summary>
            Gets whether to relax TLS constraints as much as possible.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WaitQueueMultiple">
            <summary>
            Gets the wait queue multiple.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WaitQueueSize">
            <summary>
            Gets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WaitQueueTimeout">
            <summary>
            Gets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.W">
            <summary>
            Gets the w value of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WTimeout">
            <summary>
            Gets the wtimeout value of the write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.GetOption(System.String)">
            <summary>
            Gets the option.
            </summary>
            <param name="name">The name.</param>
            <returns>The option with the specified name.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.Resolve(System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved ConnectionString.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.Resolve(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="resolveHosts">Whether to resolve hosts.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved ConnectionString.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.ResolveAsync(System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved ConnectionString.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.ResolveAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="resolveHosts">Whether to resolve hosts.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved ConnectionString.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.CryptClientSettings">
            <summary>
            Represents settings for a crypt client.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.BypassQueryAnalysis">
            <summary>
            Gets a value indicating whether query analysis should be bypassed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.CryptSharedLibPath">
            <summary>
            Gets the crypt shared library path.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.CryptSharedLibSearchPath">
            <summary>
            Gets the crypt shared library search path.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.EncryptedFieldsMap">
            <summary>
            Gets the encrypted fields map.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.IsCryptSharedLibRequired">
            <summary>
            Gets a value indicating whether crypt shared library is required.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.KmsProviders">
            <summary>
            Gets the KMS providers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.CryptClientSettings.SchemaMap">
            <summary>
            Gets the schema map.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.CryptClientSettings.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.CryptClientSettings"/> class.
            </summary>
            <param name="bypassQueryAnalysis">The bypass query analysis.</param>
            <param name="cryptSharedLibPath">The crypt shared library library path.</param>
            <param name="cryptSharedLibSearchPath">The crypt shared library search path.</param>
            <param name="encryptedFieldsMap">The encrypted fields map.</param>
            <param name="isCryptSharedLibRequired">Value indicating whether crypt shared library is required.</param>
            <param name="kmsProviders">The KMS providers.</param>
            <param name="schemaMap">The schema map.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.CryptClientSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.CryptClientSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.LibraryInfo">
            <summary>
            Represents information about a library using the .NET driver.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.LibraryInfo.Name">
            <summary>
            Gets the library name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.LibraryInfo.Version">
            <summary>
            Gets the library version.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.LibraryInfo"/> class.
            </summary>
            <param name="name">The library name.</param>
            <param name="version">The library version.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.op_Equality(MongoDB.Driver.Core.Configuration.LibraryInfo,MongoDB.Driver.Core.Configuration.LibraryInfo)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.Core.Configuration.LibraryInfo"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.op_Inequality(MongoDB.Driver.Core.Configuration.LibraryInfo,MongoDB.Driver.Core.Configuration.LibraryInfo)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.Core.Configuration.LibraryInfo"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.Equals(MongoDB.Driver.Core.Configuration.LibraryInfo)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.Core.Configuration.LibraryInfo" /> is equal to this instance.
            </summary>
            <param name="rhs">The <see cref="T:MongoDB.Driver.Core.Configuration.LibraryInfo" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.Core.Configuration.LibraryInfo" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LibraryInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.LoggingSettings">
            <summary>
            Represents the settings for logging.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.LoggingSettings.LoggerFactory">
            <summary>
            Gets the logger factory.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.LoggingSettings.MaxDocumentSize">
            <summary>
            Gets the maximum document size in chars.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LoggingSettings.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,MongoDB.Driver.Optional{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.LoggingSettings"/> class.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
            <param name="maxDocumentSize">The maximum document size in chars.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LoggingSettings.op_Equality(MongoDB.Driver.Core.Configuration.LoggingSettings,MongoDB.Driver.Core.Configuration.LoggingSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.Core.Configuration.LoggingSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LoggingSettings.op_Inequality(MongoDB.Driver.Core.Configuration.LoggingSettings,MongoDB.Driver.Core.Configuration.LoggingSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.Core.Configuration.LoggingSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LoggingSettings.Equals(MongoDB.Driver.Core.Configuration.LoggingSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.Core.Configuration.LoggingSettings" /> is equal to this instance.
            </summary>
            <param name="rhs">The <see cref="T:MongoDB.Driver.Core.Configuration.LoggingSettings" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.Core.Configuration.LoggingSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LoggingSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.LoggingSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.ServerSettings">
            <summary>
            Represents settings for a server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.DefaultHeartbeatInterval">
            <summary>
            Gets the default heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.DefaultHeartbeatTimeout">
            <summary>
            Gets the default heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.DefaultServerMonitoringMode">
            <summary>
            Gets the default server monitoring mode.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ServerSettings.#ctor(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerMonitoringMode})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ServerSettings"/> class.
            </summary>
            <param name="heartbeatInterval">The heartbeat interval.</param>
            <param name="heartbeatTimeout">The heartbeat timeout.</param>
            <param name="serverMonitoringMode">The server monitoring mode.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.HeartbeatInterval">
            <summary>
            Gets the heartbeat interval.
            </summary>
            <value>
            The heartbeat interval.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.HeartbeatTimeout">
            <summary>
            Gets the heartbeat timeout.
            </summary>
            <value>
            The heartbeat timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.ServerMonitoringMode">
            <summary>
            Gets the server monitoring mode.
            </summary>
            <value>
            The server monitoring mode.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.ServerSettings.With(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerMonitoringMode})">
            <summary>
            Returns a new ServerSettings instance with some settings changed.
            </summary>
            <param name="heartbeatInterval">The heartbeat interval.</param>
            <param name="heartbeatTimeout">The heartbeat timeout.</param>
            <param name="serverMonitoringMode">The server monitoring mode.</param>
            <returns>A new ServerSettings instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.SslStreamSettings">
            <summary>
            Represents settings for an SSL stream.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.SslStreamSettings.#ctor(MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate}},MongoDB.Driver.Optional{System.Net.Security.LocalCertificateSelectionCallback},MongoDB.Driver.Optional{System.Security.Authentication.SslProtocols},MongoDB.Driver.Optional{System.Net.Security.RemoteCertificateValidationCallback})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.SslStreamSettings"/> class.
            </summary>
            <param name="checkCertificateRevocation">Whether to check for certificate revocation.</param>
            <param name="clientCertificates">The client certificates.</param>
            <param name="clientCertificateSelectionCallback">The client certificate selection callback.</param>
            <param name="enabledProtocols">The enabled protocols.</param>
            <param name="serverCertificateValidationCallback">The server certificate validation callback.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.CheckCertificateRevocation">
            <summary>
            Gets a value indicating whether to check for certificate revocation.
            </summary>
            <value>
            <c>true</c> if certificate should be checked for revocation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.ClientCertificates">
            <summary>
            Gets the client certificates.
            </summary>
            <value>
            The client certificates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.ClientCertificateSelectionCallback">
            <summary>
            Gets the client certificate selection callback.
            </summary>
            <value>
            The client certificate selection callback.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.EnabledSslProtocols">
            <summary>
            Gets the enabled SSL protocols.
            </summary>
            <value>
            The enabled SSL protocols.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.ServerCertificateValidationCallback">
            <summary>
            Gets the server certificate validation callback.
            </summary>
            <value>
            The server certificate validation callback.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.SslStreamSettings.With(MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate}},MongoDB.Driver.Optional{System.Net.Security.LocalCertificateSelectionCallback},MongoDB.Driver.Optional{System.Security.Authentication.SslProtocols},MongoDB.Driver.Optional{System.Net.Security.RemoteCertificateValidationCallback})">
            <summary>
            Returns a new SsslStreamSettings instance with some settings changed.
            </summary>
            <param name="checkCertificateRevocation">Whether to check certificate revocation.</param>
            <param name="clientCertificates">The client certificates.</param>
            <param name="clientCertificateSelectionCallback">The client certificate selection callback.</param>
            <param name="enabledProtocols">The enabled protocols.</param>
            <param name="serverCertificateValidationCallback">The server certificate validation callback.</param>
            <returns>A new SsslStreamSettings instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Configuration.TcpStreamSettings">
            <summary>
            Represents settings for a TCP stream.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.TcpStreamSettings.#ctor(MongoDB.Driver.Optional{System.Net.Sockets.AddressFamily},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Action{System.Net.Sockets.Socket}},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.TcpStreamSettings"/> class.
            </summary>
            <param name="addressFamily">The address family.</param>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readTimeout">The read timeout.</param>
            <param name="receiveBufferSize">Size of the receive buffer.</param>
            <param name="sendBufferSize">Size of the send buffer.</param>
            <param name="socketConfigurator">The socket configurator.</param>
            <param name="writeTimeout">The write timeout.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.AddressFamily">
            <summary>
            Gets the address family.
            </summary>
            <value>
            The address family.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.ConnectTimeout">
            <summary>
            Gets the connect timeout.
            </summary>
            <value>
            The connect timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.ReadTimeout">
            <summary>
            Gets the read timeout.
            </summary>
            <value>
            The read timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.ReceiveBufferSize">
            <summary>
            Gets the size of the receive buffer.
            </summary>
            <value>
            The size of the receive buffer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.SendBufferSize">
            <summary>
            Gets the size of the send buffer.
            </summary>
            <value>
            The size of the send buffer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.SocketConfigurator">
            <summary>
            Gets the socket configurator.
            </summary>
            <value>
            The socket configurator.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.WriteTimeout">
            <summary>
            Gets the write timeout.
            </summary>
            <value>
            The write timeout.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Configuration.TcpStreamSettings.With(MongoDB.Driver.Optional{System.Net.Sockets.AddressFamily},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Action{System.Net.Sockets.Socket}},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}})">
            <summary>
            Returns a new TcpStreamSettings instance with some settings changed.
            </summary>
            <param name="addressFamily">The address family.</param>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readTimeout">The read timeout.</param>
            <param name="receiveBufferSize">Size of the receive buffer.</param>
            <param name="sendBufferSize">Size of the send buffer.</param>
            <param name="socketConfigurator">The socket configurator.</param>
            <param name="writeTimeout">The write timeout.</param>
            <returns>A new TcpStreamSettings instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.ConnectionDescription">
            <summary>
            Represents information describing a connection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Connections.HelloResult)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.ConnectionDescription"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="helloResult">The hello result.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.AvailableCompressors">
            <summary>
            Gets the available compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
            <value>
            The connection identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.HelloResult">
            <summary>
            Gets the hello result.
            </summary>
            <value>
            The hello result.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxBatchCount">
            <summary>
            Gets the maximum number of documents in a batch.
            </summary>
            <value>
            The maximum number of documents in a batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxDocumentSize">
            <summary>
            Gets the maximum size of a document.
            </summary>
            <value>
            The maximum size of a document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxMessageSize">
            <summary>
            Gets the maximum size of a message.
            </summary>
            <value>
            The maximum size of a message.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxWireDocumentSize">
            <summary>
            Gets the maximum size of a wire document.
            </summary>
            <value>
            The maximum size of a wire document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxWireVersion">
            <summary>
            Gets the maximum wire version.
            </summary>
            <value>
            The maximum wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MinWireVersion">
            <summary>
            Gets the minimum wire version.
            </summary>
            <value>
            The minimum wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.ServerVersion">
            <summary>
            Gets the server version.
            </summary>
            <value>
            The server version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
            <value>
            The service identifier.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.Equals(MongoDB.Driver.Core.Connections.ConnectionDescription)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.WithConnectionId(MongoDB.Driver.Core.Connections.ConnectionId)">
            <summary>
            Returns a new instance of ConnectionDescription with a different connection identifier.
            </summary>
            <param name="value">The value.</param>
            <returns>A connection description.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.ConnectionDescriptionExtensions">
            <summary>
            Represents internal ConnectionDescription extension methods.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.ConnectionId">
            <summary>
            Represents a connection identifier.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.ConnectionId"/> class.
            </summary>
            <param name="serverId">The server identifier.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.ConnectionId"/> class.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="localValue">The local value.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
            <value>
            The server identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.LocalValue">
            <summary>
            Gets the local value.
            </summary>
            <value>
            The local value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.LongLocalValue">
            <summary>
            Gets the local value.
            </summary>
            <value>
            The local value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.ServerValue">
            <summary>
            Gets the server value.
            </summary>
            <value>
            The server value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.LongServerValue">
            <summary>
            Gets the server value.
            </summary>
            <value>
            The server value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.Equals(MongoDB.Driver.Core.Connections.ConnectionId)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.StructurallyEquals(MongoDB.Driver.Core.Connections.ConnectionId)">
            <summary>
            Compares all fields of two ConnectionId instances (Equals ignores the ServerValue).
            </summary>
            <param name="other">The other ConnectionId.</param>
            <returns>True if both instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.WithServerValue(System.Int64)">
            <summary>
            Returns a new instance of ConnectionId with a new server value.
            </summary>
            <param name="serverValue">The server value.</param>
            <returns>A ConnectionId.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.ConnectionInitializer">
            <summary>
            Represents a connection initializer (opens and authenticates connections).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.HelloResult">
            <summary>
            Represents the result of a hello or legacy hello command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.HelloResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.HelloResult"/> class.
            </summary>
            <param name="wrapped">The wrapped result document.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.Compressions">
            <summary>
            Gets the compressor types.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.ConnectionIdServerValue">
            <summary>
            Gets the connection id server value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.ElectionId">
            <summary>
            Gets the election identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.HasSaslSupportedMechs">
            <summary>
            Get whether SaslSupportedMechs was part of the hello response.
            </summary>
            <value>
            Whether SaslSupportedMechs was part of the hello response.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.IsArbiter">
            <summary>
            Gets a value indicating whether this instance is an arbiter.
            </summary>
            <value>
            <c>true</c> if this instance is an arbiter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.IsMongocryptd">
            <summary>
            Gets a value indicating whether this instance is a mongocryptd.
            </summary>
            <value>
            <c>true</c> if this instance is a mongocryptd; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.IsReplicaSetMember">
            <summary>
            Gets a value indicating whether this instance is a replica set member.
            </summary>
            <value>
            <c>true</c> if this instance is a replica set member; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.LastWriteTimestamp">
            <summary>
            Gets the last write timestamp.
            </summary>
            <value>
            The last write timestamp.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.LogicalSessionTimeout">
            <summary>
            Gets the logical session timeout.
            </summary>
            <value>
            The logical session timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.MaxBatchCount">
            <summary>
            Gets the maximum number of documents in a batch.
            </summary>
            <value>
            The maximum number of documents in a batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.MaxDocumentSize">
            <summary>
            Gets the maximum size of a document.
            </summary>
            <value>
            The maximum size of a document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.MaxMessageSize">
            <summary>
            Gets the maximum size of a message.
            </summary>
            <value>
            The maximum size of a message.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.Me">
            <summary>
            Gets the endpoint the server is claiming it is known as.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.SaslSupportedMechs">
            <summary>
            Get the SaslSupportedMechs.
            </summary>
            <value>
            The SaslSupportedMechs. Empty if saslSupportedMechs was an empty list or if saslSupportedMechs was not
            included in the hello response.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.ServerType">
            <summary>
            Gets the type of the server.
            </summary>
            <value>
            The type of the server.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
            <value>
            The service identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.SpeculativeAuthenticate">
            <summary>
            Get the SpeculativeAuthenticate reply.
            </summary>
            <value>
            Null if hello["ok"] != 1 or if the SpeculativeAuthenticate reply was not included in the hello response.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.Tags">
            <summary>
            Gets the replica set tags.
            </summary>
            <value>
            The replica set tags.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.TopologyVersion">
            <summary>
            Get the TopologyVersion.
            </summary>
            <value>
            Null if TopologyVersion was not included in the hello response.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.MaxWireVersion">
            <summary>
            Gets the maximum wire version.
            </summary>
            <value>
            The maximum wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.MinWireVersion">
            <summary>
            Gets the minimum wire version.
            </summary>
            <value>
            The minimum wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.Wrapped">
            <summary>
            Gets the wrapped result document.
            </summary>
            <value>
            The wrapped result document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Connections.HelloResult.HelloOk">
            <summary>
            Gets whether the server support the hello command.
            </summary>
            <value>
            True if helloOk:true was included in the response; false otherwise.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.HelloResult.Equals(MongoDB.Driver.Core.Connections.HelloResult)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.HelloResult.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.HelloResult.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.HelloResult.GetReplicaSetConfig">
            <summary>
            Gets the replica set configuration.
            </summary>
            <returns>The replica set configuration.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.IStreamFactory">
            <summary>
            Represents a stream factory.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.IStreamFactory.CreateStream(System.Net.EndPoint,System.Threading.CancellationToken)">
            <summary>
            Creates a stream.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.IStreamFactory.CreateStreamAsync(System.Net.EndPoint,System.Threading.CancellationToken)">
            <summary>
            Creates a stream.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the Stream.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.SslStreamFactory">
            <summary>
            Represents a factory for an ssl stream.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.SslStreamFactory.#ctor(MongoDB.Driver.Core.Configuration.SslStreamSettings,MongoDB.Driver.Core.Connections.IStreamFactory)">
            <summary>
            Constructs an Ssl Stream Factory.
            </summary>
            <param name="settings">The SslStreamSettings.</param>
            <param name="wrapped">The underlying stream factory.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(System.Net.EndPoint,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStreamAsync(System.Net.EndPoint,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Connections.TcpStreamFactory">
            <summary>
            Represents a factory for a binary stream over a TCP/IP connection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterAddedServerEvent">
            <summary>
            Occurs after a server is added to the cluster.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterAddedServerEvent" /> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="duration">The duration of time it took to add the server.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.Duration">
            <summary>
            Gets the duration of time it took to add a server,
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterAddingServerEvent">
            <summary>
            Occurs before a server is added to the cluster.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.Net.EndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterAddingServerEvent"/> struct.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.EndPoint">
            <summary>
            Gets the end point.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterClosedEvent">
            <summary>
            Occurs after a cluster is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterClosedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterClosedEvent"/> struct.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
            <param name="duration">The duration of time it took to close the cluster.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterClosedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterClosedEvent.Duration">
            <summary>
            Gets the duration of time it took to close the cluster.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterClosedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterClosingEvent">
            <summary>
            Occurs before a cluster is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterClosingEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterClosingEvent"/> struct.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterClosingEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterClosingEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent">
            <summary>
            Occurs when a cluster has changed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ClusterDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent"/> struct.
            </summary>
            <param name="oldDescription">The old description.</param>
            <param name="newDescription">The new description.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.OldDescription">
            <summary>
            Gets the old description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.NewDescription">
            <summary>
            Gets the new description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterEnteredSelectionQueueEvent">
            <summary>
            Occurs when entering selection wait queue.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterOpenedEvent">
            <summary>
            Occurs after a cluster is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterOpenedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core.Configuration.ClusterSettings,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterOpenedEvent"/> struct.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
            <param name="clusterSettings">The cluster settings.</param>
            <param name="duration">The duration of time it took to open the cluster.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.ClusterSettings">
            <summary>
            Gets the cluster settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.Duration">
            <summary>
            Gets the duration of time it took to open the cluster.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterOpeningEvent">
            <summary>
            Occurs before a cluster is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterOpeningEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core.Configuration.ClusterSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterOpeningEvent"/> struct.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
            <param name="clusterSettings">The cluster settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpeningEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpeningEvent.ClusterSettings">
            <summary>
            Gets the cluster settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterOpeningEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent">
            <summary>
            Occurs after a server has been removed from the cluster.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="reason">The reason.</param>
            <param name="duration">The duration of time it took to remove the server.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.Duration">
            <summary>
            Gets the duration of time it took to remove the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.Reason">
            <summary>
            Gets the reason the server was removed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent">
            <summary>
            Occurs before a server is removed from the cluster.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="reason">The reason the server is being removed.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.Reason">
            <summary>
            Gets the reason the server is being removed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent">
            <summary>
            Occurs after a server is selected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,MongoDB.Driver.Core.Servers.ServerDescription,System.TimeSpan,System.Nullable{System.Int64},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent" /> struct.
            </summary>
            <param name="clusterDescription">The cluster description.</param>
            <param name="serverSelector">The server selector.</param>
            <param name="selectedServer">The selected server.</param>
            <param name="duration">The duration of time it took to select the server.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="operationName">The operation name.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.ClusterDescription">
            <summary>
            Gets the cluster description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.Duration">
            <summary>
            Gets the duration of time it took to select the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.OperationName">
            <summary>
            Gets the operation name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.ServerSelector">
            <summary>
            Gets the server selector.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.SelectedServer">
            <summary>
            Gets the selected server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent">
            <summary>
            Occurs before a server is selected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,System.Nullable{System.Int64},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent" /> struct.
            </summary>
            <param name="clusterDescription">The cluster description.</param>
            <param name="serverSelector">The server selector.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="operationName">The operation name.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.ClusterDescription">
            <summary>
            Gets the cluster description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.OperationName">
            <summary>
            Gets the operation name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.ServerSelector">
            <summary>
            Gets the server selector.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent">
            <summary>
            Occurs when selecting a server fails.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,System.Exception,System.Nullable{System.Int64},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent" /> struct.
            </summary>
            <param name="clusterDescription">The cluster description.</param>
            <param name="serverSelector">The server selector.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="operationName">The operation name.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.ClusterDescription">
            <summary>
            Gets the cluster description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.OperationName">
            <summary>
            Gets the operation name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.ServerSelector">
            <summary>
            Gets the server selector.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.CommandFailedEvent">
            <summary>
            Occurs when a command has failed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.CommandFailedEvent.#ctor(System.String,MongoDB.Driver.DatabaseNamespace,System.Exception,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandFailedEvent" /> struct.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="requestId">The request identifier.</param>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.CommandFailedEvent.#ctor(System.String,MongoDB.Driver.DatabaseNamespace,System.Exception,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{MongoDB.Bson.ObjectId},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandFailedEvent" /> struct.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="requestId">The request identifier.</param>
            <param name="connectionId">The connection identifier.</param>
            <param name="serviceId">The service identifier.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.CommandName">
            <summary>
            Gets the name of the command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.Failure">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.RequestId">
            <summary>
            Gets the request identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.CommandStartedEvent">
            <summary>
            Occurs when a command has started.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.CommandStartedEvent.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Driver.DatabaseNamespace,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandStartedEvent" /> class.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="command">The command.</param>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="requestId">The request identifier.</param>
            <param name="connectionId">The connection identifier.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.CommandStartedEvent.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Driver.DatabaseNamespace,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{MongoDB.Bson.ObjectId})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandStartedEvent" /> class.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="command">The command.</param>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="requestId">The request identifier.</param>
            <param name="connectionId">The connection identifier.</param>
            <param name="serviceId">The service identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.Command">
            <summary>
            Gets the command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.CommandName">
            <summary>
            Gets the name of the command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.RequestId">
            <summary>
            Gets the request identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.CommandSucceededEvent">
            <summary>
            Occurs when a command has succeeded.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.CommandSucceededEvent.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Driver.DatabaseNamespace,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandSucceededEvent" /> struct.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="reply">The reply.</param>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="requestId">The request identifier.</param>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.CommandSucceededEvent.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Driver.DatabaseNamespace,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{MongoDB.Bson.ObjectId},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandSucceededEvent" /> struct.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="reply">The reply.</param>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="requestId">The request identifier.</param>
            <param name="connectionId">The connection identifier.</param>
            <param name="serviceId">The service identifier.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.CommandName">
            <summary>
            Gets the name of the command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.Reply">
            <summary>
            Gets the reply.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.RequestId">
            <summary>
            Gets the request identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason">
            <summary>
            Represents the reason an attempt to check out a connection failed.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason.PoolClosed">
            <summary>
            The connection pool is closed.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason.Timeout">
            <summary>
            Timeout waiting for a connection to become available.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason.ConnectionError">
            <summary>
            Connection error while opening a new connection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionClosedEvent">
            <summary>
            Occurs after a connection is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionClosedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionClosedEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to close the connection.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.Duration">
            <summary>
            Gets the duration of time it took to close the connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionClosedReason">
            <summary>
            Represents the reason a connection was closed.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionClosedReason.Stale">
            <summary>
            The pool was cleared, making the connection no longer valid.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionClosedReason.Idle">
            <summary>
            The connection became stale by being available for too long.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionClosedReason.Error">
            <summary>
            The connection experienced an error, making it no longer valid.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionClosedReason.PoolClosed">
            <summary>
            The pool was closed, making the connection no longer valid.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Events.ConnectionClosedReason.Unknown">
            <summary>
            The reason the connection was closed is unknown.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionClosingEvent">
            <summary>
            Occurs before a connection is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionClosingEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionClosingEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionCreatedEvent">
            <summary>
            Occurs when a connection is created.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionCreatedEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="connectionSettings">The connection settings.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.ConnectionSettings">
            <summary>
            Gets the connection settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionCreatedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionFailedEvent">
            <summary>
            Occurs when a connection fails.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionFailedEvent"/> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionOpenedEvent">
            <summary>
            Occurs after a connection is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionOpenedEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="connectionSettings">The connection settings.</param>
            <param name="duration">The duration of time it took to open the connection.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ConnectionSettings">
            <summary>
            Gets the connection settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.Duration">
            <summary>
            Gets the duration of time it took to open the connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionOpeningEvent">
            <summary>
            Occurs before a connection is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionOpeningEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="connectionSettings">The connection settings.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ConnectionSettings">
            <summary>
            Gets the connection settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent">
            <summary>
            Occurs when a connection fails to open.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.Exception,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="connectionSettings">The connection settings.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ConnectionSettings">
            <summary>
            Gets the connection settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent">
            <summary>
            Occurs after a connection is added to the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to add the connection to the pool.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.Duration">
            <summary>
            Gets the duration of time it took to add the server to the pool.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent">
            <summary>
            Occurs before a connection is added to the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent" /> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent">
            <summary>
            Occurs after a connection is checked in to the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to check in the connection.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.Duration">
            <summary>
            Gets the duration of time it took to check in the connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent">
            <summary>
            Occurs after a connection is checked out of the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to check out the connection.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.Duration">
            <summary>
            Gets the duration of time it took to check out the connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent">
            <summary>
            Occurs before a connection is checked in to the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent">
            <summary>
            Occurs before a connection is checked out of the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent" /> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent">
            <summary>
            Occurs when a connection could not be checked out of the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Exception,System.Nullable{System.Int64},System.TimeSpan,MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent" /> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
            <param name="duration">The duration of time it took trying to check out the connection.</param>
            <param name="reason">The reason the checkout failed.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.Reason">
            <summary>
            Gets the reason the checkout failed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.Duration">
            <summary>
            Gets the duration of time it took trying to check out the connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent">
            <summary>
            Occurs after the pool is cleared.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
            <param name="closeInUseConnections">Whether in use connections should be closed.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,System.Nullable{MongoDB.Bson.ObjectId})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
            <param name="serviceId">The service identifier.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,System.Nullable{MongoDB.Bson.ObjectId},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
            <param name="serviceId">The service identifier.</param>
            <param name="closeInUseConnections">Whether in use connections should be closed.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.CloseInUseConnections">
            <summary>
            Gets a value indicating whether in use connections should be closed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.ConnectionPoolSettings">
            <summary>
            Gets the connection pool settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent">
            <summary>
            Occurs when the pool is about to be cleared.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
            <param name="closeInUseConnections">Whether in use connections should be closed.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,System.Nullable{MongoDB.Bson.ObjectId})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
            <param name="serviceId">The service identifier.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,System.Nullable{MongoDB.Bson.ObjectId},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
            <param name="serviceId">The service identifier.</param>
            <param name="closeInUseConnections">Whether in use connections should be closed.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.CloseInUseConnections">
            <summary>
            Gets a value indicating whether in use connections should be closed.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.ConnectionPoolSettings">
            <summary>
            Gets the connection pool settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.ServiceId">
            <summary>
            Gets the service identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent">
            <summary>
            Occurs after the pool is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent">
            <summary>
            Occurs before the pool is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent">
            <summary>
            Occurs after the pool is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.ConnectionPoolSettings">
            <summary>
            Gets the connection pool settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent">
            <summary>
            Occurs before the pool is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.ConnectionPoolSettings">
            <summary>
            Gets the connection pool settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent">
            <summary>
            Occurs after the pool is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="connectionPoolSettings">The connection pool settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent.ConnectionPoolSettings">
            <summary>
            Gets the connection pool settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent">
            <summary>
            Occurs after a connection is removed from the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to remove the connection from the pool.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.Duration">
            <summary>
            Gets the duration of time it took to remove the connection from the pool.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent">
            <summary>
            Occurs before a connection is removed from the pool.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent">
            <summary>
            Occurs after a message is received.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="responseTo">The id of the message we received a response to.</param>
            <param name="length">The length of the received message.</param>
            <param name="networkDuration">The duration of network time it took to receive the message.</param>
            <param name="deserializationDuration">The duration of deserialization time it took to receive the message.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.Duration">
            <summary>
            Gets the duration of time it took to receive the message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.DeserializationDuration">
            <summary>
            Gets the duration of deserialization time it took to receive the message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.NetworkDuration">
            <summary>
            Gets the duration of network time it took to receive the message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.Length">
            <summary>
            Gets the length of the received message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ResponseTo">
            <summary>
            Gets the id of the message we received a response to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent">
            <summary>
            Occurs before a message is received.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int32,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="responseTo">The id of the message we are receiving a response to.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ResponseTo">
            <summary>
            Gets the id of the message we are receiving a response to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent">
            <summary>
            Occurs when a message was unable to be received.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int32,System.Exception,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="responseTo">The id of the message we were receiving a response to.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ResponseTo">
            <summary>
            Gets id of the message we were receiving a response to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent">
            <summary>
            Occurs before a message is sent.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IReadOnlyList{System.Int32},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="requestIds">The request ids.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.RequestIds">
            <summary>
            Gets the request ids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent">
            <summary>
            Occurs when a message could not be sent.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IReadOnlyList{System.Int32},System.Exception,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="requestIds">The request ids.</param>
            <param name="exception">The exception.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.RequestIds">
            <summary>
            Gets the request ids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent">
            <summary>
            Occurs after a message has been sent.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IReadOnlyList{System.Int32},System.Int32,System.TimeSpan,System.TimeSpan,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent" /> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="requestIds">The request ids.</param>
            <param name="length">The length.</param>
            <param name="networkDuration">The duration of time spent on the network.</param>
            <param name="serializationDuration">The duration of time spent serializing the messages.</param>
            <param name="operationId">The operation identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.Duration">
            <summary>
            Gets the duration of time it took to send the message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.NetworkDuration">
            <summary>
            Gets the duration of time spent on the network.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.OperationId">
            <summary>
            Gets the operation identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.SerializationDuration">
            <summary>
            Gets the duration of time spent serializing the messages.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.Length">
            <summary>
            Gets the combined length of the messages.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.RequestIds">
            <summary>
            Gets the request ids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber">
            <summary>
            An event subscriber that writes command events to a trace source.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber.#ctor(System.Diagnostics.TraceSource)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber"/> class.
            </summary>
            <param name="traceSource">The trace source.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber">
            <summary>
            An event subscriber that writes to a trace source.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber.#ctor(System.Diagnostics.TraceSource)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber"/> class.
            </summary>
            <param name="traceSource">The trace source.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber">
            <summary>
            An event subscriber that writes SDAM events to a trace source.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber.#ctor(System.Diagnostics.TraceSource)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber"/> class.
            </summary>
            <param name="traceSource">The trace source.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Events.IEventSubscriber">
            <summary>
            A subscriber to events.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.IEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
            <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent"/>.
            </summary>
            <typeparam name="TEvent">The type of the event.</typeparam>
            <param name="handler">The handler.</param>
            <returns><c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ReflectionEventSubscriber">
            <summary>
            Subscribes methods with a single argument to events 
            of that single argument's type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ReflectionEventSubscriber.#ctor(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ReflectionEventSubscriber" /> class.
            </summary>
            <param name="instance">The instance.</param>
            <param name="methodName">Name of the method to match against.</param>
            <param name="bindingFlags">The binding flags.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ReflectionEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Events.SdamInformationEvent">
            <summary>
            An informational event used for logging Server Discovery and Monitoring (SDAM) events.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.SdamInformationEvent.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.SdamInformationEvent"/> struct.
            </summary>
            <param name="messageFormat">Message format.</param>
            <param name="arg0">Message argument.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.SdamInformationEvent.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.SdamInformationEvent"/> struct.
            </summary>
            <param name="messageFormat">Message format.</param>
            <param name="args">Message arguments.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.SdamInformationEvent.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.SdamInformationEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.SdamInformationEvent.ToString">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerClosedEvent">
            <summary>
            Occurs after a server is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerClosedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerClosedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="duration">The duration of time it took to close the server.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.Duration">
            <summary>
            Gets the duration of time it took to close the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerClosingEvent">
            <summary>
            Occurs before a server is closed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerClosingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerClosingEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosingEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosingEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerClosingEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent">
            <summary>
            Occurs after a server's description has changed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerDescription,MongoDB.Driver.Core.Servers.ServerDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent"/> struct.
            </summary>
            <param name="oldDescription">The old description.</param>
            <param name="newDescription">The new description.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.NewDescription">
            <summary>
            Gets the new description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.OldDescription">
            <summary>
            Gets the old description.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent">
            <summary>
            Occurs when a heartbeat failed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent"/> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="exception">The exception.</param>
            <param name="awaited">The awaited flag.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent"/> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time passed since corresponding <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent"/>.</param>
            <param name="exception">The exception.</param>
            <param name="awaited">The awaited flag.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.Awaited">
            <summary>
            Determines if this heartbeat event is for an awaitable hello.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.Duration">
            <summary>
            Gets the duration of time passed since corresponding <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent">
            <summary>
            Occurs before heartbeat is issued.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent"/> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="awaited">The awaited flag.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.Awaited">
            <summary>
            Determines if this heartbeat event is for an awaitable hello.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent">
            <summary>
            Occurs when a heartbeat succeeded.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent"/> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to complete the heartbeat.</param>
            <param name="awaited">The awaited flag.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Boolean,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent"/> struct.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="duration">The duration of time it took to complete the heartbeat.</param>
            <param name="awaited">The awaited flag.</param>
            <param name="reply">The server response.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.Awaited">
            <summary>
            Determines if this heartbeat event is for an awaitable hello.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.Duration">
            <summary>
            Gets the duration of time it took to complete the heartbeat.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.Reply">
            <summary>
            Gets the server response.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerOpenedEvent">
            <summary>
            Occurs after a server is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerOpenedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ServerSettings,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerOpenedEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="serverSettings">The server settings.</param>
            <param name="duration">The duration of time it took to open the server.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.Duration">
            <summary>
            Gets the duration of time it took to open the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.ServerSettings">
            <summary>
            Gets the server settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.ServerOpeningEvent">
            <summary>
            Occurs before a server is opened.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.ServerOpeningEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerOpeningEvent"/> struct.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="serverSettings">The server settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.ServerSettings">
            <summary>
            Gets the server settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Events.SingleEventSubscriber`1">
            <summary>
            Subscriber for a single type of event.
            </summary>
            <typeparam name="TSingleEvent">The type of the single event.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.SingleEventSubscriber`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.SingleEventSubscriber`1"/> class.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Events.SingleEventSubscriber`1.TryGetEventHandler``1(System.Action{``0}@)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.BatchableSource`1">
            <summary>
            Represents a batch of items that can be split if not all items can be processed at once.
            </summary>
            <typeparam name="T">The type of the items.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.BatchableSource`1"/> class.
            </summary>
            <remarks>
            Use this overload when you know the batch is small and won't have to be broken up into sub-batches. 
            In that case using this overload is simpler than using an enumerator and using the other constructor.
            </remarks>
            <param name="batch">The single batch.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.BatchableSource`1"/> class.
            </summary>
            <param name="enumerator">The enumerator that will provide the items for the batch.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.BatchableSource`1" /> class.
            </summary>
            <param name="items">The items.</param>
            <param name="canBeSplit">if set to <c>true</c> the batch can be split.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.BatchableSource`1"/> class.
            </summary>
            <param name="items">The items.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <param name="canBeSplit">if set to <c>true</c> the batch can be split.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.AllItemsWereProcessed">
            <summary>
            Gets a value indicating whether all items were processed.
            </summary>
            <value>
              <c>true</c> if all items were processed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.CanBeSplit">
            <summary>
            Gets a value indicating whether the batch can be split.
            </summary>
            <value>
              <c>true</c> if the batch can be split; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.ProcessedCount">
            <summary>
            Gets the count of processed items. Equal to zero until SetProcessedCount has been called.
            </summary>
            <value>
            The count of processed items.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.AdvancePastProcessedItems">
            <summary>
            Advances past the processed items.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.GetBatchItems">
            <summary>
            Gets the items in the batch.
            </summary>
            <returns>
            The items in the batch.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.GetProcessedItems">
            <summary>
            Gets the items that were processed.
            </summary>
            <returns>
            The items that were processed.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.GetUnprocessedItems">
            <summary>
            Gets the items that were not processed.
            </summary>
            <returns>
            The items that were not processed.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.SetProcessedCount(System.Int32)">
            <summary>
            Sets the processed count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.ConnectionStringConversions.GetComputedWaitQueueSize(System.Int32,System.Double)">
            <summary>
            Compute the wait queue size.
            </summary>
            <param name="effectiveMaxConnections">The max number of connections.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>The computed wait queue size.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.ConnectionStringConversions.GetEffectiveMaxConnections(System.Int32)">
            <summary>
            Gets the effective max connections.
            </summary>
            <param name="maxConnections">The max connections (0 means no max).</param>
            <returns>The effective max connections.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.ConnectionStringConversions.GetEffectiveMaxConnections(System.Nullable{System.Int32})">
            <summary>
            Gets the effective max connections.
            </summary>
            <param name="maxConnections">The max connections (0 means no max).</param>
            <returns>The effective max connections (or null if maxConnections is null).</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.EndPointHelper">
            <summary>
            Represents helper methods for EndPoints.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.EndPointHelper.EndPointEqualityComparer">
            <summary>
            Gets an end point equality comparer.
            </summary>
            <value>
            An end point equality comparer.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.Contains(System.Collections.Generic.IEnumerable{System.Net.EndPoint},System.Net.EndPoint)">
            <summary>
            Determines whether a list of end points contains a specific end point.
            </summary>
            <param name="endPoints">The list of end points.</param>
            <param name="endPoint">The specific end point to search for.</param>
            <returns>True if the list of end points contains the specific end point.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.Equals(System.Net.EndPoint,System.Net.EndPoint)">
            <summary>
            Compares two end points.
            </summary>
            <param name="a">The first end point.</param>
            <param name="b">The second end point.</param>
            <returns>True if both end points are equal, or if both are null.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.FromObjectData(System.Collections.Generic.List{System.Object})">
            <summary>
            Creates an end point from object data saved during serialization.
            </summary>
            <param name="info">The object data.</param>
            <returns>An end point.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.GetObjectData(System.Net.EndPoint)">
            <summary>
            Gets the object data required to serialize an end point.
            </summary>
            <param name="value">The end point.</param>
            <returns>The object data.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.SequenceEquals(System.Collections.Generic.IEnumerable{System.Net.EndPoint},System.Collections.Generic.IEnumerable{System.Net.EndPoint})">
            <summary>
            Compares two sequences of end points.
            </summary>
            <param name="a">The first sequence of end points.</param>
            <param name="b">The second sequence of end points.</param>
            <returns>True if both sequences contain the same end points in the same order, or if both sequences are null.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.Parse(System.String)">
            <summary>
            Parses the string representation of an end point.
            </summary>
            <param name="value">The value to parse.</param>
            <returns>An end point.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.ToString(System.Net.EndPoint)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <returns>
            A <see cref="T:System.String" /> that represents the end point.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.TryParse(System.String,System.Net.EndPoint@)">
            <summary>
            Tries to parse the string representation of an end point.
            </summary>
            <param name="value">The value to parse.</param>
            <param name="result">The result.</param>
            <returns>True if the string representation was parsed successfully.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.Ensure">
            <summary>
            Represents methods that can be used to ensure that parameter values meet expected conditions.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.HasValue``1(System.Nullable{``0},System.String)">
            <summary>
            Ensures that the value of a parameter is not null.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsBetween``1(``0,``0,``0,System.String)">
            <summary>
            Ensures that the value of a parameter is between a minimum and a maximum value.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsEqualTo``1(``0,``0,System.String)">
            <summary>
            Ensures that the value of a parameter is equal to a comparand.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="comparand">The comparand.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThan``1(``0,``0,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than a comparand.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="comparand">The comparand.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualTo``1(``0,``0,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than or equal to a comparand.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="comparand">The comparand.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualToZero(System.Int32,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualToZero(System.Int64,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualToZero(System.TimeSpan,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.Int32,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.Int64,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.Double,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.TimeSpan,System.String)">
            <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsInfiniteOrGreaterThanOrEqualToZero(System.TimeSpan,System.String)">
            <summary>
            Ensures that the value of a parameter is infinite or greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsInfiniteOrGreaterThanZero(System.TimeSpan,System.String)">
            <summary>
            Ensures that the value of a parameter is infinite or greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNotNull``1(``0,System.String)">
            <summary>
            Ensures that the value of a parameter is not null.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNotNullAndDoesNotContainAnyNulls``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Ensures that the value of a parameter is not null and does not contain any nulls.
            </summary>
            <typeparam name="T">Type of the value.</typeparam>
            <param name="values">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNotNullOrEmpty(System.String,System.String)">
            <summary>
            Ensures that the value of a parameter is not null or empty.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Ensures that the value of a parameter is not null or empty.
            </summary>
            <typeparam name="T">The type of the elements.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNull``1(``0,System.String)">
            <summary>
            Ensures that the value of a parameter is null.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrBetween``1(System.Nullable{``0},``0,``0,System.String)">
            <summary>
            Ensures that the value of a parameter is null or is between a minimum and a maximum value.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanOrEqualToZero(System.Nullable{System.Int32},System.String)">
            <summary>
            Ensures that the value of a parameter is null or greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanOrEqualToZero(System.Nullable{System.Int64},System.String)">
            <summary>
            Ensures that the value of a parameter is null or greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanZero(System.Nullable{System.Int32},System.String)">
            <summary>
            Ensures that the value of a parameter is null or greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanZero(System.Nullable{System.Int64},System.String)">
            <summary>
            Ensures that the value of a parameter is null or greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanZero(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Ensures that the value of a parameter is null or greater than zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrInfiniteOrGreaterThanOrEqualToZero(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Ensures that the value of a parameter is null, or infinite, or greater than or equal to zero.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrNotEmpty(System.String,System.String)">
            <summary>
            Ensures that the value of a parameter is null or not empty.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrValidTimeout(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Ensures that the value of a parameter is null or a valid timeout.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsValidTimeout(System.TimeSpan,System.String)">
            <summary>
            Ensures that the value of a parameter is a valid timeout.
            </summary>
            <param name="value">The value of the parameter.</param>
            <param name="paramName">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.That(System.Boolean,System.String)">
            <summary>
            Ensures that an assertion is true.
            </summary>
            <param name="assertion">The assertion.</param>
            <param name="message">The message to use with the exception that is thrown if the assertion is false.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.That(System.Boolean,System.String,System.String)">
            <summary>
            Ensures that an assertion is true.
            </summary>
            <param name="assertion">The assertion.</param>
            <param name="message">The message to use with the exception that is thrown if the assertion is false.</param>
            <param name="paramName">The parameter name.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Ensure.That``1(``0,System.Func{``0,System.Boolean},System.String,System.String)">
            <summary>
            Ensures that the value of a parameter meets an assertion.
            </summary>
            <typeparam name="T">Type type of the value.</typeparam>
            <param name="value">The value of the parameter.</param>
            <param name="assertion">The assertion.</param>
            <param name="paramName">The name of the parameter.</param>
            <param name="message">The message to use with the exception that is thrown if the assertion is false.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.ExceptionMapper">
            <summary>
            A mapper from error responses to custom exceptions.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.ExceptionMapper.Map(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Bson.BsonDocument)">
            <summary>
            Maps the specified response to a custom exception (if possible).
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="response">The response.</param>
            <returns>
            The custom exception (or null if the response could not be mapped to a custom exception).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.ExceptionMapper.Map(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.WriteConcernResult)">
            <summary>
            Maps the specified writeConcernResult to a custom exception (if necessary).
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="writeConcernResult">The write concern result.</param>
            <returns>
            The custom exception (or null if the writeConcernResult was not mapped to an exception).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.ExceptionMapper.MapNotPrimaryOrNodeIsRecovering(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.String)">
            <summary>
            Maps the server response to a MongoNotPrimaryException or MongoNodeIsRecoveringException (if appropriate).
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="command">The command.</param>
            <param name="response">The server response.</param>
            <param name="errorMessageFieldName">Name of the error message field.</param>
            <returns>The exception, or null if no exception necessary.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.Feature">
            <summary>
            Represents a feature that is not supported by all versions of the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateAccumulator">
            <summary>
            Gets the aggregate accumulator feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateFunction">
            <summary>
            Gets the aggregate $function stage feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateOptionsLet">
            <summary>
            Gets the aggregate let feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateMerge">
            <summary>
            Gets the aggregate merge feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateOutOnSecondary">
            <summary>
            Gets the aggregate out on secondary feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateOutTimeSeries">
            <summary>
            Gets the aggregate out to time series feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateOutToDifferentDatabase">
            <summary>
            Gets the aggregate out to a different database feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateToString">
            <summary>
            Gets the aggregate toString feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.AggregateUnionWith">
            <summary>
            Gets the aggregate unionWith feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.BitwiseOperators">
            <summary>
            Gets the bitwise operators feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ChangeStreamAllChangesForCluster">
            <summary>
            Gets the change stream all changes for cluster feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ChangeStreamForDatabase">
            <summary>
            Gets the change stream for database feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ChangeStreamPostBatchResumeToken">
            <summary>
            Gets the change stream post batch resume token feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ChangeStreamPrePostImages">
            <summary>
            Gets the change stream pre post images feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ChangeStreamSplitEventStage">
            <summary>
            Gets the change stream splitEvent stage feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ClientBulkWrite">
            <summary>
            Gets the client bulk write feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ClientSideEncryption">
            <summary>
            Gets the client side encryption feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ClusteredIndexes">
            <summary>
            Gets the clustered indexes feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.CreateIndexCommitQuorum">
            <summary>
            Gets the create index commit quorum feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.CreateIndexesUsingInsertOperations">
            <summary>
            Gets the create indexes using insert operations feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.CsfleRangeAlgorithm">
            <summary>
            Gets the csfle range algorithm feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Csfle2">
            <summary>
            Gets the client side field level encryption 2 feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Csfle2QEv2">
            <summary>
            Gets the client side field level encryption 2 queryable encryption v2 feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Csfle2QEv2RangeAlgorithm">
            <summary>
            Gets the csfle2 range algorithm feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.DateFromStringFormatArgument">
            <summary>
            Gets the $dateFromString format argument feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.DateOperatorsNewIn50">
            <summary>
            Gets the date operators added in 5.0 feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.DensifyStage">
            <summary>
            Gets the aggregate $densify stage feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.DocumentsStage">
            <summary>
            Gets the documents stage feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.DirectConnectionSetting">
            <summary>
            Gets the directConnection setting feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ElectionIdPriorityInSDAM">
            <summary>
            Gets the electionIdPriorityInSDAM feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Eval">
            <summary>
            Gets the eval feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.FailPointsBlockConnection">
            <summary>
            Gets the fail points block connection feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.FailPointsFailCommand">
            <summary>
            Gets the fail points fail command feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.FailPointsFailCommandForSharded">
            <summary>
            Gets the fail points fail command for sharded feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.FilterLimit">
            <summary>
            Gets filter limit feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.FindAllowDiskUse">
            <summary>
            Gets the find allowDiskUse feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.FindProjectionExpressions">
            <summary>
            Gets the find projection expressions feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.GeoNearCommand">
            <summary>
            Gets the geoNear command feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.GetField">
            <summary>
            Gets the getField feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.GetMoreComment">
            <summary>
            Gets the getMore comment feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.GroupCommand">
            <summary>
            Gets the group command feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.HedgedReads">
            <summary>
            Gets the hedged reads feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.HiddenIndex">
            <summary>
            Gets the hidden index feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.HintForDeleteOperations">
            <summary>
            Gets the hint for delete operations feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.HintForFindAndModifyFeature">
            <summary>
            Gets the hint for find and modify operations feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.HintForUpdateAndReplaceOperations">
            <summary>
            Gets the hint for update and replace operations feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.KeepConnectionPoolWhenNotPrimaryConnectionException">
            <summary>
            Gets the keep connection pool when NotPrimary connection exception feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.KeepConnectionPoolWhenReplSetStepDown">
            <summary>
            Gets the keep connection pool when replSetStepDown feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.LegacyWireProtocol">
            <summary>
            Gets the legacy wire protocol feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ListDatabasesAuthorizedDatabases">
            <summary>
            Get the list databases authorizedDatabases feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.LoadBalancedMode">
            <summary>
            Gets the load balanced mode feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.MmapV1StorageEngine">
            <summary>
            Gets the mmapv1 storage engine feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.PickAccumulatorsNewIn52">
            <summary>
            Gets the pick accumulators new in 5.2 feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.RegexMatch">
            <summary>
            Gets the regex match feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Round">
            <summary>
            Gets the $round feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ScramSha256Authentication">
            <summary>
            Gets the scram sha256 authentication feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ServerReturnsResumableChangeStreamErrorLabel">
            <summary>
            Gets the server returns resumableChangeStream label feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ServerReturnsRetryableWriteErrorLabel">
            <summary>
            Gets the server returns retryable writeError label feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.SetStage">
            <summary>
            Gets the $set stage feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.SetWindowFields">
            <summary>
            Gets the set window fields feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.SetWindowFieldsLocf">
            <summary>
            Gets the set window fields $locf feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ShardedTransactions">
            <summary>
            Gets the sharded transactions feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.SnapshotReads">
            <summary>
            Gets the snapshot reads feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.SortArrayOperator">
            <summary>
            Gets the $sortArray operator feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.SpeculativeAuthentication">
            <summary>
            Gets the speculative authentication feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.StableApi">
            <summary>
            Gets the speculative authentication feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.StreamingHello">
            <summary>
            Gets the streaming hello feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.ToConversionOperators">
            <summary>
            Gets the $toXyz conversion operators feature ($toDouble etc.).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Transactions">
            <summary>
            Gets the transactions feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.TrigOperators">
            <summary>
            Gets the trig operators feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.TrimOperator">
            <summary>
            Gets the trim operator feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.UpdateWithAggregationPipeline">
            <summary>
            Gets the update with aggregation pipeline feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.WildcardIndexes">
            <summary>
            Gets the wildcard indexes feature.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Feature.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.Feature" /> class.
            </summary>
            <param name="name">The name of the feature.</param>
            <param name="firstSupportedWireVersion">The first wire version that supports the feature.</param>
            <param name="supportRemovedWireVersion">The wire version that stops support the feature.</param>
            <param name="notSupportedMessage">The not supported error message.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.Name">
            <summary>
            Gets the name of the feature.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Feature.NotSupportedMessage">
            <summary>
            Gets the error message to be used by the feature support checks.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Feature.ThrowIfNotSupported(MongoDB.Driver.IMongoClient,System.Threading.CancellationToken)">
            <summary>
            Throws an exception if the feature is not supported in the server used by the client.
            </summary>
            <param name="client">The client.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Feature.ThrowIfNotSupportedAsync(MongoDB.Driver.IMongoClient,System.Threading.CancellationToken)">
            <summary>
            Throws an exception if the feature is not supported in the server used by the client.
            </summary>
            <param name="client">The client.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Feature.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.IFileSystemProvider">
            <summary>
            Abstractions of the file system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.IFile">
            <summary>
            Abstraction for static methods in <see cref="T:System.IO.File" />.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1">
            <summary>
            A serializer for BatchableSource that serializes a fixed count of items.
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.IO.IElementNameValidator,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1" /> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <param name="itemElementNameValidator">The item element name validator.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.Core.Misc.BatchableSource{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature">
            <summary>
            Represents the hint for find and modify feature.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature"/> class.
            </summary>
            <param name="name">The name of the feature.</param>
            <param name="firstSupportedWireVersion">The first wire version that supports the feature.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature.DriverMustThrowIfNotSupported(System.Int32)">
            <summary>
            Determines whether the driver must throw an exception if the feature is not supported by the server.
            </summary>
            <param name="wireVersion">The wire version.</param>
            <returns>Whether the driver must throw if feature is not supported.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.IBatchableSource`1">
            <summary>
            Represents a batch of items that can be split if not all items can be processed at once.
            </summary>
            <typeparam name="T">The type of the items.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.IBatchableSource`1.AllItemsWereProcessed">
            <summary>
            Gets a value indicating whether all items were processed.
            </summary>
            <value>
              <c>true</c> if all items were processed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.IBatchableSource`1.CanBeSplit">
            <summary>
            Gets a value indicating whether the batch can be split.
            </summary>
            <value>
              <c>true</c> if the batch can be split; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.IBatchableSource`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.IBatchableSource`1.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.IBatchableSource`1.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.IBatchableSource`1.ProcessedCount">
            <summary>
            Gets the count of processed items. Equal to zero until SetProcessedCount has been called.
            </summary>
            <value>
            The count of processed items.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.IBatchableSource`1.AdvancePastProcessedItems">
            <summary>
            Advances past the processed items.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.IBatchableSource`1.GetBatchItems">
            <summary>
            Gets the items in the batch.
            </summary>
            <returns>
            The items in the batch.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.IBatchableSource`1.GetProcessedItems">
            <summary>
            Gets the items that were processed.
            </summary>
            <returns>
            The items that were processed.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.IBatchableSource`1.GetUnprocessedItems">
            <summary>
            Gets the items that were not processed.
            </summary>
            <returns>
            The items that were not processed.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.IBatchableSource`1.SetProcessedCount(System.Int32)">
            <summary>
            Sets the processed count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.InterlockedInt32">
            <summary>
            Thread-safe helper to manage a value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.Range`1">
            <summary>
            Represents a range between a minimum and a maximum value.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Range`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.Range`1"/> class.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Range`1.Max">
            <summary>
            Gets the maximum value.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.Range`1.Min">
            <summary>
            Gets the minimum value.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Range`1.Equals(MongoDB.Driver.Core.Misc.Range{`0})">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Range`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Range`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Range`1.Overlaps(MongoDB.Driver.Core.Misc.Range{`0})">
            <summary>
            Determines whether this range overlaps with another range.
            </summary>
            <param name="other">The other range.</param>
            <returns>True if this range overlaps with the other </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.Range`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SecureStringHelper.ToInsecureString(System.Security.SecureString)">
            <summary>
            Should only be used when the safety of the data cannot be guaranteed.
            For instance, when the secure string is a password used in a plain text protocol.
            </summary>
            <param name="secureString">The secure string.</param>
            <returns>The CLR string.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SecureStringHelper.ToSecureString(System.String)">
            <summary>
            Converts <see cref="T:System.String"/> to <see cref="T:System.Security.SecureString"/>.
            </summary>
            <param name="value">The string value.</param>
            <returns>
            The secure string.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.SemanticVersion">
            <summary>
            Represents a semantic version number.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SemanticVersion"/> class.
            </summary>
            <param name="major">The major version.</param>
            <param name="minor">The minor version.</param>
            <param name="patch">The patch version.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SemanticVersion"/> class.
            </summary>
            <param name="major">The major version.</param>
            <param name="minor">The minor version.</param>
            <param name="patch">The patch version.</param>
            <param name="preRelease">The pre release version.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.CommitHash">
            <summary>
            Gets the internal build commit hash.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.CommitsAfterRelease">
            <summary>
            Gets the number of commits after release.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.Major">
            <summary>
            Gets the major version.
            </summary>
            <value>
            The major version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.Minor">
            <summary>
            Gets the minor version.
            </summary>
            <value>
            The minor version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.Patch">
            <summary>
            Gets the patch version.
            </summary>
            <value>
            The patch version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.PreRelease">
            <summary>
            Gets the pre release version.
            </summary>
            <value>
            The pre release version.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.CompareTo(MongoDB.Driver.Core.Misc.SemanticVersion)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.Equals(MongoDB.Driver.Core.Misc.SemanticVersion)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.Parse(System.String)">
            <summary>
            Parses a string representation of a semantic version.
            </summary>
            <param name="value">The string value to parse.</param>
            <returns>A semantic version.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.TryParse(System.String,MongoDB.Driver.Core.Misc.SemanticVersion@)">
            <summary>
            Tries to parse a string representation of a semantic version.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="result">The result.</param>
            <returns>True if the string representation was parsed successfully; otherwise false.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_Equality(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
            <summary>
            Determines whether two specified semantic versions have the same value.
            </summary>
            <param name="a">The first semantic version to compare, or null.</param>
            <param name="b">The second semantic version to compare, or null.</param>
            <returns>
            True if the value of a is the same as the value of b; otherwise false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_Inequality(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
            <summary>
            Determines whether two specified semantic versions have different values.
            </summary>
            <param name="a">The first semantic version to compare, or null.</param>
            <param name="b">The second semantic version to compare, or null.</param>
            <returns>
            True if the value of a is different from the value of b; otherwise false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_GreaterThan(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
            <summary>
            Determines whether the first specified SemanticVersion is greater than the second specified SemanticVersion.
            </summary>
            <param name="a">The first semantic version to compare, or null.</param>
            <param name="b">The second semantic version to compare, or null.</param>
            <returns>
            True if the value of a is greater than b; otherwise false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_GreaterThanOrEqual(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
            <summary>
            Determines whether the first specified SemanticVersion is greater than or equal to the second specified SemanticVersion.
            </summary>
            <param name="a">The first semantic version to compare, or null.</param>
            <param name="b">The second semantic version to compare, or null.</param>
            <returns>
            True if the value of a is greater than or equal to b; otherwise false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_LessThan(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
            <summary>
            Determines whether the first specified SemanticVersion is less than the second specified SemanticVersion.
            </summary>
            <param name="a">The first semantic version to compare, or null.</param>
            <param name="b">The second semantic version to compare, or null.</param>
            <returns>
            True if the value of a is less than b; otherwise false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_LessThanOrEqual(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
            <summary>
            Determines whether the first specified SemanticVersion is less than or equal to the second specified SemanticVersion.
            </summary>
            <param name="a">The first semantic version to compare, or null.</param>
            <param name="b">The second semantic version to compare, or null.</param>
            <returns>
            True if the value of a is less than or equal to b; otherwise false.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest">
            <summary>
            Represents a tentative request to acquire a SemaphoreSlim.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest.#ctor(System.Threading.SemaphoreSlim,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest"/> class.
            </summary>
            <param name="semaphore">The semaphore.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest.Task">
            <summary>
            Gets the semaphore wait task.
            </summary>
            <value>
            The semaphore wait task.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1">
            <summary>
            A serializer for BatchableSource that serializes as much of the BatchableSource as fits in the max batch count and size.
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.IO.IElementNameValidator,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1" /> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <param name="itemElementNameValidator">The item element name validator.</param>
            <param name="maxBatchCount">The maximum batch count.</param>
            <param name="maxItemSize">The maximum size of a serialized item.</param>
            <param name="maxBatchSize">The maximum size of the batch.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.Core.Misc.BatchableSource{`0})">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Misc.TaskExtensions.YieldNoContextAwaitable.YieldNoContextAwaiter.IsCompleted">
            <summary>Gets whether a yield is not required.</summary>
            <remarks>This property is intended for compiler user rather than use directly in code.</remarks>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Zero">
            <summary>
            Wire version 0.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server26">
            <summary>
            Wire version 2.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server30">
            <summary>
            Wire version 3.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server32">
            <summary>
            Wire version 4.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server34">
            <summary>
            Wire version 5.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server36">
            <summary>
            Wire version 6.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server40">
            <summary>
            Wire version 7.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server42">
            <summary>
            Wire version 8.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server44">
            <summary>
            Wire version 9.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server47">
            <summary>
            Wire version 10.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server48">
            <summary>
            Wire version 11.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server49">
            <summary>
            Wire version 12.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server50">
            <summary>
            Wire version 13.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server51">
            <summary>
            Wire version 14.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server52">
            <summary>
            Wire version 15.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server53">
            <summary>
            Wire version 16.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server60">
            <summary>
            Wire version 17.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server61">
            <summary>
            Wire version 18.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server62">
            <summary>
            Wire version 19.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server63">
            <summary>
            Wire version 20.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server70">
            <summary>
            Wire version 21.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server71">
            <summary>
            Wire version 22.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server72">
            <summary>
            Wire version 23.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server73">
            <summary>
            Wire version 24.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Misc.WireVersion.Server80">
            <summary>
            Wire version 25.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.#ctor(MongoDB.Driver.DatabaseNamespace,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.AggregateOperation`1"/> class.
            </summary>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="resultSerializer">The result value serializer.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.AggregateOperation`1"/> class.
            </summary>
            <param name="collectionNamespace">The collection namespace.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="resultSerializer">The result value serializer.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.AllowDiskUse">
            <summary>
            Gets or sets a value indicating whether the server is allowed to use the disk.
            </summary>
            <value>
            A value indicating whether the server is allowed to use the disk.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.BatchSize">
            <summary>
            Gets or sets the size of a batch.
            </summary>
            <value>
            The size of a batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.CollectionNamespace">
            <summary>
            Gets the collection namespace.
            </summary>
            <value>
            The collection namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
            <value>
            The database namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.Hint">
            <summary>
            Gets or sets the hint. This must either be a BsonString representing the index name or a BsonDocument representing the key pattern of the index.
            </summary>
            <value>
            The hint.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.Let">
            <summary>
            Gets or sets the "let" definition.
            </summary>
            <value>
            The "let" definition.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time.
            </summary>
            <value>
            The maximum await time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.MaxTime">
            <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
            <value>
            The maximum time the server should spend on this operation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.MessageEncoderSettings">
            <summary>
            Gets the message encoder settings.
            </summary>
            <value>
            The message encoder settings.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.Pipeline">
            <summary>
            Gets the pipeline.
            </summary>
            <value>
            The pipeline.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
            <value>
            The read concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.ResultSerializer">
            <summary>
            Gets the result value serializer.
            </summary>
            <value>
            The result value serializer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.RetryRequested">
            <summary>
            Gets or sets a value indicating whether to retry.
            </summary>
            <value>Whether to retry.</value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.UseCursor">
            <summary>
            Gets or sets a value indicating whether the server should use a cursor to return the results.
            </summary>
            <value>
            A value indicating whether the server should use a cursor to return the results.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.Execute(MongoDB.Driver.Core.Operations.RetryableReadContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.ExecuteAsync(MongoDB.Driver.Core.Operations.RetryableReadContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.BulkWriteBatchResult">
            <summary>
            Represents the result of one batch executed using a write command.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1">
            <summary>
            A change stream cursor.
            </summary>
            <typeparam name="TDocument">The type of the output documents.</typeparam>
            <seealso cref="T:MongoDB.Driver.IAsyncCursor`1" />
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1.Current">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1.#ctor(MongoDB.Driver.IAsyncCursor{MongoDB.Bson.RawBsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.Bindings.IReadBinding,MongoDB.Driver.Core.Operations.IChangeStreamOperation{`0},MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonTimestamp,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonTimestamp,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1" /> class.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="documentSerializer">The document serializer.</param>
            <param name="binding">The binding.</param>
            <param name="changeStreamOperation">The change stream operation.</param>
            <param name="aggregatePostBatchResumeToken">The post batch resume token from an aggregate command.</param>
            <param name="initialOperationTime">The initial operation time.</param>
            <param name="initialStartAfter">The start after value.</param>
            <param name="initialResumeAfter">The resume after value.</param>
            <param name="initialStartAtOperationTime">The start at operation time value.</param>
            <param name="maxWireVersion">The maximum wire version.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1.GetResumeToken">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1.MoveNext(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamCursor`1.MoveNextAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.BatchSize">
            <summary>
            Gets or sets the size of the batch.
            </summary>
            <value>
            The size of the batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
            <value>
            The collation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.CollectionNamespace">
            <summary>
            Gets the collection namespace.
            </summary>
            <value>
            The collection namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
            <value>
            The database namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.FullDocument">
            <summary>
            Gets or sets the full document option.
            </summary>
            <value>
            The full document option.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.FullDocumentBeforeChange">
            <summary>
            Gets or sets the full document before change option.
            </summary>
            <value>
            The full document before change option.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time.
            </summary>
            <value>
            The maximum await time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.MessageEncoderSettings">
            <summary>
            Gets the message encoder settings.
            </summary>
            <value>
            The message encoder settings.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.Pipeline">
            <summary>
            Gets the pipeline.
            </summary>
            <value>
            The pipeline.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
            <value>
            The read concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
            <value>
            The result serializer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.ResumeAfter">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.RetryRequested">
            <summary>
            Gets or sets a value indicating whether to retry.
            </summary>
            <value>Whether to retry.</value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.ShowExpandedEvents">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.StartAfter">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.StartAtOperationTime">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.Resume(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ChangeStreamOperation`1.ResumeAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.CreateSearchIndexesOperation">
            <summary>
            Represents a create search indexes operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.CreateSearchIndexesOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Operations.CreateSearchIndexRequest},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CreateIndexesOperation"/> class.
            </summary>
            <param name="collectionNamespace">The collection namespace.</param>
            <param name="requests">The requests.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.CreateSearchIndexesOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.CreateSearchIndexesOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.CursorBatchDeserializationHelper">
            <summary>
            A helper class for deserializing documents in a cursor batch.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.CursorBatchDeserializationHelper.DeserializeBatch``1(MongoDB.Bson.RawBsonArray,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Deserializes the documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="batch">The batch.</param>
            <param name="documentSerializer">The document serializer.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
            <returns>The documents.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.DropSearchIndexOperation">
            <summary>
            Represents a drop index operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.DropSearchIndexOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.String,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DropIndexOperation"/> class.
            </summary>
            <param name="collectionNamespace">The collection namespace.</param>
            <param name="indexName">The name of the index.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.DropSearchIndexOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.DropSearchIndexOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.ElementDeserializer`1">
            <summary>
            Represents a deserializer that deserializes the selected element and skips any others.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator">
            <summary>
            Represents an element name validator for replace operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator.Instance">
            <summary>
            Gets a pre-created instance of an ReplacementElementNameValidator.
            </summary>
            <value>
            The pre-created instance.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator.GetValidatorForChildContent(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator.IsValidElementName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator">
            <summary>
            Represents an element name validator for update operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.Instance">
            <summary>
            Gets a pre-created instance of an UpdateElementNameValidator.
            </summary>
            <value>
            The pre-created instance.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.GetValidatorForChildContent(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.IsValidElementName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator">
            <summary>
            Represents an element name validator that will validate element names for either an update or a replacement based on whether the first element name starts with a "$".
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator.GetValidatorForChildContent(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator.IsValidElementName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.MapReduceOperation`1">
            <summary>
            Represents a map-reduce operation.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceOperation`1"/> class.
            </summary>
            <param name="collectionNamespace">The collection namespace.</param>
            <param name="mapFunction">The map function.</param>
            <param name="reduceFunction">The reduce function.</param>
            <param name="resultSerializer">The result serializer.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperation`1.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
            <value>
            The read concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperation`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
            <value>
            The result serializer.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.CreateOutputOptions">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.CreateCommand(MongoDB.Driver.Core.Bindings.ICoreSessionHandle,MongoDB.Driver.Core.Connections.ConnectionDescription)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.MapReduceOperationBase">
            <summary>
            Represents a base class for map-reduce operations.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperationBase.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceOperationBase"/> class.
            </summary>
            <param name="collectionNamespace">The collection namespace.</param>
            <param name="mapFunction">The map function.</param>
            <param name="reduceFunction">The reduce function.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
            <value>
            The collation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.CollectionNamespace">
            <summary>
            Gets the collection namespace.
            </summary>
            <value>
            The collection namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.FinalizeFunction">
            <summary>
            Gets or sets the finalize function.
            </summary>
            <value>
            The finalize function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.JavaScriptMode">
            <summary>
            Gets or sets a value indicating whether objects emitted by the map function remain as JavaScript objects.
            </summary>
            <value>
            <remarks>
            Setting this value to true can result in faster execution, but requires more memory on the server, and if
            there are too many emitted objects the map-reduce operation may fail.
            </remarks>
              <c>true</c> if objects emitted by the map function remain as JavaScript objects; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Limit">
            <summary>
            Gets or sets the maximum number of documents to pass to the map function.
            </summary>
            <value>
            The maximum number of documents to pass to the map function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.MapFunction">
            <summary>
            Gets the map function.
            </summary>
            <value>
            The map function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.MaxTime">
            <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
            <value>
            The maximum time the server should spend on this operation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.MessageEncoderSettings">
            <summary>
            Gets the message encoder settings.
            </summary>
            <value>
            The message encoder settings.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.ReduceFunction">
            <summary>
            Gets the reduce function.
            </summary>
            <value>
            The reduce function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Scope">
            <summary>
            Gets or sets the scope document.
            </summary>
            <remarks>
            The scode document defines global variables that are accessible from the map, reduce and finalize functions.
            </remarks>
            <value>
            The scope document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Sort">
            <summary>
            Gets or sets the sort specification.
            </summary>
            <value>
            The sort specification.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Verbose">
            <summary>
            Gets or sets a value indicating whether to include extra information, such as timing, in the result.
            </summary>
            <value>
              <c>true</c> if extra information, such as timing, should be included in the result; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperationBase.CreateCommand(MongoDB.Driver.Core.Bindings.ICoreSessionHandle,MongoDB.Driver.Core.Connections.ConnectionDescription)">
            <summary>
            Creates the command.
            </summary>
            <param name="session">The session.</param>
            <param name="connectionDescription">The connection description.</param>
            <returns>
            The command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperationBase.CreateOutputOptions">
            <summary>
            Creates the output options.
            </summary>
            <returns>The output options.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation">
            <summary>
            Represents a map-reduce operation that outputs its results to a collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation"/> class.
            </summary>
            <param name="collectionNamespace">The collection namespace.</param>
            <param name="outputCollectionNamespace">The output collection namespace.</param>
            <param name="mapFunction">The map function.</param>
            <param name="reduceFunction">The reduce function.</param>
            <param name="messageEncoderSettings">The message encoder settings.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
            <value>
            A value indicating whether to bypass document validation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.NonAtomicOutput">
            <summary>
            Gets or sets a value indicating whether the server should not lock the database for merge and reduce output modes.
            </summary>
            <value>
              <c>true</c> if the server should not lock the database for merge and reduce output modes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.OutputCollectionNamespace">
            <summary>
            Gets the output collection namespace.
            </summary>
            <value>
            The output collection namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.OutputMode">
            <summary>
            Gets or sets the output mode.
            </summary>
            <value>
            The output mode.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.ShardedOutput">
            <summary>
            Gets or sets a value indicating whether the output collection should be sharded.
            </summary>
            <value>
              <c>true</c> if the output collection should be sharded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.WriteConcern">
            <summary>
            Gets or sets the write concern.
            </summary>
            <value>
            The write concern.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.CreateCommand(MongoDB.Driver.Core.Bindings.ICoreSessionHandle,MongoDB.Driver.Core.Connections.ConnectionDescription)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.CreateOutputOptions">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException">
            <summary>
            Represents a bulk write operation exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Operations.BulkWriteOperationResult,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.BulkWriteOperationError},MongoDB.Driver.Core.Operations.BulkWriteConcernError,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.WriteRequest})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="result">The result.</param>
            <param name="writeErrors">The write errors.</param>
            <param name="writeConcernError">The write concern error.</param>
            <param name="unprocessedRequests">The unprocessed requests.</param>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException" /> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.Result">
            <summary>
            Gets the result of the bulk write operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.UnprocessedRequests">
            <summary>
            Gets the unprocessed requests.
            </summary>
            <value>
            The unprocessed requests.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.WriteConcernError">
            <summary>
            Gets the write concern error.
            </summary>
            <value>
            The write concern error.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.WriteErrors">
            <summary>
            Gets the write errors.
            </summary>
            <value>
            The write errors.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.RetryabilityHelper.IsReauthenticationRequested(MongoDB.Driver.MongoCommandException,MongoDB.Bson.BsonDocument)">
            <summary>
            Value indicating whether the exception requests additional authentication attempt.
            </summary>
            <param name="mongoCommandException">The command exception.</param>
            <param name="command">The command.</param>
            <returns>The flag.</returns>
            <remarks>
            This logic is completely separate from a standard retry mechanism and related only to authentication.
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation.CreateCommandPayloads(MongoDB.Driver.Core.Bindings.IChannelHandle,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperationEmulator.MaxDocumentSize">
            <summary>
            Gets or sets the maximum size of a document.
            </summary>
            <value>
            The maximum size of a document.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerDescription">
            <summary>
            Represents information about a server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Net.EndPoint,MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Net.EndPoint},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ElectionId},MongoDB.Driver.Optional{System.Exception},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Nullable{System.DateTime}},MongoDB.Driver.Optional{System.DateTime},MongoDB.Driver.Optional{System.Nullable{System.DateTime}},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ReplicaSetConfig},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerState},MongoDB.Driver.Optional{MongoDB.Driver.TagSet},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.TopologyVersion},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerType},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.SemanticVersion},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.Range{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.ServerDescription" /> class.
            </summary>
            <param name="serverId">The server identifier.</param>
            <param name="endPoint">The end point.</param>
            <param name="reasonChanged">The reason the server description was last changed.</param>
            <param name="averageRoundTripTime">The average round trip time.</param>
            <param name="canonicalEndPoint">The canonical end point.</param>
            <param name="electionId">The election identifier.</param>
            <param name="heartbeatException">The heartbeat exception.</param>
            <param name="heartbeatInterval">The heartbeat interval.</param>
            <param name="helloOk">Whether the server supports the hello command.</param>
            <param name="lastHeartbeatTimestamp">The last heartbeat timestamp.</param>
            <param name="lastUpdateTimestamp">The last update timestamp.</param>
            <param name="lastWriteTimestamp">The last write timestamp.</param>
            <param name="logicalSessionTimeout">The logical session timeout.</param>
            <param name="maxBatchCount">The maximum batch count.</param>
            <param name="maxDocumentSize">The maximum size of a document.</param>
            <param name="maxMessageSize">The maximum size of a message.</param>
            <param name="maxWireDocumentSize">The maximum size of a wire document.</param>
            <param name="replicaSetConfig">The replica set configuration.</param>
            <param name="state">The server state.</param>
            <param name="tags">The replica set tags.</param>
            <param name="topologyVersion">The topology version.</param>
            <param name="type">The server type.</param>
            <param name="version">The server version.</param>
            <param name="wireVersionRange">The wire version range.</param>
            <exception cref="T:System.ArgumentException">EndPoint and ServerId.EndPoint must match.</exception>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.AverageRoundTripTime">
            <summary>
            Gets the average round trip time.
            </summary>
            <value>
            The average round trip time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.CanonicalEndPoint">
            <summary>
            Gets the canonical end point. This is the endpoint that the cluster knows this
            server by. Currently, it only applies to a replica set config and will match
            what is in the replica set configuration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ElectionId">
            <summary>
            Gets the election identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.EndPoint">
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.HeartbeatException">
            <summary>
            Gets the most recent heartbeat exception.
            </summary>
            <value>
            The the most recent heartbeat exception (null if the most recent heartbeat succeeded).
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.HeartbeatInterval">
            <summary>
            Gets the heartbeat interval.
            </summary>
            <value>
            The heartbeat interval.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.HelloOk">
            <summary>
            Whether the server supports the hello command.
            </summary>
            <value>
            True if the server responded with helloOk:true; false otherwise.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.IsCompatibleWithDriver">
            <summary>
            Gets a value indicating whether this server is compatible with the driver.
            </summary>
            <value>
            <c>true</c> if this server is compatible with the driver; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.IsDataBearing">
            <summary>
            Gets a value indicating whether this instance is a data bearing server.
            </summary>
            <value>
              <c>true</c> if this instance is a data bearing server; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.LastHeartbeatTimestamp">
            <summary>
            Gets the last heartbeat timestamp.
            </summary>
            <value>
            The last heartbeat timestamp.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.LastUpdateTimestamp">
            <summary>
            Gets the last update timestamp (when the ServerDescription itself was last updated).
            </summary>
            <value>
            The last update timestamp.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.LastWriteTimestamp">
            <summary>
            Gets the last write timestamp (from the lastWrite field of the hello or legacy hello result).
            </summary>
            <value>
            The last write timestamp.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.LogicalSessionTimeout">
            <summary>
            Gets the logical session timeout.
            </summary>
            <value>
            The logical session timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxBatchCount">
            <summary>
            Gets the maximum number of documents in a batch.
            </summary>
            <value>
            The maximum number of documents in a batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxDocumentSize">
            <summary>
            Gets the maximum size of a document.
            </summary>
            <value>
            The maximum size of a document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxMessageSize">
            <summary>
            Gets the maximum size of a message.
            </summary>
            <value>
            The maximum size of a message.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxWireDocumentSize">
            <summary>
            Gets the maximum size of a wire document.
            </summary>
            <value>
            The maximum size of a wire document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxWireVersion">
            <summary>
            Gets the maximum wire version.
            </summary>
            <value>
            The maximum wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ReasonChanged">
            <summary>
            The reason the server description was last changed.
            </summary>
            <value>The reason the server description was last changed.</value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ReplicaSetConfig">
            <summary>
            Gets the replica set configuration.
            </summary>
            <value>
            The replica set configuration.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ServerId">
            <summary>
            Gets the server identifier.
            </summary>
            <value>
            The server identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.State">
            <summary>
            Gets the server state.
            </summary>
            <value>
            The server state.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.Tags">
            <summary>
            Gets the replica set tags.
            </summary>
            <value>
            The replica set tags (null if not a replica set or if the replica set has no tags).
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.Type">
            <summary>
            Gets the server type.
            </summary>
            <value>
            The server type.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.TopologyVersion">
            <summary>
            Gets the topology version.
            </summary>
            <value>
            The server topology version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.Version">
            <summary>
            Gets the approximate server version (only the major and minor version numbers are known).
            </summary>
            <value>
            The server version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.WireVersionRange">
            <summary>
            Gets the wire version range.
            </summary>
            <value>
            The wire version range.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.Equals(MongoDB.Driver.Core.Servers.ServerDescription)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.SdamEquals(MongoDB.Driver.Core.Servers.ServerDescription)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.Core.Servers.ServerDescription" /> can be considered as equal to decide should we publish sdam events or not.
            </summary>
            <param name="other">The other server description.</param>
            <returns><c>true</c>, if sdam events should be suppressed, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.With(MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Net.EndPoint},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ElectionId},MongoDB.Driver.Optional{System.Exception},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Nullable{System.DateTime}},MongoDB.Driver.Optional{System.DateTime},MongoDB.Driver.Optional{System.Nullable{System.DateTime}},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ReplicaSetConfig},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerState},MongoDB.Driver.Optional{MongoDB.Driver.TagSet},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.TopologyVersion},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerType},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.SemanticVersion},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.Range{System.Int32}})">
            <summary>
            Returns a new instance of ServerDescription with some values changed.
            </summary>
            <param name="reasonChanged">The reason the server description changed.</param>
            <param name="averageRoundTripTime">The average round trip time.</param>
            <param name="canonicalEndPoint">The canonical end point.</param>
            <param name="electionId">The election identifier.</param>
            <param name="heartbeatException">The heartbeat exception.</param>
            <param name="heartbeatInterval">The heartbeat interval.</param>
            <param name="helloOk">Whether the server supports the hello command.</param>
            <param name="lastHeartbeatTimestamp">The last heartbeat timestamp.</param>
            <param name="lastUpdateTimestamp">The last update timestamp.</param>
            <param name="lastWriteTimestamp">The last write timestamp.</param>
            <param name="logicalSessionTimeout">The logical session timeout.</param>
            <param name="maxBatchCount">The maximum batch count.</param>
            <param name="maxDocumentSize">The maximum size of a document.</param>
            <param name="maxMessageSize">The maximum size of a message.</param>
            <param name="maxWireDocumentSize">The maximum size of a wire document.</param>
            <param name="replicaSetConfig">The replica set configuration.</param>
            <param name="state">The server state.</param>
            <param name="tags">The replica set tags.</param>
            <param name="topologyVersion">The topology version.</param>
            <param name="type">The server type.</param>
            <param name="version">The server version.</param>
            <param name="wireVersionRange">The wire version range.</param>
            <returns>
            A new instance of ServerDescription.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.WithHeartbeatException(System.Exception)">
            <summary>
            Returns a new ServerDescription with a new HeartbeatException.
            </summary>
            <param name="heartbeatException">The heartbeat exception.</param>
            <returns>
            A new instance of ServerDescription.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs">
            <summary>
            Represents the arguments to the event that occurs when the server description changes.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs.#ctor(MongoDB.Driver.Core.Servers.ServerDescription,MongoDB.Driver.Core.Servers.ServerDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs"/> class.
            </summary>
            <param name="oldServerDescription">The old server description.</param>
            <param name="newServerDescription">The new server description.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs.OldServerDescription">
            <summary>
            Gets the old server description.
            </summary>
            <value>
            The old server description.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs.NewServerDescription">
            <summary>
            Gets the new server description.
            </summary>
            <value>
            The new server description.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerFactory.CreateServer(MongoDB.Driver.Core.Clusters.ClusterType,MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core.Clusters.IClusterClock,System.Net.EndPoint)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerId">
            <summary>
            Represents a server identifier.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerId.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.Net.EndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.ServerId"/> class.
            </summary>
            <param name="clusterId">The cluster identifier.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerId.ClusterId">
            <summary>
            Gets the cluster identifier.
            </summary>
            <value>
            The cluster identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.ServerId.EndPoint">
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerId.Equals(MongoDB.Driver.Core.Servers.ServerId)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerMonitorFactory.Create(MongoDB.Driver.Core.Servers.ServerId,System.Net.EndPoint)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerMonitoringMode">
            <summary>
             Represents the server monitoring mode.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerMonitoringMode.Auto">
            <summary>
            Use polling protocol on FaaS platforms or streaming protocol otherwise. (Default)
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerMonitoringMode.Poll">
            <summary>
            Use polling protocol.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerMonitoringMode.Stream">
            <summary>
            Use streaming protocol.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerState">
            <summary>
            Represents the server state.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerState.Disconnected">
            <summary>
            The server is disconnected.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerState.Connected">
            <summary>
            The server is connected.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerType">
            <summary>
            Represents the server type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.Unknown">
            <summary>
            The server type is unknown.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.Standalone">
            <summary>
            The server is a standalone server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ShardRouter">
            <summary>
            The server is a shard router.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetPrimary">
            <summary>
            The server is a replica set primary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetSecondary">
            <summary>
            The server is a replica set secondary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetPassive">
            <summary>
            Use ReplicaSetSecondary instead.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetArbiter">
            <summary>
            The server is a replica set arbiter.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetOther">
            <summary>
            The server is a replica set member of some other type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetGhost">
            <summary>
            The server is a replica set ghost member.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.Servers.ServerType.LoadBalanced">
            <summary>
            The server is under load balancing.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.ServerTypeExtensions">
            <summary>
            Represents extension methods on ServerType.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerTypeExtensions.IsReplicaSetMember(MongoDB.Driver.Core.Servers.ServerType)">
            <summary>
            Determines whether this server type is a replica set member.
            </summary>
            <param name="serverType">The type of the server.</param>
            <returns>Whether this server type is a replica set member.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerTypeExtensions.IsWritable(MongoDB.Driver.Core.Servers.ServerType)">
            <summary>
            Determines whether this server type is a writable server.
            </summary>
            <param name="serverType">The type of the server.</param>
            <returns>Whether this server type is a writable server.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.ServerTypeExtensions.ToClusterType(MongoDB.Driver.Core.Servers.ServerType)">
            <summary>
            Infers the cluster type from the server type.
            </summary>
            <param name="serverType">The type of the server.</param>
            <returns>The cluster type.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.Servers.TopologyVersion">
            <summary>
            Represents a topology description.
            </summary>
            <remarks>
            Comparing topology descriptions freshness does not exhibit the reversal property of
            inequalities e.g. IsStalerThan(a, b) (a "&lt;" b) does not imply !IsStalerThan(b, a) (b "&gt;" a)
            See <seealso cref="M:MongoDB.Driver.Core.Servers.TopologyVersion.CompareTopologyVersion(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)"/> for more information.
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.CompareTopologyVersion(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)">
            <summary>
            Compares a local TopologyVersion with a server's TopologyVersion and indicates whether the local
            TopologyVersion is staler, fresher, or equal to the server's TopologyVersion.
            Per the SDAM specification, if the ProcessIds are not equal, this method assumes that
            <paramref name="y"/> is more recent. This means that this method does not exhibit
            the reversal properties of inequalities i.e. a "&lt;" b does not imply b "&gt;" a.
            </summary>
            <param name="x">The first TopologyVersion.</param>
            <param name="y">The other TopologyVersion.</param>
            <returns>
            Less than zero indicates that the <paramref name="x"/> is staler than the <paramref name="y"/>.
            Zero indicates that the <paramref name="x"/> description is equal to the <paramref name="y"/>.
            Greater than zero indicates that the <paramref name="x"/> is fresher than the <paramref name="y"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.FromBsonDocument(MongoDB.Bson.BsonDocument)">
            <summary>
            Attempts to create a TopologyVersion from the supplied BsonDocument.
            </summary>
            <param name="document">The document. Should contain an ObjectId named "processId" and a BsonInt64 named "counter".</param>
            <returns>A TopologyVersion if one could be constructed from the supplied document and null otherwise.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.IsFresherThan(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)">
            <summary>
            Gets whether or not <paramref name="x"/> is fresher than <paramref name="y"/>.
            Comparing topology descriptions freshness does not exhibit the reversal property of
            inequalities e.g. a.IsFresherThan(b) (a "&lt;" b) does not imply
            !b.IsFresherThan(a) (b "&gt;" a)
            See <seealso cref="M:MongoDB.Driver.Core.Servers.TopologyVersion.CompareTopologyVersion(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)"/> for more information.
            In the case that this.Equals(<paramref name="y"/>), <paramref name="y"/> will be considered to be fresher.
            </summary>
            <param name="x">The first TopologyVersion.</param>
            <param name="y">The other TopologyVersion.</param>
            <returns>
            Whether or not this TopologyVersion is fresher than <paramref name="y"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.IsFresherThanOrEqualTo(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)">
            <summary>
            Gets whether or not <paramref name="x"/> is fresher than or Equal to <paramref name="y"/>.
            Comparing topology descriptions freshness does not exhibit the reversal property of
            inequalities e.g. a.IsFresherThan(b) (a "&lt;" b) does not imply
            !b.IsFresherThan(a) (b "&gt;" a)
            See <seealso cref="M:MongoDB.Driver.Core.Servers.TopologyVersion.CompareTopologyVersion(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)"/> for more information.
            In the case that this.Equals(<paramref name="y"/>), <paramref name="y"/> will be considered to be fresher.
            </summary>
            <param name="x">The first TopologyVersion.</param>
            <param name="y">The other TopologyVersion.</param>
            <returns>
            Whether or not this TopologyVersion is fresher than <paramref name="y"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.IsStalerThan(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)">
            <summary>
            Gets whether or not <paramref name="x"/> is staler than or Equal to <paramref name="y"/>.
            Comparing topology descriptions freshness does not exhibit the reversal property of
            inequalities e.g. a.IsStalerThan(b) (a "&lt;" b) does not imply
            !b.IsStalerThan(a) (b "&gt;" a).
            See <seealso cref="M:MongoDB.Driver.Core.Servers.TopologyVersion.CompareTopologyVersion(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)"/> for more information.
            In the case that this == <paramref name="y"/>, <paramref name="y"/> will be considered to be fresher.
            </summary>
            <param name="x">The first TopologyVersion.</param>
            <param name="y">The other TopologyVersion.</param>
            <returns>
            Whether or not this TopologyVersion is staler than <paramref name="y"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.IsStalerThanOrEqualTo(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)">
            <summary>
            Gets whether or not <paramref name="x"/> is staler than or Equal to <paramref name="y"/>.
            Comparing topology descriptions freshness does not exhibit the reversal property of
            inequalities e.g. a.IsStalerThan(b) (a "&lt;" b) does not imply
            !b.IsStalerThan(a) (b "&gt;" a).
            See <seealso cref="M:MongoDB.Driver.Core.Servers.TopologyVersion.CompareTopologyVersion(MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core.Servers.TopologyVersion)"/> for more information.
            In the case that this == <paramref name="y"/>, <paramref name="y"/> will be considered to be fresher.
            </summary>
            <param name="x">The first TopologyVersion.</param>
            <param name="y">The other TopologyVersion.</param>
            <returns>
            Whether or not this TopologyVersion is staler than <paramref name="y"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.#ctor(MongoDB.Bson.ObjectId,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.TopologyVersion"/> class.
            </summary>
            <param name="processId">The process identifier.</param>
            <param name="counter">The counter.</param>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.TopologyVersion.Counter">
            <summary>
            Gets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Core.Servers.TopologyVersion.ProcessId">
            <summary>
            Gets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.Equals(MongoDB.Driver.Core.Servers.TopologyVersion)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.ToBsonDocument">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Core.Servers.TopologyVersion.ToString">
            <inheritdoc/>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling.Return">
            <summary>
            Return the response from the server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling.Ignore">
            <summary>
            Ignore the response from the server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling.NoResponseExpected">
            <summary>
            No response is expected from the server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling.ExhaustAllowed">
            <summary>
            Multiple responses might be returned from the server (the ExhaustAllowed flag will be set).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor">
            <summary>
            Interface for decrypting fields in a binary document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor.EncryptFields(System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Encrypts the fields.
            </summary>
            <param name="databaseName">The database name.</param>
            <param name="unencryptedCommandBytes">The unencrypted command bytes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An encrypted document.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor.EncryptFieldsAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Encrypts the fields asynchronously.
            </summary>
            <param name="databaseName">The database name.</param>
            <param name="unencryptedCommandBytes">The unencrypted command bytes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An encrypted document.</returns>
        </member>
        <member name="T:MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor">
            <summary>
            Interface for decrypting fields in a binary document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor.DecryptFields(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Decrypts the fields.
            </summary>
            <param name="encryptedDocumentBytes">The encrypted document bytes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An unencrypted document.</returns>
        </member>
        <member name="M:MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor.DecryptFieldsAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Decrypts the fields asynchronously.
            </summary>
            <param name="encryptedDocumentBytes">The encrypted document bytes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An unencrypted document.</returns>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Command">
            <summary>
            OP MSG
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Compressed">
            <summary>
            OP_COMPRESSED
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Query">
            <summary>
            OP_QUERY
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Reply">
            <summary>
            OP_REPLY
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CoreServerSession">
            <summary>
            A server session.
            </summary>
            <seealso cref="T:MongoDB.Driver.ICoreServerSession" />
        </member>
        <member name="P:MongoDB.Driver.CoreServerSession.Id">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.CoreServerSession.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.CoreServerSession.LastUsedAt">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.CoreServerSession.AdvanceTransactionNumber">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.CoreServerSession.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.CoreServerSession.MarkDirty">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.CoreServerSession.WasUsed">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ICoreServerSession">
            <summary>
            The interface for a core server session.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ICoreServerSession.Id">
            <summary>
            Gets the session Id.
            </summary>
            <value>
            The session Id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ICoreServerSession.IsDirty">
            <summary>
            Gets a value indicate whether this session is dirty.
            </summary>
            <value>
              <c>true</c> if the session is dirty.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ICoreServerSession.LastUsedAt">
            <summary>
            Gets the time this server session was last used (in UTC).
            </summary>
            <value>
            The time this server session was last used (in UTC).
            </value>
        </member>
        <member name="M:MongoDB.Driver.ICoreServerSession.AdvanceTransactionNumber">
            <summary>
            Gets the next transaction number.
            </summary>
            <returns>The transaction number.</returns>
        </member>
        <member name="M:MongoDB.Driver.ICoreServerSession.MarkDirty">
            <summary>
            Marks the session as dirty.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ICoreServerSession.WasUsed">
            <summary>
            Called by the driver when the session is used (i.e. sent to the server).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamDocument`1">
            <summary>
            An output document from a $changeStream pipeline stage.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamDocument`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamDocument`1"/> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <param name="documentSerializer">The document serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.BackingDocument">
            <summary>
            Gets the backing document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.ClusterTime">
            <summary>
            Gets the cluster time.
            </summary>
            <value>
            The cluster time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.CollectionNamespace">
            <summary>
            Gets the namespace of the collection.
            </summary>
            <value>
            The namespace of the collection.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.CollectionUuid">
            <summary>
            Gets ui field from the oplog entry corresponding to the change event.
            Only present when the showExpandedEvents change stream option is enabled and for the following event types (MongoDB 6.0 and later):
            <list type="bullet">
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Create"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.CreateIndexes"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Delete"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Drop"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.DropIndexes"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Insert"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Modify"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.RefineCollectionShardKey"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.ReshardCollection"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.ShardCollection"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Update"/></description></item>
            </list>
            </summary>
            <value>
            The UUID of the collection.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
            <value>
            The database namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.DisambiguatedPaths">
            <summary>
            Gets the disambiguated paths if present.
            </summary>
            <value>
            The disambiguated paths.
            </value>
            <remarks>
            <para>
            A document containing a map that associates an update path to an array containing the path components used in the update document. This data
            can be used in combination with the other fields in an <see cref="P:MongoDB.Driver.ChangeStreamDocument`1.UpdateDescription"/> to determine the
            actual path in the document that was updated. This is necessary in cases where a key contains dot-separated strings (i.e. <c>{ "a.b": "c" }</c>) or
            a document contains a numeric literal string key (i.e. <c>{ "a": { "0": "a" } }</c>). Note that in this scenario, the numeric key can't be the top
            level key because <c>{ "0": "a" }</c> is not ambiguous - update paths would simply be <c>'0'</c> which is unambiguous because BSON documents cannot have
            arrays at the top level. Each entry in the document maps an update path to an array which contains the actual path used when the document
            was updated. For example, given a document with the following shape <c>{ "a": { "0": 0 } }</c> and an update of <c>{ $inc: { "a.0": 1 } }</c>,
            <see cref="P:MongoDB.Driver.ChangeStreamDocument`1.DisambiguatedPaths"/> would look like the following:
            </para>
            <code>
              {
                 "a.0": ["a", "0"]
              }
            </code>
            <para>
            In each array, all elements will be returned as strings with the exception of array indices, which will be returned as 32-bit integers.
            </para>
            <para>
            Added in MongoDB version 6.1.0.
            </para>
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.DocumentKey">
            <summary>
            Gets the document key.
            </summary>
            <value>
            The document key.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.FullDocument">
            <summary>
            Gets the full document.
            </summary>
            <value>
            The full document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.FullDocumentBeforeChange">
            <summary>
            Gets the full document before change.
            </summary>
            <value>
            The full document before change.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.OperationDescription">
            <summary>
            Gets the description for the operation.
            Only present when the showExpandedEvents change stream option is enabled and for the following event types (MongoDB 6.0 and later):
            <list type="bullet">
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Create"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.CreateIndexes"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.DropIndexes"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Modify"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.RefineCollectionShardKey"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.Rename"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.ReshardCollection"/></description></item>
                <item><description><see cref="F:MongoDB.Driver.ChangeStreamOperationType.ShardCollection"/></description></item>
            </list>
            </summary>
            <value>
            The description of the operation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.OperationType">
            <summary>
            Gets the type of the operation.
            </summary>
            <value>
            The type of the operation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.RenameTo">
            <summary>
            Gets the new namespace for the ns collection. This field is omitted for all operation types except "rename".
            </summary>
            <value>
            The new namespace of the ns collection.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.ResumeToken">
            <summary>
            Gets the resume token.
            </summary>
            <value>
            The resume token.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.SplitEvent">
            <summary>
            Gets the split event.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.UpdateDescription">
            <summary>
            Gets the update description.
            </summary>
            <value>
            The update description.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamDocument`1.WallTime">
            <summary>
            Gets the wall time of the change stream event.
            </summary>
            <value>
            The wall time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamDocumentSerializer`1">
            <summary>
            A serializer for ChangeStreamDocument instances.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamDocumentSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamDocumentSerializer`1"/> class.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamDocumentSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamDocumentSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamDocumentSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamDocumentSerializer`1.CreateInstance(MongoDB.Bson.BsonDocument)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption">
            <summary>
            Change stream FullDocumentBeforeChange option.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption.Default">
            <summary>
            Do not send this option to the server.
            Server's default is to not return the full document before change.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption.Off">
            <summary>
            Do not return the full document before change.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption.WhenAvailable">
            <summary>
            Returns the pre-image of the modified document for replace, update and delete
            change events if the pre-image for this event is available.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption.Required">
            <summary>
            Same behavior as 'whenAvailable' except that
            an error is raised if the pre-image is not available.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamFullDocumentOption">
            <summary>
            Change stream FullDocument option.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentOption.Default">
            <summary>
            Do not send this option to the server.
            Server's default is to not return the full document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentOption.UpdateLookup">
            <summary>
            The change stream for partial updates will include both a delta describing the
            changes to the document as well as a copy of the entire document that was
            changed from some time after the change occurred.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentOption.WhenAvailable">
            <summary>
            Returns the post-image of the modified document for replace and update change events
            if the post-image for this event is available.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamFullDocumentOption.Required">
            <summary>
            Same behavior as 'whenAvailable' except that
            an error is raised if the post-image is not available.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamOperationType">
            <summary>
            The operation type of a change stream result.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Insert">
            <summary>
            An insert operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Update">
            <summary>
            An update operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Replace">
            <summary>
            A replace operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Delete">
            <summary>
            A delete operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Invalidate">
            <summary>
            An invalidate operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Rename">
            <summary>
            A rename operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Drop">
            <summary>
            A drop operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.DropDatabase">
            <summary>
            A dropDatabase operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.CreateIndexes">
            <summary>
            A createIndexes operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.DropIndexes">
            <summary>
            A dropIndexes operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Modify">
            <summary>
            A modify operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.Create">
            <summary>
            A create operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.ShardCollection">
            <summary>
            A shardCollection operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.RefineCollectionShardKey">
            <summary>
            A refineCollectionShardKey operation type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ChangeStreamOperationType.ReshardCollection">
            <summary>
            A reshardCollection operation type.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamOperationTypeSerializer">
            <summary>
            A serializer for ChangeStreamOperationType values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOperationTypeSerializer.Instance">
            <summary>
            Gets a ChangeStreamOperationTypeSerializer.
            </summary>
            <value>
            A ChangeStreamOperationTypeSerializer.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamOperationTypeSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamOperationTypeSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.ChangeStreamOperationType)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamSplitEvent">
            <summary>
            Change stream splitEvent data.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamSplitEvent.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamSplitEvent" /> class.
            </summary>
            <param name="fragment">Fragment index.</param>
            <param name="of">Total number of fragments.</param>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamSplitEvent.Fragment">
            <summary>
            Gets the fragment index, starting at 1.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamSplitEvent.Of">
            <summary>
            Total number of fragments for the event.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamUpdateDescription">
            <summary>
            An UpdateDescription in a ChangeStreamDocument instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamUpdateDescription.#ctor(MongoDB.Bson.BsonDocument,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamUpdateDescription" /> class.
            </summary>
            <param name="updatedFields">The updated fields.</param>
            <param name="removedFields">The removed fields.</param>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamUpdateDescription.#ctor(MongoDB.Bson.BsonDocument,System.String[],MongoDB.Bson.BsonArray)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ChangeStreamUpdateDescription" /> class.
            </summary>
            <param name="updatedFields">The updated fields.</param>
            <param name="removedFields">The removed fields.</param>
            <param name="truncatedArrays">The truncated arrays.</param>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamUpdateDescription.RemovedFields">
            <summary>
            Gets the removed fields.
            </summary>
            <value>
            The removed fields.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamUpdateDescription.TruncatedArrays">
            <summary>
            Gets the truncated arrays.
            </summary>
            <value>
            The truncated arrays.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamUpdateDescription.UpdatedFields">
            <summary>
            Gets the updated fields.
            </summary>
            <value>
            The updated fields.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamUpdateDescription.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamUpdateDescription.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer">
            <summary>
            A serialize for ChangeStreamUpdateDescription values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer.Instance">
            <summary>
            Gets a ChangeStreamUpdateDescriptionSerializer.
            </summary>
            <value>
            A ChangeStreamUpdateDescriptionSerializer.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.ChangeStreamUpdateDescription)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.CollationAlternate">
            <summary>
            Controls whether spaces and punctuation are considered base characters.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationAlternate.NonIgnorable">
            <summary>
            Spaces and punctuation are considered base characters (the default).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationAlternate.Shifted">
            <summary>
            Spaces and characters are not considered base characters, and are only distinguised at strength > 3.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollationCaseFirst">
            <summary>
            Uppercase or lowercase first.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationCaseFirst.Off">
            <summary>
            Off (the default).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationCaseFirst.Upper">
            <summary>
            Uppercase first.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationCaseFirst.Lower">
            <summary>
            Lowercase first.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollationMaxVariable">
            <summary>
            Controls which characters are affected by alternate: "Shifted".
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationMaxVariable.Punctuation">
            <summary>
            Punctuation and spaces are affected (the default).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationMaxVariable.Space">
            <summary>
            Only spaces.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollationStrength">
            <summary>
            Prioritizes the comparison properties.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationStrength.Primary">
            <summary>
            Primary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationStrength.Secondary">
            <summary>
            Secondary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationStrength.Tertiary">
            <summary>
            Tertiary (the default).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationStrength.Quaternary">
            <summary>
            Quaternary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollationStrength.Identical">
            <summary>
            Identical.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Collation">
            <summary>
            Represents a MongoDB collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.Simple">
            <summary>
            Gets the simple binary compare collation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Collation.FromBsonDocument(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a Collation instance from a BsonDocument.
            </summary>
            <param name="document">The document.</param>
            <returns>A Collation instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Collation.#ctor(System.String,MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationCaseFirst}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationStrength}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationAlternate}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationMaxVariable}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Collation" /> class.
            </summary>
            <param name="locale">The locale.</param>
            <param name="caseLevel">The case level.</param>
            <param name="caseFirst">The case that is ordered first.</param>
            <param name="strength">The strength.</param>
            <param name="numericOrdering">Whether numbers are ordered numerically.</param>
            <param name="alternate">The alternate.</param>
            <param name="maxVariable">The maximum variable.</param>
            <param name="normalization">The normalization.</param>
            <param name="backwards">Whether secondary differences are to be considered in reverse order.</param>
        </member>
        <member name="P:MongoDB.Driver.Collation.Alternate">
            <summary>
            Gets whether spaces and punctuation are considered base characters.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.Backwards">
            <summary>
            Gets whether secondary differencs are to be considered in reverse order.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.CaseFirst">
            <summary>
            Gets whether upper case or lower case is ordered first.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.CaseLevel">
            <summary>
            Gets whether the collation is case sensitive at strength 1 and 2.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.Locale">
            <summary>
            Gets the locale.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.MaxVariable">
            <summary>
            Gets which characters are affected by the alternate: "Shifted".
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.Normalization">
            <summary>
            Gets the normalization.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.NumericOrdering">
            <summary>
            Gets whether numbers are ordered numerically.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Collation.Strength">
            <summary>
            Gets the strength.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Collation.Equals(MongoDB.Driver.Collation)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Collation.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Collation.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Collation.ToBsonDocument">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Collation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Collation.With(MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationCaseFirst}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationStrength}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationAlternate}},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.CollationMaxVariable}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Creates a new Collation instance with some properties changed.
            </summary>
            <param name="locale">The new locale.</param>
            <param name="caseLevel">The new case level.</param>
            <param name="caseFirst">The new case first.</param>
            <param name="strength">The new strength.</param>
            <param name="numericOrdering">The new numeric ordering.</param>
            <param name="alternate">The new alternate.</param>
            <param name="maxVariable">The new maximum variable.</param>
            <param name="normalization">The new normalization.</param>
            <param name="backwards">The new backwards.</param>
            <returns>A new Collation instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.CollectionNamespace">
            <summary>
            Represents a collection namespace.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.FromFullName(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MongoDB.Driver.CollectionNamespace"/> class from a collection full name.
            </summary>
            <param name="fullName">The collection full name.</param>
            <returns>A CollectionNamespace.</returns>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.IsValid(System.String)">
            <summary>
            Determines whether the specified collection name is valid.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <returns>Whether the specified collection name is valid.</returns>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CollectionNamespace"/> class.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.#ctor(MongoDB.Driver.DatabaseNamespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CollectionNamespace"/> class.
            </summary>
            <param name="databaseNamespace">The database namespace.</param>
            <param name="collectionName">The name of the collection.</param>
        </member>
        <member name="P:MongoDB.Driver.CollectionNamespace.CollectionName">
            <summary>
            Gets the name of the collection.
            </summary>
            <value>
            The name of the collection.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CollectionNamespace.DatabaseNamespace">
            <summary>
            Gets the database namespace.
            </summary>
            <value>
            The database namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CollectionNamespace.FullName">
            <summary>
            Gets the collection full name.
            </summary>
            <value>
            The collection full name.
            </value>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.Equals(MongoDB.Driver.CollectionNamespace)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.CollectionNamespace.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexCommitQuorum">
            <summary>
            Represents a create index commit quorum.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexCommitQuorum.Majority">
            <summary>
            Gets a create index commit quorum of majority.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexCommitQuorum.VotingMembers">
            <summary>
            Gets a create index commit quorum of voting members.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorum.Create(System.String)">
            <summary>
            Creates a create index commit quorum with a mode value.
            </summary>
            <param name="mode">The mode value.</param>
            <returns>A create index commit quorum.</returns>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorum.Create(System.Int32)">
            <summary>
            Creates a create index commit quorum with a w value.
            </summary>
            <param name="w">The w value.</param>
            <returns>A create index commit quorum.</returns>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorum.ToBsonValue">
            <summary>
            Converts the create index commit quorum to a BsonValue.
            </summary>
            <returns>A BsonValue.</returns>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexCommitQuorumWithMode">
            <summary>
            Represents a CreateIndexCommitQuorum with a mode value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorumWithMode.#ctor(System.String)">
            <summary>
            Initializes an instance of CreateIndexCommitQuorumWithMode.
            </summary>
            <param name="mode">The mode value.</param>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexCommitQuorumWithMode.Mode">
            <summary>
            The mode value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorumWithMode.ToBsonValue">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexCommitQuorumWithW">
            <summary>
            Represents a CreateIndexCommitQuorum with a w value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorumWithW.#ctor(System.Int32)">
            <summary>
            Initializes an instance of CreateIndexCommitQuorumWithW.
            </summary>
            <param name="w">The w value.</param>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexCommitQuorumWithW.W">
            <summary>
            The w value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexCommitQuorumWithW.ToBsonValue">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DatabaseNamespace">
            <summary>
            Represents a database namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseNamespace.Admin">
            <summary>
            Gets the admin database namespace.
            </summary>
            <value>
            The admin database namespace.
            </value>
        </member>
        <member name="M:MongoDB.Driver.DatabaseNamespace.IsValid(System.String)">
            <summary>
            Determines whether the specified database name is valid.
            </summary>
            <param name="name">The database name.</param>
            <returns>True if the database name is valid.</returns>
        </member>
        <member name="M:MongoDB.Driver.DatabaseNamespace.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DatabaseNamespace"/> class.
            </summary>
            <param name="databaseName">The name of the database.</param>
        </member>
        <member name="P:MongoDB.Driver.DatabaseNamespace.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <value>
            The name of the database.
            </value>
        </member>
        <member name="M:MongoDB.Driver.DatabaseNamespace.Equals(MongoDB.Driver.DatabaseNamespace)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.DatabaseNamespace.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.DatabaseNamespace.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.DatabaseNamespace.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DeferredAsyncCursor`1">
            <summary>
            Represents a cursor for an operation that is not actually executed until MoveNextAsync is called for the first time.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.#ctor(System.Action,System.Func{System.Threading.CancellationToken,MongoDB.Driver.IAsyncCursor{`0}},System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{MongoDB.Driver.IAsyncCursor{`0}}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeferredAsyncCursor`1" /> class.
            </summary>
            <param name="disposeAction">The dispose action.</param>
            <param name="execute">The delegate to execute the first time MoveNext is called.</param>
            <param name="executeAsync">The delegate to execute the first time MoveNextAsync is called.</param>
        </member>
        <member name="P:MongoDB.Driver.DeferredAsyncCursor`1.Current">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.MoveNext(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.MoveNextAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DocumentValidationAction">
            <summary>
            Represents the document validation action.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DocumentValidationAction.Error">
            <summary>
            Validation failures result in an error.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DocumentValidationAction.Warn">
            <summary>
            Validation failures result in a warning.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DocumentValidationLevel">
            <summary>
            Represents the document validation level.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DocumentValidationLevel.Strict">
            <summary>
            Strict document validation.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DocumentValidationLevel.Moderate">
            <summary>
            Moderate document validation.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DocumentValidationLevel.Off">
            <summary>
            No document validation.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IAsyncCursor`1">
            <summary>
            Represents an asynchronous cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IAsyncCursor`1.Current">
            <summary>
            Gets the current batch of documents.
            </summary>
            <value>
            The current batch of documents.
            </value>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursor`1.MoveNext(System.Threading.CancellationToken)">
            <summary>
            Moves to the next batch of documents.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Whether any more documents are available.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursor`1.MoveNextAsync(System.Threading.CancellationToken)">
            <summary>
            Moves to the next batch of documents.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result indicates whether any more documents are available.</returns>
        </member>
        <member name="T:MongoDB.Driver.IChangeStreamCursor`1">
            <summary>
            Represents an asynchronous cursor for change stream.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IChangeStreamCursor`1.GetResumeToken">
            <summary>
            Gets the resume token.
            </summary>
            <returns>
            The resume token.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.ICursorBatchInfo.PostBatchResumeToken">
            <summary>
            Gets the post batch resume token.
            </summary>
            <value>
            The post batch resume token.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ICursorBatchInfo.WasFirstBatchEmpty">
            <summary>
            Gets a value indicating whether the first batch was empty or not.
            </summary>
            <value>
              <c>true</c> if the first batch was empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Driver.IAsyncCursorExtensions">
            <summary>
            Represents extension methods for IAsyncCursor.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.Any``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether the cursor contains any documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>True if the cursor contains any documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.AnyAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether the cursor contains any documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is true if the cursor contains any documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.First``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The first document.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.FirstAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first document.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.FirstOrDefault``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor, or a default value if the cursor contains no documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The first document of the cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.FirstOrDefaultAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the cursor, or a default value if the cursor contains no documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task whose result is the first document of the cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Func{``0,System.Int32,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <remarks>
            If your delegate is going to take a long time to execute or is going to block
            consider using a different overload of ForEachAsync that uses a delegate that
            returns a Task instead.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Action{``0,System.Int32},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <remarks>
            If your delegate is going to take a long time to execute or is going to block
            consider using a different overload of ForEachAsync that uses a delegate that
            returns a Task instead.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.Single``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The only document of a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.SingleAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the only document of a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.SingleOrDefault``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The only document of a cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.SingleOrDefaultAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the only document of a cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ToEnumerable``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Wraps a cursor in an IEnumerable that can be enumerated one time.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="cursor">The cursor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An IEnumerable</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ToList``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a list containing all the documents returned by a cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ToListAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a list containing all the documents returned by a cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose value is the list of documents.</returns>
        </member>
        <member name="T:MongoDB.Driver.IAsyncCursorSource`1">
            <summary>
            Represents an operation that will return a cursor when executed.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSource`1.ToCursor(System.Threading.CancellationToken)">
            <summary>
            Executes the operation and returns a cursor to the results.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSource`1.ToCursorAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the operation and returns a cursor to the results.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="T:MongoDB.Driver.IAsyncCursorSourceExtensions">
            <summary>
            Represents extension methods for IAsyncCursorSource.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.Any``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether the cursor returned by a cursor source contains any documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>True if the cursor contains any documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.AnyAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether the cursor returned by a cursor source contains any documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is true if the cursor contains any documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.First``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor returned by a cursor source.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The first document.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.FirstAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor returned by a cursor source.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first document.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.FirstOrDefault``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The first document of the cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.FirstOrDefaultAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first document of the cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Func{``0,System.Int32,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <remarks>
            If your delegate is going to take a long time to execute or is going to block
            consider using a different overload of ForEachAsync that uses a delegate that
            returns a Task instead.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Action{``0,System.Int32},System.Threading.CancellationToken)">
            <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
            <remarks>
            If your delegate is going to take a long time to execute or is going to block
            consider using a different overload of ForEachAsync that uses a delegate that
            returns a Task instead.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="processor">The processor.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that completes when all the documents have been processed.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.Single``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor returned by a cursor source. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The only document of a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.SingleAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor returned by a cursor source. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the only document of a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.SingleOrDefault``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The only document of a cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.SingleOrDefaultAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the only document of a cursor, or a default value if the cursor contains no documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ToEnumerable``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Wraps a cursor source in an IEnumerable. Each time GetEnumerator is called a new cursor is fetched from the cursor source.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An IEnumerable.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ToList``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a list containing all the documents returned by the cursor returned by a cursor source.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a list containing all the documents returned by the cursor returned by a cursor source.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="source">The source.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose value is the list of documents.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoAuthenticationException">
            <summary>
            Represents a MongoDB authentication exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoAuthenticationException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoAuthenticationException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoAuthenticationException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoAuthenticationException.IsNetworkException">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoClientException">
            <summary>
            Represents a MongoDB client exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoClientException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoClientException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoClientException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoCommandException">
            <summary>
            Represents a MongoDB command exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The message.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The message.</param>
            <param name="command">The command.</param>
            <param name="result">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,System.Exception)">
             <summary>
             Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException"/> class.
             </summary>
             <param name="connectionId">The connection identifier.</param>
             <param name="message">The message.</param>
             <param name="command">The command.</param>
             <param name="result">The command result.</param>
             <param name="innerException">The inner exception.</param>
            
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoCommandException.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoCommandException.CodeName">
            <summary>
            Gets the name of the error code.
            </summary>
            <value>
            The name of the error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoCommandException.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoCommandException.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoCommandException.Result">
            <summary>
            Gets the command result.
            </summary>
            <value>
            The command result.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoConfigurationException">
            <summary>
            Represents a MongoDB configuration exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConfigurationException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConfigurationException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConfigurationException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoConnectionClosedException">
            <summary>
            Represents a MongoDB connection failed exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionClosedException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionClosedException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionClosedException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionClosedException.IsNetworkException">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoConnectionException">
            <summary>
            Represents a MongoDB connection exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionException.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionException.ContainsSocketTimeoutException">
            <summary>
            Whether or not this exception contains a socket timeout exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionException.ContainsTimeoutException">
            <summary>
            Whether or not this exception contains a timeout exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionException.IsNetworkException">
            <summary>
            Determines whether the exception is network error or no.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionException.ServiceId">
            <summary>
            A value for propagating a serviceId to the SDAM logic after handshake completed but before acquiring connection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoConnectionPoolPausedException">
            <summary>
            Represents a MongoDB connection pool paused exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionPoolPausedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionPoolPausedException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionPoolPausedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionPoolPausedException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoCursorNotFoundException">
            <summary>
            Represents a MongoDB cursor not found exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorNotFoundException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int64,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCursorNotFoundException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="cursorId">The cursor identifier.</param>
            <param name="query">The query.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCursorNotFoundException"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoCursorNotFoundException.CursorId">
            <summary>
            Gets the cursor identifier.
            </summary>
            <value>
            The cursor identifier.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoDuplicateKeyException">
            <summary>
            Represents a MongoDB duplicate key exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDuplicateKeyException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Driver.WriteConcernResult)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDuplicateKeyException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="commandResult">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDuplicateKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDuplicateKeyException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoException">
            <summary>
            Represents a MongoDB exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoException.ErrorLabels">
            <summary>
            Gets the error labels.
            </summary>
            <value>
            The error labels.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoException.AddErrorLabel(System.String)">
            <summary>
            Adds an error label.
            </summary>
            <param name="errorLabel">The error label.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoException.HasErrorLabel(System.String)">
            <summary>
            Determines whether the exception has some error label.
            </summary>
            <param name="errorLabel">The error label.</param>
            <returns>
              <c>true</c> if the exception has some error label; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoException.RemoveErrorLabel(System.String)">
            <summary>
            Removes the error label.
            </summary>
            <param name="errorLabel">The error label.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoExecutionTimeoutException">
            <summary>
            Represents a MongoDB execution timeout exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="result">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="result">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoExecutionTimeoutException.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoExecutionTimeoutException.CodeName">
            <summary>
            Gets the name of the error code.
            </summary>
            <value>
            The name of the error code.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoIncompatibleDriverException">
            <summary>
            Represents a MongoDB incompatible driver exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIncompatibleDriverException.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIncompatibleDriverException"/> class.
            </summary>
            <param name="clusterDescription">The cluster description.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoIncompatibleDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIncompatibleDriverException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoInternalException">
            <summary>
            Represents a MongoDB internal exception (almost surely the result of a bug).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoNodeIsRecoveringException">
            <summary>
            Represents a MongoDB node is recovering exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoNodeIsRecoveringException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNodeIsRecoveringException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="command">The command.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoNodeIsRecoveringException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNodeIsRecoveringException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoNodeIsRecoveringException.IsShutdownError">
            <summary>
            Gets whether it caused by shutdown or no.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoNotPrimaryException">
            <summary>
            Represents a MongoDB not primary exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoNotPrimaryException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNotPrimaryException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="command">The command.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoNotPrimaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNotPrimaryException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoQueryException">
            <summary>
            Represents a MongoDB query exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoQueryException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The message.</param>
            <param name="query">The query.</param>
            <param name="queryResult">The query result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoQueryException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoQueryException.Query">
            <summary>
            Gets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoQueryException.QueryResult">
            <summary>
            Gets the query result.
            </summary>
            <value>
            The query result.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoServerException">
            <summary>
            Represents a MongoDB server exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerException.AddErrorLabelsFromCommandResult(MongoDB.Driver.MongoServerException,MongoDB.Bson.BsonDocument)">
            <summary>
            Adds error labels from a command result document into the top-level label list.
            </summary>
            <param name="exception">The exception.</param>
            <param name="result">The result document.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoServerException.ConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoWaitQueueFullException">
            <summary>
            Represents a MongoDB connection pool wait queue full exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoWaitQueueFullException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWaitQueueFullException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoWaitQueueFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWaitQueueFullException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoWriteConcernException">
            <summary>
            Represents a MongoDB write concern exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteConcernException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Driver.WriteConcernResult)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteConcernException"/> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="message">The error message.</param>
            <param name="writeConcernResult">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteConcernException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteConcernException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoWriteConcernException.MappedWriteConcernResultException">
            <summary>
            Gets the mapped write concern result exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoWriteConcernException.WriteConcernResult">
            <summary>
            Gets the write concern result.
            </summary>
            <value>
            The write concern result.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteConcernException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteConcernException.IsWriteConcernErrorOnly">
            <summary>
            Determines whether the exception is due to a write concern error only.
            </summary>
            <returns>
              <c>true</c> if the exception is due to a write concern error only; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Optional">
            <summary>
            Represents helper methods for use with the <see cref="T:MongoDB.Driver.Optional`1"/> struct.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Optional.Create``1(``0)">
            <summary>
            Creates an instance of an optional parameter with a value.
            </summary>
            <remarks>
            This helper method can be used when the implicit conversion doesn't work (due to compiler limitations).
            </remarks>
            <typeparam name="T">The type of the optional parameter.</typeparam>
            <param name="value">The value.</param>
            <returns>An instance of an optional parameter with a value.</returns>
        </member>
        <member name="M:MongoDB.Driver.Optional.Enumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an instance of an optional parameter with an enumerable value.
            </summary>
            <typeparam name="TItem">The type of the items of the optional paramater.</typeparam>
            <param name="value">The value.</param>
            <returns>An instance of an optional parameter with an enumerable value.</returns>
        </member>
        <member name="T:MongoDB.Driver.Optional`1">
            <summary>
            Represents an optional parameter that might or might not have a value.
            </summary>
            <typeparam name="T">The type of the parameter.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Optional`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Optional`1"/> struct with a value.
            </summary>
            <param name="value">The value of the parameter.</param>
        </member>
        <member name="P:MongoDB.Driver.Optional`1.HasValue">
            <summary>
            Gets a value indicating whether the optional parameter has a value.
            </summary>
            <value>
              <c>true</c> if the optional parameter has a value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Optional`1.Value">
            <summary>
            Gets the value of the optional parameter.
            </summary>
            <value>
            The value of the optional parameter.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Optional`1.op_Implicit(`0)~MongoDB.Driver.Optional{`0}">
            <summary>
            Performs an implicit conversion from <see typeparamref="T" /> to an <see cref="T:MongoDB.Driver.Optional`1" /> with a value.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Optional`1.Replaces(`0)">
            <summary>
            Returns a value indicating whether this optional parameter contains a value that is not equal to an existing value.
            </summary>
            <param name="value">The value.</param>
            <returns>True if this optional parameter contains a value that is not equal to an existing value.</returns>
        </member>
        <member name="M:MongoDB.Driver.Optional`1.WithDefault(`0)">
            <summary>
            Returns either the value of this optional parameter if it has a value, otherwise a default value.
            </summary>
            <param name="value">The default value.</param>
            <returns>Either the value of this optional parameter if it has a value, otherwise a default value.</returns>
        </member>
        <member name="T:MongoDB.Driver.ReadConcern">
            <summary>
            Represents a read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Available">
            <summary>
            Gets an available read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Default">
            <summary>
            Gets a default read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Linearizable">
            <summary>
            Gets a linearizable read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Local">
            <summary>
            Gets a local read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Majority">
            <summary>
            Gets a majority read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Snapshot">
            <summary>
            Gets a snapshot read concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.FromBsonDocument(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a read concern from a document.
            </summary>
            <param name="document">The document.</param>
            <returns>A read concern.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.#ctor(MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.ReadConcernLevel}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReadConcern" /> class.
            </summary>
            <param name="level">The level.</param>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.IsServerDefault">
            <summary>
            Gets a value indicating whether this is the server's default read concern.
            </summary>
            <value>
              <c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadConcern.Level">
            <summary>
            Gets the level.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.Equals(MongoDB.Driver.ReadConcern)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.ToBsonDocument">
            <summary>
            Converts this read concern to a BsonDocument suitable to be sent to the server.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ReadConcern.With(MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.ReadConcernLevel}})">
            <summary>
            Returns a new instance of ReadConcern with some values changed.
            </summary>
            <param name="level">The level.</param>
            <returns>
            A ReadConcern.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ReadConcernLevel">
            <summary>
            The level of the read concern.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadConcernLevel.Available">
            <summary>
            Reads available data.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadConcernLevel.Local">
            <summary>
            Reads data committed locally.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadConcernLevel.Majority">
            <summary>
            Reads data committed to a majority of nodes.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadConcernLevel.Linearizable">
            <summary>
            Avoids returning data from a "stale" primary 
            (one that has already been superseded by a new primary but doesn't know it yet). 
            It is important to note that readConcern level linearizable does not by itself 
            produce linearizable reads; they must be issued in conjunction with w:majority 
            writes to the same document(s) in order to be linearizable.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadConcernLevel.Snapshot">
            <summary>
            Snapshot read concern level.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReadPreference">
            <summary>
            Represents a read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Nearest">
            <summary>
            Gets an instance of ReadPreference that represents a Nearest read preference.
            </summary>
            <value>
            An instance of ReadPreference that represents a Nearest read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Primary">
            <summary>
            Gets an instance of ReadPreference that represents a Primary read preference.
            </summary>
            <value>
            An instance of ReadPreference that represents a Primary read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.PrimaryPreferred">
            <summary>
            Gets an instance of ReadPreference that represents a PrimaryPreferred read preference.
            </summary>
            <value>
            An instance of ReadPreference that represents a PrimaryPreferred read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Secondary">
            <summary>
            Gets an instance of ReadPreference that represents a Secondary read preference.
            </summary>
            <value>
            An instance of ReadPreference that represents a Secondary read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.SecondaryPreferred">
            <summary>
            Gets an instance of ReadPreference that represents a SecondaryPreferred read preference.
            </summary>
            <value>
            An instance of ReadPreference that represents a SecondaryPreferred read preference.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.FromBsonDocument(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a new ReadPreference instance from a BsonDocument.
            </summary>
            <param name="document">The document.</param>
            <returns>A ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.#ctor(MongoDB.Driver.ReadPreferenceMode,System.Collections.Generic.IEnumerable{MongoDB.Driver.TagSet},System.Nullable{System.TimeSpan},MongoDB.Driver.ReadPreferenceHedge)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReadPreference" /> class.
            </summary>
            <param name="mode">The read preference mode.</param>
            <param name="tagSets">The tag sets.</param>
            <param name="maxStaleness">The maximum staleness.</param>
            <param name="hedge">The hedge.</param>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Hedge">
            <summary>
            Gets the hedge.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.MaxStaleness">
            <summary>
            Gets the maximum staleness.
            </summary>
            <value>
            The maximum staleness.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.ReadPreferenceMode">
            <summary>
            Gets the read preference mode.
            </summary>
            <value>
            The read preference mode.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.TagSets">
            <summary>
            Gets the tag sets.
            </summary>
            <value>
            The tag sets.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Equals(MongoDB.Driver.ReadPreference)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.With(MongoDB.Driver.ReadPreferenceHedge)">
            <summary>
            Returns a new instance of ReadPreference with some values changed.
            </summary>
            <param name="hedge">The hedge.</param>
            <returns>A new instance of ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.With(MongoDB.Driver.ReadPreferenceMode)">
            <summary>
            Returns a new instance of ReadPreference with some values changed.
            </summary>
            <param name="mode">The read preference mode.</param>
            <returns>A new instance of ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.With(System.Collections.Generic.IEnumerable{MongoDB.Driver.TagSet})">
            <summary>
            Returns a new instance of ReadPreference with some values changed.
            </summary>
            <param name="tagSets">The tag sets.</param>
            <returns>A new instance of ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.With(System.Nullable{System.TimeSpan})">
            <summary>
            Returns a new instance of ReadPreference with some values changed.
            </summary>
            <param name="maxStaleness">The maximum staleness.</param>
            <returns>A new instance of ReadPreference.</returns>
        </member>
        <member name="T:MongoDB.Driver.ReadPreferenceHedge">
            <summary>
            Represents a read preference hedge.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreferenceHedge.Disabled">
            <summary>
            Gets a disabled read preference hedge.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreferenceHedge.Enabled">
            <summary>
            Gets an enabled read preference hedge.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReadPreferenceHedge.#ctor(System.Boolean)">
            <summary>
            Initializes an instance of ReadPreferenceHedge.
            </summary>
            <param name="isEnabled">Whether hedged reads are enabled.</param>
        </member>
        <member name="P:MongoDB.Driver.ReadPreferenceHedge.IsEnabled">
            <summary>
            Gets whether hedged reads are enabled.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReadPreferenceHedge.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreferenceHedge.Equals(MongoDB.Driver.ReadPreferenceHedge)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreferenceHedge.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReadPreferenceHedge.ToBsonDocument">
            <summary>
            Converts the read preference hedge to a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreferenceHedge.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReadPreferenceMode">
            <summary>
            Represents the read preference mode.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.Primary">
            <summary>
            Reads should be from the primary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.PrimaryPreferred">
            <summary>
            Reads should be from the primary if possible, otherwise from a secondary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.Secondary">
            <summary>
            Reads should be from a secondary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.SecondaryPreferred">
            <summary>
            Reads should be from a secondary if possible, otherwise from the primary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.Nearest">
            <summary>
            Reads should be from any server that is within the latency threshold window.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ServerApi">
            <summary>
            Represents a server API.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.#ctor(MongoDB.Driver.ServerApiVersion,MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ServerApi" /> class.
            </summary>
            <param name="version">The server API version.</param>
            <param name="strict">The flag for strict server API version enforcement.</param>
            <param name="deprecationErrors">The flag for treating deprecated server APIs as errors.</param>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.op_Inequality(MongoDB.Driver.ServerApi,MongoDB.Driver.ServerApi)">
            <summary>
            Returns true if the two values are not equal.
            </summary>
            <param name="lhs">The left hand side.</param>
            <param name="rhs">The right hand side</param>
            <returns>True if the two values are not equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.op_Equality(MongoDB.Driver.ServerApi,MongoDB.Driver.ServerApi)">
            <summary>
            Returns true if the two values are equal.
            </summary>
            <param name="lhs">The left hand side.</param>
            <param name="rhs">The right hand side</param>
            <returns>True if the two values are equal.</returns>
        </member>
        <member name="P:MongoDB.Driver.ServerApi.DeprecationErrors">
            <summary>
            Gets the deprecation errors flag.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ServerApi.Strict">
            <summary>
            Gets the strict flag.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ServerApi.Version">
            <summary>
            Gets the server API version.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.Equals(MongoDB.Driver.ServerApi)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ServerApi.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ServerApiVersion">
            <summary>
            Represents a server API version.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ServerApiVersion.V1">
            <summary>
            Gets an instance of server API version 1.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ServerApiVersion.op_Inequality(MongoDB.Driver.ServerApiVersion,MongoDB.Driver.ServerApiVersion)">
            <summary>
            Returns true if the two values are not equal.
            </summary>
            <param name="lhs">The left hand side.</param>
            <param name="rhs">The right hand side</param>
            <returns>True if the two values are not equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.ServerApiVersion.op_Equality(MongoDB.Driver.ServerApiVersion,MongoDB.Driver.ServerApiVersion)">
            <summary>
            Returns true if the two values are equal.
            </summary>
            <param name="lhs">The left hand side.</param>
            <param name="rhs">The right hand side</param>
            <returns>True if the two values are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.ServerApiVersion.Equals(MongoDB.Driver.ServerApiVersion)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ServerApiVersion.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ServerApiVersion.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ServerApiVersion.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ServerErrorCategory">
            <summary>
            Represents the category for an error from the server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerErrorCategory.Uncategorized">
            <summary>
            An error without a category.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerErrorCategory.DuplicateKey">
            <summary>
            A duplicate key error.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerErrorCategory.ExecutionTimeout">
            <summary>
            An execution timeout error.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Tag">
            <summary>
            Represents a replica set member tag.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Tag.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Tag"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Driver.Tag.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Tag.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Tag.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Tag.Equals(MongoDB.Driver.Tag)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Tag.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Tag.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.TagSet">
            <summary>
            Represents a replica set member tag set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.TagSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.TagSet"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.TagSet.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.Tag})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.TagSet"/> class.
            </summary>
            <param name="tags">The tags.</param>
        </member>
        <member name="P:MongoDB.Driver.TagSet.IsEmpty">
            <summary>
            Gets a value indicating whether the tag set is empty.
            </summary>
            <value>
              <c>true</c> if the tag set is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.TagSet.Tags">
            <summary>
            Gets the tags.
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="M:MongoDB.Driver.TagSet.ContainsAll(MongoDB.Driver.TagSet)">
            <summary>
            Determines whether the tag set contains all of the required tags.
            </summary>
            <param name="required">The required tags.</param>
            <returns>True if the tag set contains all of the required tags.</returns>
        </member>
        <member name="M:MongoDB.Driver.TagSet.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.TagSet.Equals(MongoDB.Driver.TagSet)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.TagSet.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.TagSet.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.TimeSeriesGranularity">
            <summary>
            Specifies the granularity of time series collection bucketing.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.TimeSeriesGranularity.Seconds">
            <summary>
            Seconds.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.TimeSeriesGranularity.Minutes">
            <summary>
            Minutes.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.TimeSeriesGranularity.Hours">
            <summary>
            Hours.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.TimeSeriesOptions">
            <summary>
            Defines the time series options to use when creating a time series collection. See https://www.mongodb.com/docs/manual/reference/command/create/ for supported options
            and https://www.mongodb.com/docs/manual/core/timeseries-collections/ for more information on time series collections.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.TimeSeriesOptions.#ctor(System.String,MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.TimeSeriesGranularity}},MongoDB.Driver.Optional{System.Nullable{System.Int32}},MongoDB.Driver.Optional{System.Nullable{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.TimeSeriesOptions"/> class.
            </summary>
            <param name="timeField">The name of the top-level field to be used for time.</param>
            <param name="metaField">The name of the top-level field describing the series upon which related data will be grouped.</param>
            <param name="granularity">The <see cref="T:MongoDB.Driver.TimeSeriesGranularity"/> for the time series. Do not set if using bucketMaxSpanSeconds</param>
            <param name="bucketMaxSpanSeconds">The maximum time between timestamps in the same bucket.</param>
            <param name="bucketRoundingSeconds">The interval used to round down the first timestamp when opening a new bucket.</param>
        </member>
        <member name="P:MongoDB.Driver.TimeSeriesOptions.Granularity">
            <summary>
            The coarse granularity of time series data.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TimeSeriesOptions.MetaField">
            <summary>
            The name of the field which contains metadata in each time series document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TimeSeriesOptions.TimeField">
            <summary>
            The name of the field which contains the date and time in each time series document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TimeSeriesOptions.BucketMaxSpanSeconds">
            <summary>
            The maximum time between timestamps in the same bucket.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TimeSeriesOptions.BucketRoundingSeconds">
            <summary>
            The interval used to round down the first timestamp when opening a new bucket.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.TimeSeriesOptions.ToBsonDocument">
            <summary>
            The BSON representation of the time series options.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.TransactionOptions">
            <summary>
            Transaction options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.TransactionOptions.#ctor(MongoDB.Driver.Optional{MongoDB.Driver.ReadConcern},MongoDB.Driver.Optional{MongoDB.Driver.ReadPreference},MongoDB.Driver.Optional{MongoDB.Driver.WriteConcern},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.TransactionOptions" /> class.
            </summary>
            <param name="readConcern">The read concern.</param>
            <param name="readPreference">The read preference.</param>
            <param name="writeConcern">The write concern.</param>
            <param name="maxCommitTime">The max commit time.</param>
        </member>
        <member name="P:MongoDB.Driver.TransactionOptions.MaxCommitTime">
            <summary>
            Gets the max commit time.
            </summary>
            <value>
            The max commit time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.TransactionOptions.ReadConcern">
            <summary>
            Gets the read concern.
            </summary>
            <value>
            The read concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.TransactionOptions.ReadPreference">
            <summary>
            Gets the read preference.
            </summary>
            <value>
            The read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.TransactionOptions.WriteConcern">
            <summary>
            Gets the write concern.
            </summary>
            <value>
            The write concern.
            </value>
        </member>
        <member name="M:MongoDB.Driver.TransactionOptions.With(MongoDB.Driver.Optional{MongoDB.Driver.ReadConcern},MongoDB.Driver.Optional{MongoDB.Driver.ReadPreference},MongoDB.Driver.Optional{MongoDB.Driver.WriteConcern},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}})">
            <summary>
            Returns a new TransactionOptions with some values changed.
            </summary>
            <param name="readConcern">The new read concern.</param>
            <param name="readPreference">The read preference.</param>
            <param name="writeConcern">The new write concern.</param>
            <param name="maxCommitTime">The max commit time.</param>
            <returns>
            The new TransactionOptions.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern">
            <summary>
            Represents a write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Acknowledged">
            <summary>
            Gets an instance of WriteConcern that represents an acknowledged write concern.
            </summary>
            <value>
            An instance of WriteConcern that represents an acknowledged write concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Unacknowledged">
            <summary>
            Gets an instance of WriteConcern that represents an unacknowledged write concern.
            </summary>
            <value>
            An instance of WriteConcern that represents an unacknowledged write concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W1">
            <summary>
            Gets an instance of WriteConcern that represents a W1 write concern.
            </summary>
            <value>
            An instance of WriteConcern that represents a W1 write concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W2">
            <summary>
            Gets an instance of WriteConcern that represents a W2 write concern.
            </summary>
            <value>
            An instance of WriteConcern that represents a W2 write concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W3">
            <summary>
            Gets an instance of WriteConcern that represents a W3 write concern.
            </summary>
            <value>
            An instance of WriteConcern that represents a W3 write concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WMajority">
            <summary>
            Gets an instance of WriteConcern that represents a majority write concern.
            </summary>
            <value>
            An instance of WriteConcern that represents a majority write concern.
            </value>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.FromBsonDocument(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a write concern from a document.
            </summary>
            <param name="document">The document.</param>
            <returns>A write concern.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.#ctor(System.Int32,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern"/> class.
            </summary>
            <param name="w">The w value.</param>
            <param name="wTimeout">The wtimeout value.</param>
            <param name="fsync">The fsync value .</param>
            <param name="journal">The journal value.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.#ctor(System.String,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern"/> class.
            </summary>
            <param name="mode">The mode.</param>
            <param name="wTimeout">The wtimeout value.</param>
            <param name="fsync">The fsync value .</param>
            <param name="journal">The journal value.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.#ctor(MongoDB.Driver.Optional{MongoDB.Driver.WriteConcern.WValue},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern"/> class.
            </summary>
            <param name="w">The w value.</param>
            <param name="wTimeout">The wtimeout value.</param>
            <param name="fsync">The fsync value .</param>
            <param name="journal">The journal value.</param>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.FSync">
            <summary>
            Gets the fsync value.
            </summary>
            <value>
            The fsync value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.IsAcknowledged">
            <summary>
            Gets a value indicating whether this instance is an acknowledged write concern.
            </summary>
            <value>
            <c>true</c> if this instance is an acknowledged write concern; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.IsServerDefault">
            <summary>
            Gets a value indicating whether this write concern will use the default on the server.
            </summary>
            <value>
            <c>true</c> if this instance is the default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Journal">
            <summary>
            Gets the journal value.
            </summary>
            <value>
            The journal value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W">
            <summary>
            Gets the w value.
            </summary>
            <value>
            The w value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WTimeout">
            <summary>
            Gets the wtimeout value.
            </summary>
            <value>
            The wtimeout value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Equals(MongoDB.Driver.WriteConcern)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.ToBsonDocument">
            <summary>
            Converts this write concern to a BsonDocument suitable to be sent to the server.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.With(System.Int32,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Returns a new instance of WriteConcern with some values changed.
            </summary>
            <param name="w">The w value.</param>
            <param name="wTimeout">The wtimeout value.</param>
            <param name="fsync">The fsync value.</param>
            <param name="journal">The journal value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.With(System.String,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Returns a new instance of WriteConcern with some values changed.
            </summary>
            <param name="mode">The mode.</param>
            <param name="wTimeout">The wtimeout value.</param>
            <param name="fsync">The fsync value.</param>
            <param name="journal">The journal value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.With(MongoDB.Driver.Optional{MongoDB.Driver.WriteConcern.WValue},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
            <summary>
            Returns a new instance of WriteConcern with some values changed.
            </summary>
            <param name="w">The w value.</param>
            <param name="wTimeout">The wtimeout value.</param>
            <param name="fsync">The fsync value.</param>
            <param name="journal">The journal value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Represents the base class for w values.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>A WValue.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.Int32)~MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:MongoDB.Driver.WriteConcern.WValue"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.Nullable{System.Int32})~MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Performs an implicit conversion from Nullable{Int32} to <see cref="T:MongoDB.Driver.WriteConcern.WValue"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.String)~MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.WriteConcern.WValue"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.Equals(MongoDB.Driver.WriteConcern.WValue)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.ToBsonValue">
            <summary>
            Converts this WValue to a BsonValue suitable to be included in a BsonDocument representing a write concern.
            </summary>
            <returns>A BsonValue.</returns>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern.WCount">
            <summary>
            Represents a numeric WValue.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern.WCount"/> class.
            </summary>
            <param name="w">The w value.</param>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WCount.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.Equals(MongoDB.Driver.WriteConcern.WCount)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.ToBsonValue">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern.WMode">
            <summary>
            Represents a mode string WValue.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WMode.Majority">
            <summary>
            Gets an instance of WValue that represents the majority mode.
            </summary>
            <value>
            An instance of WValue that represents the majority mode.
            </value>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern.WMode"/> class.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WMode.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.Equals(MongoDB.Driver.WriteConcern.WMode)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.ToBsonValue">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.WriteConcernResult">
            <summary>
            Represents the results of an operation performed with an acknowledged WriteConcern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcernResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcernResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernResult.DocumentsAffected">
            <summary>
            Gets the number of documents affected.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernResult.HasLastErrorMessage">
            <summary>
            Gets whether the result has a LastErrorMessage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernResult.LastErrorMessage">
            <summary>
            Gets the last error message (null if none).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernResult.Upserted">
            <summary>
            Gets the _id of an upsert that resulted in an insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernResult.UpdatedExisting">
            <summary>
            Gets whether the last command updated an existing document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernResult.Response">
            <summary>
            Gets the wrapped result.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CountOptions">
            <summary>
            Options for a count operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Skip">
            <summary>
            Gets or sets the skip.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateCollectionOptions">
            <summary>
            Options for creating a collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.Capped">
            <summary>
            Gets or sets a value indicating whether the collection is capped.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.ChangeStreamPreAndPostImagesOptions">
            <summary>
            Gets or sets  Gets or sets a change streams pre and post images options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.EncryptedFields">
            <summary>
            Gets or sets encrypted fields.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.ExpireAfter">
            <summary>
            Gets or sets a timespan indicating how long documents in a time series collection should be retained.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.IndexOptionDefaults">
            <summary>
            Gets or sets the index option defaults.
            </summary>
            <value>
            The index option defaults.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.MaxDocuments">
            <summary>
            Gets or sets the maximum number of documents (used with capped collections).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.MaxSize">
            <summary>
            Gets or sets the maximum size of the collection (used with capped collections).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.NoPadding">
            <summary>
            Gets or sets whether padding should not be used.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.SerializerRegistry">
            <summary>
            Gets or sets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.StorageEngine">
            <summary>
            Gets or sets the storage engine options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.TimeSeriesOptions">
            <summary>
            Gets or sets the <see cref="P:MongoDB.Driver.CreateCollectionOptions.TimeSeriesOptions"/> to use when creating a time series collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.UsePowerOf2Sizes">
            <summary>
            Gets or sets a value indicating whether to use power of 2 sizes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.ValidationAction">
            <summary>
            Gets or sets the validation action.
            </summary>
            <value>
            The validation action.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.ValidationLevel">
            <summary>
            Gets or sets the validation level.
            </summary>
            <value>
            The validation level.
            </value>
        </member>
        <member name="M:MongoDB.Driver.CreateCollectionOptions.Clone">
            <summary>
            Clones the CreateCollectionOptions.
            </summary>
            <returns>The cloned CreateCollectionOptions.</returns>
        </member>
        <member name="T:MongoDB.Driver.CreateCollectionOptions`1">
            <summary>
            Options for creating a collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.CreateCollectionOptions`1.CoercedFrom(MongoDB.Driver.CreateCollectionOptions)">
            <summary>
            Coerces a generic CreateCollectionOptions{TDocument} from a non-generic CreateCollectionOptions.
            </summary>
            <param name="options">The options.</param>
            <returns>The generic options.</returns>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions`1.ClusteredIndex">
            <summary>
            Gets or sets the <see cref="T:MongoDB.Driver.ClusteredIndexOptions`1"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions`1.DocumentSerializer">
            <summary>
            Gets or sets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions`1.Validator">
            <summary>
            Gets or sets the validator.
            </summary>
            <value>
            The validator.
            </value>
        </member>
        <member name="M:MongoDB.Driver.CreateCollectionOptions`1.Clone">
            <summary>
            Clones the CreateCollectionOptions.
            </summary>
            <returns>The cloned CreateCollectionOptions.</returns>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexModel`1">
            <summary>
            Model for creating an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexModel`1.#ctor(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CreateIndexModel`1"/> class.
            </summary>
            <param name="keys">The keys.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexModel`1.Keys">
            <summary>
            Gets the keys.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexModel`1.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexOptions">
            <summary>
            Options for creating an index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Background">
            <summary>
            Gets or sets a value indicating whether to create the index in the background.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Bits">
            <summary>
            Gets or sets the precision, in bits, used with geohash indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.BucketSize">
            <summary>
            Gets or sets the size of a geohash bucket.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.DefaultLanguage">
            <summary>
            Gets or sets the default language.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.ExpireAfter">
            <summary>
            Gets or sets when documents expire (used with TTL indexes).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Hidden">
            <summary>
            Gets or sets a value indicating whether the index is hidden.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.LanguageOverride">
            <summary>
            Gets or sets the language override.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Max">
            <summary>
            Gets or sets the max value for 2d indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Min">
            <summary>
            Gets or sets the min value for 2d indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Name">
            <summary>
            Gets or sets the index name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Sparse">
            <summary>
            Gets or sets a value indicating whether the index is a sparse index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.SphereIndexVersion">
            <summary>
            Gets or sets the index version for 2dsphere indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.StorageEngine">
            <summary>
            Gets or sets the storage engine options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.TextIndexVersion">
            <summary>
            Gets or sets the index version for text indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Unique">
            <summary>
            Gets or sets a value indicating whether the index is a unique index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Version">
            <summary>
            Gets or sets the version of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Weights">
            <summary>
            Gets or sets the weights for text indexes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexOptions`1">
            <summary>
            Options for creating an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions`1.PartialFilterExpression">
            <summary>
            Gets or sets the partial filter expression.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions`1.WildcardProjection">
            <summary>
            Gets or sets the wildcard projection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateManyIndexesOptions">
            <summary>
            Options for creating multiple indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateManyIndexesOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value> The comment.</value>
        </member>
        <member name="P:MongoDB.Driver.CreateManyIndexesOptions.CommitQuorum">
            <summary>
            Gets or sets the commit quorum.
            </summary>
            <value>The commit quorum.</value>
        </member>
        <member name="P:MongoDB.Driver.CreateManyIndexesOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:MongoDB.Driver.CreateOneIndexOptions">
            <summary>
            Options for creating a single index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateOneIndexOptions.CommitQuorum">
            <summary>
            Gets or sets the commit quorum.
            </summary>
            <value>The commit quorum.</value>
        </member>
        <member name="P:MongoDB.Driver.CreateOneIndexOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:MongoDB.Driver.CreateSearchIndexModel">
            <summary>
            Model for creating a search index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateSearchIndexModel.Name">
            <summary>Gets the index name.</summary>
            <value>The index name.</value>
        </member>
        <member name="P:MongoDB.Driver.CreateSearchIndexModel.Type">
            <summary>Gets the index type.</summary>
            <value>The index type.</value>
        </member>
        <member name="P:MongoDB.Driver.CreateSearchIndexModel.Definition">
            <summary>Gets the index definition.</summary>
            <value>The definition.</value>
        </member>
        <member name="M:MongoDB.Driver.CreateSearchIndexModel.#ctor(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CreateSearchIndexModel"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="definition">The definition.</param>
        </member>
        <member name="M:MongoDB.Driver.CreateSearchIndexModel.#ctor(System.String,System.Nullable{MongoDB.Driver.SearchIndexType},MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CreateSearchIndexModel"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="definition">The definition.</param>
        </member>
        <member name="T:MongoDB.Driver.CreateViewOptions`1">
            <summary>
            Options for creating a view.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.CreateViewOptions`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
            <value>
            The collation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateViewOptions`1.DocumentSerializer">
            <summary>
            Gets or sets the document serializer.
            </summary>
            <value>
            The document serializer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateViewOptions`1.SerializerRegistry">
            <summary>
            Gets or sets the serializer registry.
            </summary>
            <value>
            The serializer registry.
            </value>
        </member>
        <member name="T:MongoDB.Driver.CursorType">
            <summary>
            The cursor type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CursorType.NonTailable">
            <summary>
            A non-tailable cursor. This is sufficient for a vast majority of uses.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CursorType.Tailable">
            <summary>
            A tailable cursor.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CursorType.TailableAwait">
            <summary>
            A tailable cursor with a built-in server sleep.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteManyModel`1">
            <summary>
            Model for deleting many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DeleteManyModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteManyModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteOneModel`1">
            <summary>
            Model for deleting a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DeleteOneModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteOneModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteOptions">
            <summary>
            Options for the Delete methods.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOptions.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOptions.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteResult">
            <summary>
            The result of a delete operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.DeletedCount">
            <summary>
            Gets the deleted count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the result is acknowledged.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DeleteResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteResult"/> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteResult.Acknowledged">
            <summary>
            The result of an acknowledged delete operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DeleteResult.Acknowledged.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteResult.Acknowledged"/> class.
            </summary>
            <param name="deletedCount">The deleted count.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Acknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DeleteResult.Unacknowledged">
            <summary>
            The result of an unacknowledged delete operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyRange">
            <summary>
            Represents a range for the $densify stage.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyRange.DateTime(System.DateTime,System.DateTime,System.Int32,MongoDB.Driver.DensifyDateTimeUnit)">
            <summary>
            Creates a DensifyRange with DateTime bounds.
            </summary>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
            <param name="step">The step.</param>
            <param name="unit">The unit.</param>
            <returns>A DensifyRange with DateTime bounds.</returns>
        </member>
        <member name="M:MongoDB.Driver.DensifyRange.DateTime(MongoDB.Driver.DensifyBounds,System.Int32,MongoDB.Driver.DensifyDateTimeUnit)">
            <summary>
            Creates a DensifyRange with DateTime bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="step">The step.</param>
            <param name="unit">The unit.</param>
            <returns>A DensifyRange with DateTime bounds.</returns>
        </member>
        <member name="M:MongoDB.Driver.DensifyRange.Numeric``1(``0,``0,``0)">
            <summary>
            Creates a DensifyRange with numeric bounds.
            </summary>
            <typeparam name="TNumber">The numeric type.</typeparam>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
            <param name="step">The step.</param>
            <returns>A DensifyRange with numeric bounds.</returns>
        </member>
        <member name="M:MongoDB.Driver.DensifyRange.Numeric``1(MongoDB.Driver.DensifyBounds,``0)">
            <summary>
            Creates a DensifyRange with numeric bounds.
            </summary>
            <typeparam name="TNumber">The numeric type.</typeparam>
            <param name="bounds">The bounds.</param>
            <param name="step">The step.</param>
            <returns>A DensifyRange with numeric bounds.</returns>
        </member>
        <member name="M:MongoDB.Driver.DensifyRange.Render">
            <summary>
            Renders the range as a BsonDocument.
            </summary>
            <returns>The rendered range.</returns>
        </member>
        <member name="M:MongoDB.Driver.DensifyRange.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyBounds">
            <summary>
            Represents keyword densify bounds.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyBounds.Full">
            <summary>
            Gets a DensifyBounds representing the "full" bounds.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyBounds.Partition">
            <summary>
            Gets a DensifyBounds representing the "partition" bounds.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyBounds.Keyword">
            <summary>
            Gets the keyword.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DensifyNumericRange`1">
            <summary>
            Represents a numeric densify range.
            </summary>
            <typeparam name="TNumber">The numeric type.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DensifyNumericRange`1.#ctor(MongoDB.Driver.DensifyNumericBounds{`0},`0)">
            <summary>
            Initializes a new instance of DensifyNumericRange.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="step">The step.</param>
        </member>
        <member name="P:MongoDB.Driver.DensifyNumericRange`1.Bounds">
            <summary>
            Gets the bounds.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyNumericRange`1.Step">
            <summary>
            Gets the step.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyNumericRange`1.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyNumericBounds`1">
            <summary>
            Represents a numeric densify bounds.
            </summary>
            <typeparam name="TNumber">The numeric type.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DensifyNumericBounds`1.Render">
            <summary>
            Renders the bounds as a BsonValue.
            </summary>
            <returns>The rendered bounds.</returns>
        </member>
        <member name="T:MongoDB.Driver.DensifyKeywordNumericBounds`1">
            <summary>
            Represents a keyword numeric densify bounds.
            </summary>
            <typeparam name="TNumber">The numeric type.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.DensifyKeywordNumericBounds`1.Keyword">
            <summary>
            Gets the keyword.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyKeywordNumericBounds`1.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyLowerUpperNumericBounds`1">
            <summary>
            Represents a numeric densify bounds with lower and upper bounds.
            </summary>
            <typeparam name="TNumber">The numeric type.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DensifyLowerUpperNumericBounds`1.#ctor(`0,`0)">
            <summary>
            Initializes an instance of DensifyLowerUpperNumericBounds.
            </summary>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
        </member>
        <member name="P:MongoDB.Driver.DensifyLowerUpperNumericBounds`1.LowerBound">
            <summary>
            Gets the lower bound.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyLowerUpperNumericBounds`1.UpperBound">
            <summary>
            Gets the upper bound.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyLowerUpperNumericBounds`1.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyDateTimeRange">
            <summary>
            Represents a DateTime densify range.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyDateTimeRange.#ctor(MongoDB.Driver.DensifyDateTimeBounds,System.Int32,MongoDB.Driver.DensifyDateTimeUnit)">
            <summary>
            Initializes an instance of DensifyDateTimeRange.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="step">The step.</param>
            <param name="unit">The unit.</param>
        </member>
        <member name="P:MongoDB.Driver.DensifyDateTimeRange.Bounds">
            <summary>
            Gets the bounds.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyDateTimeRange.Step">
            <summary>
            Gets the step.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyDateTimeRange.Unit">
            <summary>
            Gets the unit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyDateTimeRange.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyDateTimeBounds">
            <summary>
            Represents a DateTime densify bounds.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyDateTimeBounds.Render">
            <summary>
            Renders the bounds as a BsonValue.
            </summary>
            <returns>The rendered bounds.</returns>
        </member>
        <member name="T:MongoDB.Driver.DensifyKeywordDateTimeBounds">
            <summary>
            Represents a keyword DateTime densify bounds.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyKeywordDateTimeBounds.#ctor(System.String)">
            <summary>
            Initializes an instance of DensifyKeywordDateTimeBounds.
            </summary>
            <param name="keyword">The keyword.</param>
        </member>
        <member name="P:MongoDB.Driver.DensifyKeywordDateTimeBounds.Keyword">
            <summary>
            Gets the keyword.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyKeywordDateTimeBounds.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyLowerUpperDateTimeBounds">
            <summary>
            Represents a DateTime densify bounds with lower and upper bounds.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyLowerUpperDateTimeBounds.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes an instance of DensifyLowerUpperDateTimeBounds.
            </summary>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
        </member>
        <member name="P:MongoDB.Driver.DensifyLowerUpperDateTimeBounds.LowerBound">
            <summary>
            Gets the lower bound.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DensifyLowerUpperDateTimeBounds.UpperBound">
            <summary>
            Gets the upper bound.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DensifyLowerUpperDateTimeBounds.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DensifyDateTimeUnit">
            <summary>
            Represents a densify DateTime unit.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Milliseconds">
            <summary>
            Milliseconds.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Seconds">
            <summary>
            Seconds.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Minutes">
            <summary>
            Minutes.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Hours">
            <summary>
            Hours.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Days">
            <summary>
            Days.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Weeks">
            <summary>
            Weeks.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Months">
            <summary>
            Months.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Quarters">
            <summary>
            Quarters.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.DensifyDateTimeUnit.Years">
            <summary>
            Years.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DistinctOptions">
            <summary>
            Options for the distinct command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DistinctOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DistinctOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DistinctOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DocumentsWindow">
            <summary>
            Represents a documents window for a SetWindowFields window method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DocumentsWindow.Current">
            <summary>
            Returns a "current" documents window boundary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DocumentsWindow.Unbounded">
            <summary>
            Returns an "unbounded" documents window boundary.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DocumentsWindow.Create(System.Int32,System.Int32)">
            <summary>
            Creates a documents window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A documents window.</returns>
        </member>
        <member name="M:MongoDB.Driver.DocumentsWindow.Create(System.Int32,MongoDB.Driver.KeywordDocumentsWindowBoundary)">
            <summary>
            Creates a documents window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A documents window.</returns>
        </member>
        <member name="M:MongoDB.Driver.DocumentsWindow.Create(MongoDB.Driver.KeywordDocumentsWindowBoundary,System.Int32)">
            <summary>
            Creates a documents window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A documents window.</returns>
        </member>
        <member name="M:MongoDB.Driver.DocumentsWindow.Create(MongoDB.Driver.KeywordDocumentsWindowBoundary,MongoDB.Driver.KeywordDocumentsWindowBoundary)">
            <summary>
            Creates a documents window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A documents window.</returns>
        </member>
        <member name="M:MongoDB.Driver.DocumentsWindow.#ctor(MongoDB.Driver.DocumentsWindowBoundary,MongoDB.Driver.DocumentsWindowBoundary)">
            <summary>
            Initializes an instance of DocumentsWindow.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
        </member>
        <member name="P:MongoDB.Driver.DocumentsWindow.LowerBoundary">
            <summary>
            The lower boundary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DocumentsWindow.UpperBoundary">
            <summary>
            The upper boundary.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DocumentsWindow.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DocumentsWindowBoundary">
            <summary>
            Represents a boundary for a documents window in SetWindowFields.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.KeywordDocumentsWindowBoundary">
            <summary>
            Represents a keyword boundary for a document window in SetWindowFields (i.e. "unbounded" or "current").
            </summary>
        </member>
        <member name="P:MongoDB.Driver.KeywordDocumentsWindowBoundary.Keyword">
            <summary>
            The keyword.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.KeywordDocumentsWindowBoundary.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.PositionDocumentsWindowBoundary">
            <summary>
            Represents a position boundary for a document window in SetWindowFields.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PositionDocumentsWindowBoundary.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of PositionDocumentsWindowBoundary.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="P:MongoDB.Driver.PositionDocumentsWindowBoundary.Position">
            <summary>
            The position.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PositionDocumentsWindowBoundary.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DropCollectionOptions">
            <summary>
            Options for dropping a collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DropCollectionOptions.EncryptedFields">
            <summary>
            Gets or sets encrypted fields.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DropIndexOptions">
            <summary>
            Options for dropping an index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DropIndexOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:MongoDB.Driver.DropIndexOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:MongoDB.Driver.Encryption.AutoEncryptionProviderRegistry">
            <summary>
            AutoEncryption Provider Registry.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Encryption.IAutoEncryptionLibMongoCryptController">
            <summary>
            Represents an AutoCryptClientController.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.IAutoEncryptionLibMongoCryptController.CryptSharedLibraryVersion">
            <summary>
            Gets the crypt shared library version.
            </summary>
            <returns>A crypt shared library version.</returns>
        </member>
        <member name="T:MongoDB.Driver.Encryption.IAutoEncryptionProviderRegistry">
            <summary>
            AutoEncryption Provider Registry.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.IAutoEncryptionProviderRegistry.Register(System.Func{MongoDB.Driver.IMongoClient,MongoDB.Driver.AutoEncryptionOptions,MongoDB.Driver.Encryption.IAutoEncryptionLibMongoCryptController})">
            <summary>
            Registers new AutoEncryption Provider.
            </summary>
            <param name="factory">Factory method.</param>
        </member>
        <member name="M:MongoDB.Driver.Encryption.IAutoEncryptionProviderRegistry.CreateAutoCryptClientController(MongoDB.Driver.IMongoClient,MongoDB.Driver.AutoEncryptionOptions)">
            <summary>
            Creates an IAutoCryptClientController.
            </summary>
            <param name="client">The client.</param>
            <param name="autoEncryptionOptions">The AutoEncryptionOptions.</param>
            <returns>The IAutoCryptClientController.</returns>
        </member>
        <member name="T:MongoDB.Driver.Encryption.IKmsProvider">
            <summary>
            Represents KMS Provider.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.IKmsProvider.GetKmsCredentialsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns KMS Credentials.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Encryption.IKmsProviderRegistry">
            <summary>
            Kms Provider Registry.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.IKmsProviderRegistry.Register(System.String,System.Func{MongoDB.Driver.Encryption.IKmsProvider})">
            <summary>
            Registers new Kms Provider.
            </summary>
            <param name="kmsProviderName">Kms Provider Name.</param>
            <param name="factory">Factory method.</param>
        </member>
        <member name="M:MongoDB.Driver.Encryption.IKmsProviderRegistry.TryCreate(System.String,MongoDB.Driver.Encryption.IKmsProvider@)">
            <summary>
            Creates KMS provider if possible.
            </summary>
            <param name="providerName">The requested provider name.</param>
            <param name="provider">When this method succeeds contains the created provider, otherwise <value>null</value>.</param>
            <returns><value>true</value> if the requested provider was created, otherwise <value>false</value>.</returns>
        </member>
        <member name="T:MongoDB.Driver.EstimatedDocumentCountOptions">
            <summary>
            Options for estimated document count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.EstimatedDocumentCountOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.EstimatedDocumentCountOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ExpressionTranslationOptions">
            <summary>
            Options for controlling translation from .NET expression trees into MongoDB expressions.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ExpressionTranslationOptions.CompatibilityLevel">
            <summary>
            Gets or sets the server version to target when translating Expressions.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ExpressionTranslationOptions.EnableClientSideProjections">
            <summary>
            Gets or sets whether client side projections are enabled.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionTranslationOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ExpressionTranslationOptions.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ExpressionTranslationOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ExternalEvidence">
            <summary>
            Evidence of a MongoIdentity via an external mechanism.  For example, on windows this may 
            be the current process' user or, on linux, via kinit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExternalEvidence" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.RenderedFieldDefinition">
            <summary>
            A rendered field.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.RenderedFieldDefinition.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition.FieldName">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition.FieldSerializer">
            <summary>
            Gets the field serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RenderedFieldDefinition`1">
            <summary>
            A rendered field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedFieldDefinition`1.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.RenderedFieldDefinition`1.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
            <param name="underlyingSerializer">The underlying serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.FieldName">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.FieldSerializer">
            <summary>
            Gets the field serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.UnderlyingSerializer">
            <summary>
            Gets the underlying serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FieldDefinition`1">
            <summary>
            Base class for field names.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the field to a <see cref="T:MongoDB.Driver.RenderedFieldDefinition"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedFieldDefinition"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`1.op_Implicit(System.String)~MongoDB.Driver.FieldDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.FieldDefinition`1"/>.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.FieldDefinition`2">
            <summary>
            Base class for field names.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the field to a <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.op_Implicit(System.String)~MongoDB.Driver.FieldDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.FieldDefinition`2" />.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.op_Implicit(MongoDB.Driver.FieldDefinition{`0,`1})~MongoDB.Driver.FieldDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.FieldDefinition`2"/> to <see cref="T:MongoDB.Driver.FieldDefinition`1"/>.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ExpressionFieldDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ExpressionFieldDefinition`1.Expression" /> based field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`1.#ctor(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionFieldDefinition`1" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.ExpressionFieldDefinition`1.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ExpressionFieldDefinition`2">
            <summary>
            An <see cref="P:MongoDB.Driver.ExpressionFieldDefinition`2.Expression" /> based field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionFieldDefinition`2" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.ExpressionFieldDefinition`2.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.StringFieldDefinition`1">
            <summary>
            A <see cref="T:System.String" /> based field name.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.StringFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.StringFieldDefinition`2">
            <summary>
            A <see cref="T:System.String" /> based field name.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`2.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.StringFieldDefinition`2" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="fieldSerializer">The field serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FilterDefinition`1">
            <summary>
            Base class for filters.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FilterDefinition`1.Empty">
            <summary>
            Gets an empty filter. An empty filter matches everything.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the filter to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.FilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})~MongoDB.Driver.FilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from a predicate expression to <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_Implicit(System.String)~MongoDB.Driver.FilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_BitwiseAnd(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Implements the operator &amp;.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_BitwiseOr(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Implements the operator |.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_LogicalNot(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Implements the operator !.
            </summary>
            <param name="op">The op.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentFilterDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentFilterDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentFilterDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentFilterDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentFilterDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.EmptyFilterDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ExpressionFilterDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ExpressionFilterDefinition`1.Expression"/> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFilterDefinition`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionFilterDefinition`1"/> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.ExpressionFilterDefinition`1.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFilterDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonFilterDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonFilterDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonFilterDefinition`1" /> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonFilterDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonFilterDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectFilterDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectFilterDefinition`1.Object" /> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectFilterDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectFilterDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectFilterDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectFilterDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FilterDefinitionBuilder`1">
            <summary>
            A builder for a <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FilterDefinitionBuilder`1.Empty">
            <summary>
            Gets an empty filter. An empty filter matches everything.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.All``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an all filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An all filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an all filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An all filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.And(MongoDB.Driver.FilterDefinition{`0}[])">
            <summary>
            Creates an and filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>A filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.FilterDefinition{`0}})">
            <summary>
            Creates an and filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>An and filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyEq``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates an equality filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyEq``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates an equality filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGt``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a greater than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGt``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a greater than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGte``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a greater than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGte``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a greater than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLt``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a less than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLt``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a less than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLte``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a less than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLte``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a less than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyIn``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNe``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a not equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNe``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a not equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNin``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNin``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringIn(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates an in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringIn(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{System.String}},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates an in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringIn(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates an in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringIn(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates an in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringNin(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates a not in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringNin(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{System.String}},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates a not in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringNin(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates a not in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyStringNin(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates a not in filter for a string array field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllClear(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits all clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits all clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllSet(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits all set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllSet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits all set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnyClear(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits any clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnyClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits any clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnySet(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits any set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnySet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits any set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.ElemMatch``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates an element match filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>An element match filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates an element match filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>An element match filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates an element match filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>An element match filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Eq``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates an equality filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Eq``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates an equality filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Exists(MongoDB.Driver.FieldDefinition{`0},System.Boolean)">
            <summary>
            Creates an exists filter.
            </summary>
            <param name="field">The field.</param>
            <param name="exists">if set to <c>true</c> [exists].</param>
            <returns>An exists filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Exists(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
            Creates an exists filter.
            </summary>
            <param name="field">The field.</param>
            <param name="exists">if set to <c>true</c> [exists].</param>
            <returns>An exists filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoIntersects``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo intersects filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo intersects filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoIntersects``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo intersects filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo intersects filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithin``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo within filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo within filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithin``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo within filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo within filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinBox(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within box filter.
            </summary>
            <param name="field">The field.</param>
            <param name="lowerLeftX">The lower left x.</param>
            <param name="lowerLeftY">The lower left y.</param>
            <param name="upperRightX">The upper right x.</param>
            <param name="upperRightY">The upper right y.</param>
            <returns>A geo within box filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinBox(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within box filter.
            </summary>
            <param name="field">The field.</param>
            <param name="lowerLeftX">The lower left x.</param>
            <param name="lowerLeftY">The lower left y.</param>
            <param name="upperRightX">The upper right x.</param>
            <param name="upperRightY">The upper right y.</param>
            <returns>A geo within box filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenter(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenter(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenterSphere(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenterSphere(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinPolygon(MongoDB.Driver.FieldDefinition{`0},System.Double[0:,0:])">
            <summary>
            Creates a geo within polygon filter.
            </summary>
            <param name="field">The field.</param>
            <param name="points">The points.</param>
            <returns>A geo within polygon filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinPolygon(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double[0:,0:])">
            <summary>
            Creates a geo within polygon filter.
            </summary>
            <param name="field">The field.</param>
            <param name="points">The points.</param>
            <returns>A geo within polygon filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a greater than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a greater than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a greater than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a greater than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a greater than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a greater than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a greater than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a greater than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a greater than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a greater than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a greater than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a greater than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.In``1(MongoDB.Driver.FieldDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.JsonSchema(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a json schema filter.
            </summary>
            <param name="schema">The json validation schema.</param>
            <returns>A schema filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a less than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a less than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a less than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a less than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a less than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a less than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a less than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a less than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a less than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a less than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a less than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a less than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Mod(MongoDB.Driver.FieldDefinition{`0},System.Int64,System.Int64)">
            <summary>
            Creates a modulo filter.
            </summary>
            <param name="field">The field.</param>
            <param name="modulus">The modulus.</param>
            <param name="remainder">The remainder.</param>
            <returns>A modulo filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64,System.Int64)">
            <summary>
            Creates a modulo filter.
            </summary>
            <param name="field">The field.</param>
            <param name="modulus">The modulus.</param>
            <param name="remainder">The remainder.</param>
            <returns>A modulo filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Ne``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a not equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Ne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a not equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Nin``1(MongoDB.Driver.FieldDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Nin``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Not(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Creates a not filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A not filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``1">
            <summary>
            Creates an OfType filter that matches documents of a derived type.
            </summary>
            <typeparam name="TDerived">The type of the matching derived documents.</typeparam>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates an OfType filter that matches documents of a derived type and that also match a filter on the derived document.
            </summary>
            <typeparam name="TDerived">The type of the matching derived documents.</typeparam>
            <param name="derivedDocumentFilter">A filter on the derived document.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates an OfType filter that matches documents of a derived type and that also match a filter on the derived document.
            </summary>
            <typeparam name="TDerived">The type of the matching derived documents.</typeparam>
            <param name="derivedDocumentFilter">A filter on the derived document.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(MongoDB.Driver.FieldDefinition{`0,``0})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived typer.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived type and that also match a filter on the derived field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <param name="derivedFieldFilter">A filter on the derived field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived type.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived type and that also match a filter on the derived field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <param name="derivedFieldFilter">A filter on the derived field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Or(MongoDB.Driver.FilterDefinition{`0}[])">
            <summary>
            Creates an or filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>An or filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.FilterDefinition{`0}})">
            <summary>
            Creates an or filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>An or filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Regex(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Creates a regular expression filter.
            </summary>
            <param name="field">The field.</param>
            <param name="regex">The regex.</param>
            <returns>A regular expression filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Regex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Creates a regular expression filter.
            </summary>
            <param name="field">The field.</param>
            <param name="regex">The regex.</param>
            <returns>A regular expression filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Size(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Size(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGt(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size greater than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGt(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size greater than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGte(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size greater than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGte(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size greater than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLt(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size less than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLt(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size less than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLte(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size less than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLte(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size less than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringIn(MongoDB.Driver.FieldDefinition{`0,System.String},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates an in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringIn(MongoDB.Driver.FieldDefinition{`0,System.String},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates an in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringIn(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates an in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringIn(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates an in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringNin(MongoDB.Driver.FieldDefinition{`0,System.String},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates a not in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringNin(MongoDB.Driver.FieldDefinition{`0,System.String},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates a not in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringNin(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Creates a not in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.StringNin(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Creates a not in filter for a string field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Text(System.String,MongoDB.Driver.TextSearchOptions)">
            <summary>
            Creates a text filter.
            </summary>
            <param name="search">The search.</param>
            <param name="options">The text search options.</param>
            <returns>A text filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Text(System.String,System.String)">
            <summary>
            Creates a text filter.
            </summary>
            <param name="search">The search.</param>
            <param name="language">The language.</param>
            <returns>A text filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.BsonType)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(MongoDB.Driver.FieldDefinition{`0},System.String)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Bson.BsonType)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Creates a filter based on the expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>An expression filter.</returns>
        </member>
        <member name="T:MongoDB.Driver.FindFluentBase`2">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IFindFluent`2" />.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FindFluentBase`2.Filter">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.FindFluentBase`2.Options">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Count(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.CountAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.CountDocuments(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.CountDocumentsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Limit(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Skip(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Sort(MongoDB.Driver.SortDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.ToCursor(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.ToCursorAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.ToString(MongoDB.Driver.ExpressionTranslationOptions)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FindOneAndDeleteOptions`2">
            <summary>
            Options for a findAndModify command to delete an object.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndDeleteOptions`1">
            <summary>
            Options for a findAndModify command to delete an object.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndReplaceOptions`2">
            <summary>
            Options for a findAndModify command to replace an object.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FindOneAndReplaceOptions`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOneAndReplaceOptions`2"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.ReturnDocument">
            <summary>
            Gets or sets which version of the document to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndReplaceOptions`1">
            <summary>
            Options for a findAndModify command to replace an object.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndUpdateOptions`2">
            <summary>
            Options for a findAndModify command to update an object.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FindOneAndUpdateOptions`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOneAndUpdateOptions`2"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.ReturnDocument">
            <summary>
            Gets or sets which version of the document to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndUpdateOptions`1">
            <summary>
            Options for a findAndModify command to update an object.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.FindOptionsBase">
            <summary>
            Options for a find operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FindOptionsBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOptionsBase"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.AllowDiskUse">
            <summary>
            Gets or sets a value indicating whether the server is allowed to write to disk while executing the Find operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.AllowPartialResults">
            <summary>
            Gets or sets a value indicating whether to allow partial results when some shards are unavailable.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.BatchSize">
            <summary>
            Gets or sets the size of a batch.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.CursorType">
            <summary>
            Gets or sets the type of the cursor.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Max">
            <summary>
            Gets or sets the max key value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time for TailableAwait cursors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Min">
            <summary>
            Gets or sets the min key value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.NoCursorTimeout">
            <summary>
            Gets or sets whether a cursor will time out.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.OplogReplay">
            <summary>
            Gets or sets whether the OplogReplay bit will be set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.ReturnKey">
            <summary>
            Gets or sets returnKey. If true, returns only the index keys in the resulting documents.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.ShowRecordId">
            <summary>
            Gets or sets whether the record Id should be added to the result document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.TranslationOptions">
            <summary>
            Gets or sets the translation options.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOptions">
            <summary>
            Options for finding documents.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOptions`2">
            <summary>
            Options for finding documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Limit">
            <summary>
            Gets or sets how many documents to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Skip">
            <summary>
            Gets or sets how many documents to skip before returning the rest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOptions`1">
            <summary>
            Options for finding documents.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson">
            <summary>
            A static class containing helper methods to create GeoJson objects.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.BoundingBox``1(``0,``0)">
            <summary>
            Creates a GeoJson bounding box.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>A GeoJson bounding box.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="geometry">The geometry.</param>
            <returns>A GeoJson Feature object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="geometry">The geometry.</param>
            <returns>A GeoJson Feature object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
            <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="features">The features.</param>
            <returns>A GeoJson FeatureCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
            <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="features">The features.</param>
            <returns>A GeoJson FeatureCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D geographic position (longitude, latitude).
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <returns>A GeoJson 2D geographic position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="altitude">The altitude.</param>
            <returns>A GeoJson 3D geographic position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
            <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="geometries">The geometries.</param>
            <returns>A GeoJson GeometryCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
            <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="geometries">The geometries.</param>
            <returns>A GeoJson GeometryCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LinearRingCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson linear ring.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson linear ring.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson LineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(``0[])">
            <summary>
            Creates a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson LineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineStringCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson LineString.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson LineString.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="lineStrings">The line strings.</param>
            <returns>A GeoJson MultiLineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="lineStrings">The line strings.</param>
            <returns>A GeoJson MultiLineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson MultiPoint object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(``0[])">
            <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson MultiPoint object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="polygons">The polygons.</param>
            <returns>A GeoJson MultiPolygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="polygons">The polygons.</param>
            <returns>A GeoJson MultiPolygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0)">
            <summary>
            Creates a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Point object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(``0)">
            <summary>
            Creates a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Point object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(``0[])">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0}[])">
            <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="exterior">The exterior.</param>
            <param name="holes">The holes.</param>
            <returns>The coordinates of a GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D position (x, y).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>A GeoJson 2D position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D position (x, y, z).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns>A GeoJson 3D position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D projected position (easting, northing).
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <returns>A GeoJson 2D projected position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude.</param>
            <returns>A GeoJson 3D projected position.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates">
            <summary>
            Represents a GeoJson 2D position (x, y).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.X">
            <summary>
            Gets the X coordinate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates">
            <summary>
            Represents a GeoJson 2D geographic position (longitude, latitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates"/> class.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Longitude">
            <summary>
            Gets the longitude.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Latitude">
            <summary>
            Gets the latitude.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates">
            <summary>
            Represents a GeoJson 2D projected position (easting, northing).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Easting">
            <summary>
            Gets the easting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Northing">
            <summary>
            Gets the northing.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates">
            <summary>
            Represents a GeoJson 3D position (x, y, z).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.X">
            <summary>
            Gets the X coordinate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates">
            <summary>
            Represents a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates"/> class.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="altitude">The altitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Longitude">
            <summary>
            Gets the longitude.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Latitude">
            <summary>
            Gets the latitude.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Altitude">
            <summary>
            Gets the altitude.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates">
            <summary>
            Represents a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Easting">
            <summary>
            Gets the easting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Northing">
            <summary>
            Gets the northing.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Altitude">
            <summary>
            Gets the altitude.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1">
            <summary>
            Represents a GeoJson bounding box.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1"/> class.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Max">
            <summary>
            Gets the max.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Min">
            <summary>
            Gets the min.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson coordinate reference system (see subclasses).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates">
            <summary>
            Represents a GeoJson position in some coordinate system (see subclasses).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Equality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Inequality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1">
            <summary>
            Represents a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1"/> class.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Properties">
            <summary>
            Gets the properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1">
            <summary>
            Represents additional arguments for a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1">
            <summary>
            Represents a GeoJson FeatureCollection.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1"/> class.
            </summary>
            <param name="features">The features.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="features">The features.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Features">
            <summary>
            Gets the features.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1">
            <summary>
            Represents a GeoJson Geometry object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1">
            <summary>
            Represents a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1"/> class.
            </summary>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Geometries">
            <summary>
            Gets the geometries.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson linear ring.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1">
            <summary>
            Represents a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.Positions">
            <summary>
            Gets the positions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson linked coordinate reference system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="href">The href.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="href">The href.</param>
            <param name="hrefType">Type of the href.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRef">
            <summary>
            Gets the href.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRefType">
            <summary>
            Gets the type of the href.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1">
            <summary>
            Represents a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1"/> class.
            </summary>
            <param name="lineStrings">The line strings.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.LineStrings">
            <summary>
            Gets the LineStrings.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1">
            <summary>
            Represents a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.Positions">
            <summary>
            Gets the positions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1">
            <summary>
            Represents a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1"/> class.
            </summary>
            <param name="polygons">The polygons.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.Polygons">
            <summary>
            Gets the Polygons.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson named coordinate reference system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1">
            <summary>
            Represents a GeoJson object (see subclasses).
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.BoundingBox">
            <summary>
            Gets the bounding box.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.CoordinateReferenceSystem">
            <summary>
            Gets the coordinate reference system.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.ExtraMembers">
            <summary>
            Gets the extra members.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1">
            <summary>
            Represents additional args provided when creating a GeoJson object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.CoordinateReferenceSystem">
            <summary>
            Gets or sets the coordinate reference system.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.ExtraMembers">
            <summary>
            Gets or sets the extra members.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType">
            <summary>
            Represents the type of a GeoJson object.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Feature">
            <summary>
            A Feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.FeatureCollection">
            <summary>
            A FeatureCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.GeometryCollection">
            <summary>
            A GeometryCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.LineString">
            <summary>
            A LineString.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiLineString">
            <summary>
            A MultiLineString.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPoint">
            <summary>
            A MultiPoint.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPolygon">
            <summary>
            A MultiPolygon.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Point">
            <summary>
            A Point.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Polygon">
            <summary>
            A Polygon.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1">
            <summary>
            Represents a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1">
            <summary>
            Represents a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1"/> class.
            </summary>
            <param name="exterior">The exterior.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1"/> class.
            </summary>
            <param name="exterior">The exterior.</param>
            <param name="holes">The holes.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Exterior">
            <summary>
            Gets the exterior.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Holes">
            <summary>
            Gets the holes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DGeographicCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DProjectedCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DGeographicCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DProjectedCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonBoundingBox value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJsonCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonFeatureCollection value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonFeature value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonGeometryCollection value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1">
            <summary>
            Represents a serializer for a GeoJsonGeometry value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLinearRingCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLineStringCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLineString value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonLinkedCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiLineStringCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiLineString value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPointCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPoint value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPolygonCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPolygon value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonNamedCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1">
            <summary>
            Represents a serializer for a GeoJson object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1">
            <summary>
            Represents a serializer helper for GeoJsonObjects.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.#ctor(System.String,MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="derivedMembers">The derived members.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.DeserializeBaseMember(MongoDB.Bson.Serialization.BsonDeserializationContext,System.String,System.Int64,MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Deserializes a base member.
            </summary>
            <param name="context">The context.</param>
            <param name="elementName">The element name.</param>
            <param name="flag">The flag.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.SerializeMembers``1(MongoDB.Bson.Serialization.BsonSerializationContext,``0,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext,``0})">
            <summary>
            Serializes the members.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="context">The context.</param>
            <param name="value">The value.</param>
            <param name="serializeDerivedMembers">The delegate to serialize the derived members.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPoint value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPolygonCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPolygon value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GridFS.DelegatingStream">
            <summary>
            Represents a Stream that delegates all of its operations to a wrapped Stream.
            </summary>
            <seealso cref="T:System.IO.Stream" />
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.DelegatingStream"/> class.
            </summary>
            <param name="wrappedStream">The wrapped stream.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.CanRead">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.CanSeek">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.CanTimeout">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.CanWrite">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.Length">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.Position">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.ReadTimeout">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.GridFS.DelegatingStream.WriteTimeout">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Close">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.CreateWaitHandle">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.EndRead(System.IAsyncResult)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.EndWrite(System.IAsyncResult)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Flush">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.FlushAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.ReadByte">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.SetLength(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.GridFS.DelegatingStream.WriteByte(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSBucket`1">
            <summary>
            Represents a GridFS bucket.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.#ctor(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.GridFS.GridFSBucketOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSBucket" /> class.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucket`1.Database">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucket`1.Options">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.Delete(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadAsBytes(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadAsBytesAsync(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadAsBytesByName(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadAsBytesByNameAsync(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadToStream(`0,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadToStreamAsync(`0,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadToStreamByName(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DownloadToStreamByNameAsync(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.Drop(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.DropAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.Find(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo{`0}},MongoDB.Driver.GridFS.GridFSFindOptions{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.FindAsync(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo{`0}},MongoDB.Driver.GridFS.GridFSFindOptions{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.OpenDownloadStream(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.OpenDownloadStreamAsync(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.OpenDownloadStreamByName(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.OpenDownloadStreamByNameAsync(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.OpenUploadStream(`0,System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.OpenUploadStreamAsync(`0,System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.Rename(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.RenameAsync(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.UploadFromBytes(`0,System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.UploadFromBytesAsync(`0,System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.UploadFromStream(`0,System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket`1.UploadFromStreamAsync(`0,System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSBucket">
            <summary>
            Represents a GridFS bucket.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.#ctor(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.GridFS.GridFSBucketOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSBucket" /> class.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.Delete(MongoDB.Bson.BsonValue,System.Threading.CancellationToken)">
            <summary>
            Deletes a file from GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.DeleteAsync(MongoDB.Bson.BsonValue,System.Threading.CancellationToken)">
            <summary>
            Deletes a file from GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.DownloadAsBytes(MongoDB.Bson.BsonValue,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and returns it as a byte array.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A byte array containing the contents of the file stored in GridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.DownloadAsBytesAsync(MongoDB.Bson.BsonValue,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and returns it as a byte array.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a byte array containing the contents of the file stored in GridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.DownloadToStream(MongoDB.Bson.BsonValue,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and writes the contents to a stream.
            </summary>
            <param name="id">The file id.</param>
            <param name="destination">The destination.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.DownloadToStreamAsync(MongoDB.Bson.BsonValue,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and writes the contents to a stream.
            </summary>
            <param name="id">The file id.</param>
            <param name="destination">The destination.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.Find(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo},MongoDB.Driver.GridFS.GridFSFindOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.FindAsync(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo},MongoDB.Driver.GridFS.GridFSFindOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.OpenDownloadStream(MongoDB.Bson.BsonValue,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to read data from a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.OpenDownloadStreamAsync(MongoDB.Bson.BsonValue,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to read data from a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.OpenUploadStream(System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.OpenUploadStreamAsync(System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.Rename(MongoDB.Bson.BsonValue,System.String,System.Threading.CancellationToken)">
            <summary>
            Renames a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="newFilename">The new filename.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.RenameAsync(MongoDB.Bson.BsonValue,System.String,System.Threading.CancellationToken)">
            <summary>
            Renames a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="newFilename">The new filename.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.UploadFromBytes(System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.UploadFromBytesAsync(System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.UploadFromStream(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucket.UploadFromStreamAsync(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSBucketOptions">
            <summary>
            Represents mutable options for a GridFS instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucketOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSBucketOptions"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucketOptions.#ctor(MongoDB.Driver.GridFS.GridFSBucketOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSBucketOptions"/> class.
            </summary>
            <param name="other">The other <see cref="T:MongoDB.Driver.GridFS.GridFSBucketOptions"/> from which to copy the values.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSBucketOptions.#ctor(MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSBucketOptions"/> class.
            </summary>
            <param name="other">The other <see cref="T:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions"/> from which to copy the values.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucketOptions.BucketName">
            <summary>
            Gets or sets the bucket name.
            </summary>
            <value>
            The bucket name.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucketOptions.ChunkSizeBytes">
            <summary>
            Gets or sets the chunk size in bytes.
            </summary>
            <value>
            The chunk size in bytes.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucketOptions.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
            <value>
            The read concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucketOptions.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
            <value>
            The read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSBucketOptions.WriteConcern">
            <summary>
            Gets or sets the write concern.
            </summary>
            <value>
            The write concern.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions">
            <summary>
            Represents immutable options for a GridFS instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.Defaults">
            <summary>
            Gets the default GridFSBucketOptions.
            </summary>
            <value>
            The default GridFSBucketOptions.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.#ctor(MongoDB.Driver.GridFS.GridFSBucketOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions" /> class.
            </summary>
            <param name="other">The other <see cref="T:MongoDB.Driver.GridFS.GridFSBucketOptions"/> from which to copy the values.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.BucketName">
            <summary>
            Gets the bucket name.
            </summary>
            <value>
            The bucket name.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.ChunkSizeBytes">
            <summary>
            Gets the chunk size in bytes.
            </summary>
            <value>
            The chunk size in bytes.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.ReadConcern">
            <summary>
            Gets the read concern.
            </summary>
            <value>
            The read concern.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.ReadPreference">
            <summary>
            Gets the read preference.
            </summary>
            <value>
            The read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.SerializerRegistry">
            <summary>
            Gets the serializer registry.
            </summary>
            <value>
            The serializer registry.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.ImmutableGridFSBucketOptions.WriteConcern">
            <summary>
            Gets the write concern.
            </summary>
            <value>
            The write concern.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSChunkException">
            <summary>
            Represents a GridFSChunk exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSChunkException.#ctor(MongoDB.Bson.BsonValue,System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSChunkException" /> class.
            </summary>
            <param name="id">The file id.</param>
            <param name="n">The chunk number.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSChunkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSChunkException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSDownloadByNameOptions">
            <summary>
            Represents options to a GridFS download by name operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSDownloadByNameOptions.Revision">
            <summary>
            Gets or sets which revision of the file to download.
            </summary>
            <value>
            Which revision of the file to download.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSDownloadOptions">
            <summary>
            Represents options for a GridFS download operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSDownloadOptions.Seekable">
            <summary>
            Gets or sets a value indicating whether the returned Stream supports seeking.
            </summary>
            <value>
              <c>true</c> if the returned Stream supports seeking; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSDownloadStream`1">
            <summary>
            Represents a Stream used by the application to read data from a GridFS file.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSDownloadStream`1.FileInfo">
            <summary>
            Gets the files collection document.
            </summary>
            <value>
            The files collection document.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSDownloadStream`1.Close(System.Threading.CancellationToken)">
            <summary>
            Closes the GridFS stream.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSDownloadStream`1.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Closes the GridFS stream.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSDownloadStream">
            <summary>
            Represents a Stream used by the application to read data from a GridFS file.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSDownloadStream.#ctor(MongoDB.Driver.GridFS.GridFSDownloadStream{MongoDB.Bson.BsonValue})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSDownloadStream"/> class.
            </summary>
            <param name="wrappedStream">The wrapped stream.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSDownloadStream.FileInfo">
            <summary>
            Gets the files collection document.
            </summary>
            <value>
            The files collection document.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSException">
            <summary>
            Represents a GridFS exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFileInfo`1">
            <summary>
            Represents information about a stored GridFS file (backed by a files collection document).
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfo`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Driver.GridFS.IGridFSFileInfoSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileInfo" /> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <param name="fileInfoSerializer">The fileInfo serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.BackingDocument">
            <summary>
            Gets the backing document.
            </summary>
            <value>
            The backing document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.ChunkSizeBytes">
            <summary>
            Gets the size of a chunk.
            </summary>
            <value>
            The size of a chunk.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.Filename">
            <summary>
            Gets the filename.
            </summary>
            <value>
            The filename.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo`1.UploadDateTime">
            <summary>
            Gets the upload date time.
            </summary>
            <value>
            The upload date time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFileInfo">
            <summary>
            Represents information about a stored GridFS file (backed by a files collection document).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfo.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileInfo"/> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.BackingDocument">
            <summary>
            Gets the backing document.
            </summary>
            <value>
            The backing document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.ChunkSizeBytes">
            <summary>
            Gets the size of a chunk.
            </summary>
            <value>
            The size of a chunk.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.Filename">
            <summary>
            Gets the filename.
            </summary>
            <value>
            The filename.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.IdAsBsonValue">
            <summary>
            Gets the identifier as a BsonValue.
            </summary>
            <value>
            The identifier as a BsonValue.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfo.UploadDateTime">
            <summary>
            Gets the upload date time.
            </summary>
            <value>
            The upload date time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFileInfoSerializer`1">
            <summary>
            Represents a serializer for GridFSFileInfo.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfoSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileInfoSerializer" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfoSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileInfoSerializer" /> class.
            </summary>
            <param name="idSerializer">The id serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfoSerializer`1.CreateInstance(MongoDB.Bson.BsonDocument)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFileInfoSerializer">
            <summary>
            Represents a serializer for GridFSFileInfo.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFileInfoSerializer.Instance">
            <summary>
            Gets the pre-created instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfoSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileInfoSerializer" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileInfoSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFileNotFoundException">
            <summary>
            Represents a GridFSFileNotFound exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileNotFoundException.#ctor(MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileNotFoundException"/> class.
            </summary>
            <param name="id">The file id.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileNotFoundException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileNotFoundException" /> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="revision">The revision.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSFileNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSFileNotFoundException"/> class.
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFindOptions`1">
            <summary>
            Represents options for a GridFS Find operation.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.AllowDiskUse">
            <summary>
            Gets or sets a value indicating whether the server is allowed to write to disk while executing the Find operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.BatchSize">
            <summary>
            Gets or sets the batch size.
            </summary>
            <value>
            The batch size.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.Limit">
            <summary>
            Gets or sets the maximum number of documents to return.
            </summary>
            <value>
            The maximum number of documents to return.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.MaxTime">
            <summary>
            Gets or sets the maximum time the server should spend on the Find.
            </summary>
            <value>
            The maximum time the server should spend on the Find.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.NoCursorTimeout">
            <summary>
            Gets or sets whether the cursor should not timeout.
            </summary>
            <value>
            Whether the cursor should not timeout.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.Skip">
            <summary>
            Gets or sets the number of documents to skip.
            </summary>
            <value>
            The number of documents to skip.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions`1.Sort">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSFindOptions">
            <summary>
            Represents options for a GridFS Find operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSFindOptions.Sort">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSUploadOptions">
            <summary>
            Represents options for a GridFS upload operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSUploadOptions.BatchSize">
            <summary>
            Gets or sets the batch size.
            </summary>
            <value>
            The batch size.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSUploadOptions.ChunkSizeBytes">
            <summary>
            Gets or sets the chunk size in bytes.
            </summary>
            <value>
            The chunk size in bytes.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSUploadOptions.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSUploadStream`1">
            <summary>
            Represents a Stream used by the application to write data to a GridFS file.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSUploadStream`1.Id">
            <summary>
            Gets the id of the file being added to GridFS.
            </summary>
            <value>
            The id of the file being added to GridFS.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream`1.Abort(System.Threading.CancellationToken)">
            <summary>
            Aborts an upload operation.
            </summary>
            <remarks>
            Any partial results already written to the server are deleted when Abort is called.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream`1.AbortAsync(System.Threading.CancellationToken)">
            <summary>
            Aborts an upload operation.
            </summary>
            <remarks>
            Any partial results already written to the server are deleted when AbortAsync is called.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream`1.Close(System.Threading.CancellationToken)">
            <summary>
            Closes the Stream and completes the upload operation.
            </summary>
            <remarks>
            Any data remaining in the Stream is flushed to the server and the GridFS files collection document is written.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream`1.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Closes the Stream and completes the upload operation.
            </summary>
            <remarks>
            Any data remaining in the Stream is flushed to the server and the GridFS files collection document is written.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:MongoDB.Driver.GridFS.GridFSUploadStream">
            <summary>
            Represents a Stream used by the application to write data to a GridFS file.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream.#ctor(MongoDB.Driver.GridFS.GridFSUploadStream{MongoDB.Bson.ObjectId})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.GridFSUploadStream"/> class.
            </summary>
            <param name="wrappedStream">The wrapped stream.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.GridFSUploadStream.Id">
            <summary>
            Gets the id of the file being added to GridFS.
            </summary>
            <value>
            The id of the file being added to GridFS.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream.Abort(System.Threading.CancellationToken)">
            <summary>
            Aborts an upload operation.
            </summary>
            <remarks>
            Any partial results already written to the server are deleted when Abort is called.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream.AbortAsync(System.Threading.CancellationToken)">
            <summary>
            Aborts an upload operation.
            </summary>
            <remarks>
            Any partial results already written to the server are deleted when AbortAsync is called.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream.Close(System.Threading.CancellationToken)">
            <summary>
            Closes the Stream and completes the upload operation.
            </summary>
            <remarks>
            Any data remaining in the Stream is flushed to the server and the GridFS files collection document is written.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.GridFSUploadStream.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Closes the Stream and completes the upload operation.
            </summary>
            <remarks>
            Any data remaining in the Stream is flushed to the server and the GridFS files collection document is written.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:MongoDB.Driver.GridFS.IGridFSBucket`1">
            <summary>
            Represents a GridFS system bucket.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GridFS.IGridFSBucket`1.Database">
            <summary>
            Gets the database where the GridFS files are stored.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GridFS.IGridFSBucket`1.Options">
            <summary>
            Gets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.Delete(`0,System.Threading.CancellationToken)">
            <summary>
            Deletes a file from GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Deletes a file from GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadAsBytes(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and returns it as a byte array.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The contents of the file stored in GridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadAsBytesAsync(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and returns it as a byte array.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a byte array containing the contents of the file stored in GridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadAsBytesByName(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and returns it as a byte array.
            </summary>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A byte array containing the contents of the file stored in GridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadAsBytesByNameAsync(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and returns it as a byte array.
            </summary>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a byte array containing the contents of the file stored in GridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadToStream(`0,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and writes the contents to a stream.
            </summary>
            <param name="id">The file id.</param>
            <param name="destination">The destination.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadToStreamAsync(`0,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and writes the contents to a stream.
            </summary>
            <param name="id">The file id.</param>
            <param name="destination">The destination.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadToStreamByName(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and writes the contents to a stream.
            </summary>
            <param name="filename">The filename.</param>
            <param name="destination">The destination.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DownloadToStreamByNameAsync(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <summary>
            Downloads a file stored in GridFS and writes the contents to a stream.
            </summary>
            <param name="filename">The filename.</param>
            <param name="destination">The destination.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.Drop(System.Threading.CancellationToken)">
            <summary>
            Drops the files and chunks collections associated with this GridFS bucket.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.DropAsync(System.Threading.CancellationToken)">
            <summary>
            Drops the files and chunks collections associated with this GridFS bucket.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.Find(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo{`0}},MongoDB.Driver.GridFS.GridFSFindOptions{`0},System.Threading.CancellationToken)">
            <summary>
            Finds matching entries from the files collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor of files collection documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.FindAsync(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo{`0}},MongoDB.Driver.GridFS.GridFSFindOptions{`0},System.Threading.CancellationToken)">
            <summary>
            Finds matching entries from the files collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor of files collection documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.OpenDownloadStream(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to read data from a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.OpenDownloadStreamAsync(`0,MongoDB.Driver.GridFS.GridFSDownloadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to read data from a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.OpenDownloadStreamByName(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to read data from a GridFS file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.OpenDownloadStreamByNameAsync(System.String,MongoDB.Driver.GridFS.GridFSDownloadByNameOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to read data from a GridFS file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.OpenUploadStream(`0,System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to write data to a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.OpenUploadStreamAsync(`0,System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to write data to a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.Rename(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Renames a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="newFilename">The new filename.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.RenameAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Renames a GridFS file.
            </summary>
            <param name="id">The file id.</param>
            <param name="newFilename">The new filename.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.UploadFromBytes(`0,System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.UploadFromBytesAsync(`0,System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.UploadFromStream(`0,System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The id of the new file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket`1.UploadFromStreamAsync(`0,System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="id">The file id.</param>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:MongoDB.Driver.GridFS.IGridFSBucket">
            <summary>
            Represents a GridFS system bucket.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.Find(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo},MongoDB.Driver.GridFS.GridFSFindOptions,System.Threading.CancellationToken)">
            <summary>
            Finds matching entries from the files collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor of files collection documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.FindAsync(MongoDB.Driver.FilterDefinition{MongoDB.Driver.GridFS.GridFSFileInfo},MongoDB.Driver.GridFS.GridFSFindOptions,System.Threading.CancellationToken)">
            <summary>
            Finds matching entries from the files collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor of files collection documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.OpenUploadStream(System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to write data to a GridFS file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.OpenUploadStreamAsync(System.String,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a Stream that can be used by the application to write data to a GridFS file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a Stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.UploadFromBytes(System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The id of the new file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.UploadFromBytesAsync(System.String,System.Byte[],MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the id of the new file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.UploadFromStream(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The id of the new file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.IGridFSBucket.UploadFromStreamAsync(System.String,System.IO.Stream,MongoDB.Driver.GridFS.GridFSUploadOptions,System.Threading.CancellationToken)">
            <summary>
            Uploads a file (or a new revision of a file) to GridFS.
            </summary>
            <param name="filename">The filename.</param>
            <param name="source">The source.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the id of the new file.</returns>
        </member>
        <member name="T:MongoDB.Driver.GridFS.IGridFSFileInfoSerializer`1">
            <summary>
            Represents a serializer for a GridFSFileInfo.
            </summary>
            <typeparam name="TFileId">The type of the file identifier.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.IAggregateFluent`1">
            <summary>
            Fluent interface for aggregate.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.AggregateFluentBase`1" />.
            </remarks>
            <typeparam name="TResult">The type of the result of the pipeline.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IAggregateFluent`1.Database">
            <summary>
            Gets the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IAggregateFluent`1.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IAggregateFluent`1.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.AppendStage``1(MongoDB.Driver.PipelineStageDefinition{`0,``0})">
            <summary>
            Appends the stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="stage">The stage.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Changes the result type of the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Bucket``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.AggregateBucketOptions{``0})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Bucket``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketOptions{``0})">
            <summary>
            Appends a $bucket stage to the pipeline with a custom projection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.BucketAuto``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.BucketAuto``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline with a custom projection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ChangeStream(MongoDB.Driver.ChangeStreamStageOptions)">
            <summary>
            Appends a $changeStream stage to the pipeline.
            Normally you would prefer to use the Watch method of <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            Only use this method if subsequent stages project away the resume token (the _id)
            or you don't want the resulting cursor to automatically resume.
            </summary>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Count">
            <summary>
            Appends a count stage to the pipeline.
            </summary>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Densify(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{MongoDB.Driver.FieldDefinition{`0}})">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The fields to partition by.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Densify(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.DensifyRange,MongoDB.Driver.FieldDefinition{`0}[])">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The fields to partition by.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Facet``1(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{`0}},MongoDB.Driver.AggregateFacetOptions{``0})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="facets">The facets.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.GraphLookup``7(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``0,``2},MongoDB.Driver.AggregateExpressionDefinition{`0,``3},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.FieldDefinition{``4,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``0,``4,``6})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Group``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="group">The group projection.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Limit(System.Int64)">
            <summary>
            Appends a limit stage to the pipeline.
            </summary>
            <param name="limit">The limit.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Lookup``2(System.String,MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateLookupOptions{``0,``1})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TForeignDocument">The type of the foreign document.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="foreignCollectionName">Name of the other collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The field in <typeparamref name="TNewResult" /> to place the foreign results.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Lookup``4(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``3,``2},MongoDB.Driver.AggregateLookupOptions{``0,``3})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TNewResult" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Match(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Appends a match stage to the pipeline.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Merge``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Appends a merge stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <typeparam name="TOutput">The type of output documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.MergeAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Appends a merge stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <typeparam name="TOutput">The type of output documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OfType``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends a match stage to the pipeline that matches derived documents and changes the result type to the derived type.
            </summary>
            <typeparam name="TNewResult">The type of the derived documents.</typeparam>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Out(MongoDB.Driver.IMongoCollection{`0},System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="outputCollection">The output collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Out(System.String,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Out(MongoDB.Driver.IMongoCollection{`0},MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="outputCollection">The output collection.</param>
            <param name="timeSeriesOptions">The time series options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Out(System.String,MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="timeSeriesOptions">The time series options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OutAsync(MongoDB.Driver.IMongoCollection{`0},System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="outputCollection">The output collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OutAsync(MongoDB.Driver.IMongoCollection{`0},MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="outputCollection">The output collection.</param>
            <param name="timeSeriesOptions">The time series options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OutAsync(System.String,MongoDB.Driver.TimeSeriesOptions,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="timeSeriesOptions">The time series options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ReplaceRoot``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ReplaceWith``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Sample(System.Int64)">
            <summary>
            Appends a sample stage to the pipeline.
            </summary>
            <param name="size">The sample size.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Set(MongoDB.Driver.SetFieldDefinitions{`0})">
            <summary>
            Appends a $set stage to the pipeline.
            </summary>
            <param name="fields">The fields to set.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.SetWindowFields``1(MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{`0},``0})">
            <summary>
            Appends a $setWindowFields to the pipeline.
            </summary>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="output">The window fields definition.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Search(MongoDB.Driver.Search.SearchDefinition{`0},MongoDB.Driver.Search.SearchHighlightOptions{`0},System.String,MongoDB.Driver.Search.SearchCountOptions,System.Boolean,System.Boolean)">
            <summary>
            Appends a $search stage to the pipeline.
            </summary>
            <param name="searchDefinition">The search definition.</param>
            <param name="highlight">The highlight options.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <param name="returnStoredSource">
            Flag that specifies whether to perform a full document lookup on the backend database
            or return only stored source fields directly from Atlas Search.
            </param>
            <param name="scoreDetails">
            Flag that specifies whether to return a detailed breakdown
            of the score for each document in the result.
            </param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Search(MongoDB.Driver.Search.SearchDefinition{`0},MongoDB.Driver.Search.SearchOptions{`0})">
            <summary>
            Appends a $search stage to the pipeline.
            </summary>
            <param name="searchDefinition">The search definition.</param>
            <param name="searchOptions">The search options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.SearchMeta(MongoDB.Driver.Search.SearchDefinition{`0},System.String,MongoDB.Driver.Search.SearchCountOptions)">
            <summary>
            Appends a $searchMeta stage to the pipeline.
            </summary>
            <param name="searchDefinition">The search definition.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.SetWindowFields``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{`0},``1})">
            <summary>
            Appends a $setWindowFields to the pipeline.
            </summary>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="partitionBy">The partitionBy definition.</param>
            <param name="output">The window fields definition.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.SetWindowFields``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},MongoDB.Driver.SortDefinition{`0},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{`0},``1})">
            <summary>
            Appends a $setWindowFields to the pipeline.
            </summary>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="partitionBy">The partitionBy definition.</param>
            <param name="sortBy">The sortBy definition.</param>
            <param name="output">The window fields definition.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Skip(System.Int64)">
            <summary>
            Appends a skip stage to the pipeline.
            </summary>
            <param name="skip">The number of documents to skip.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Sort(MongoDB.Driver.SortDefinition{`0})">
            <summary>
            Appends a sort stage to the pipeline.
            </summary>
            <param name="sort">The sort specification.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.SortByCount``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <summary>
            Appends a sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TId">The type of the identifier.</typeparam>
            <param name="id">The identifier.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ToCollection(System.Threading.CancellationToken)">
            <summary>
            Executes an aggregation pipeline that writes the results to a collection.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ToCollectionAsync(System.Threading.CancellationToken)">
            <summary>
            Executes an aggregation pipeline that writes the results to a collection.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.UnionWith``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.PipelineDefinition{``0,`0})">
            <summary>
            Appends an $unionWith stage to the pipeline.
            </summary>
            <typeparam name="TWith">The type of the with collection documents.</typeparam>
            <param name="withCollection">The with collection.</param>
            <param name="withPipeline">The with pipeline.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="field">The field.</param>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.AggregateUnwindOptions{``0})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="field">The field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.VectorSearch(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{`0})">
            <summary>
            Appends a vector search stage.
            </summary>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The vector search options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="T:MongoDB.Driver.IOrderedAggregateFluent`1">
            <summary>
            Fluent interface for aggregate.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IOrderedAggregateFluent`1.ThenBy(MongoDB.Driver.SortDefinition{`0})">
            <summary>
            Combines the current sort definition with an additional sort definition.
            </summary>
            <param name="newSort">The new sort.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="T:MongoDB.Driver.IAggregateFluentExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IAggregateFluent`1"/>
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Bucket``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Bucket``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.BucketAuto``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.BucketAuto``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{MongoDB.Driver.AggregateBucketAutoResultId{``1},``0},``2}},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline (this overload can only be used with LINQ3).
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ChangeStreamSplitLargeEvent``1(MongoDB.Driver.IAggregateFluent{MongoDB.Driver.ChangeStreamDocument{``0}})">
            <summary>
            Appends a $changeStreamSplitLargeEvent stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Densify``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Densify``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.DensifyRange,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Documents``1(MongoDB.Driver.IAggregateFluent{MongoDB.Driver.NoPipelineInput},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.NoPipelineInput,System.Collections.Generic.IEnumerable{``0}},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends a $documents stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Documents``1(MongoDB.Driver.IAggregateFluent{MongoDB.Driver.NoPipelineInput},System.Collections.Generic.IEnumerable{``0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends a $documents stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Facet``1(MongoDB.Driver.IAggregateFluent{``0},System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``0}})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="facets">The facets.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Facet``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="facets">The facets.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Facet``2(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="facets">The facets.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``7(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``1,``3},MongoDB.Driver.AggregateExpressionDefinition{``0,``4},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``2(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.AggregateExpressionDefinition{``0,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Int32})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``7(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``6,``5}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``8(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``7,``6}},System.Linq.Expressions.Expression{System.Func{``5,System.Int32}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``5,``7})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Group``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="group">The group projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Group``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="id">The id.</param>
            <param name="group">The group projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``1(MongoDB.Driver.IAggregateFluent{``0},System.String,MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollectionName">Name of the foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The field in the result to place the foreign matches.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``3(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Linq.Expressions.Expression{System.Func{``2,System.Object}},MongoDB.Driver.AggregateLookupOptions{``1,``2})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The field in the result to place the foreign matches.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in the result in which to place the results of the lookup pipeline.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``5(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``1,``2},System.Linq.Expressions.Expression{System.Func{``4,``3}},MongoDB.Driver.AggregateLookupOptions{``1,``4})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TNewResult" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Match``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Appends a match stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="filter">The filter.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Project``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Project``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ReplaceRoot``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="newRoot">The new root.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ReplaceWith``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="newRoot">The new root.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Set``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a $set stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFields">The type of object specifying the fields to set.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="fields">The fields to set.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SetWindowFields``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``0},``1}})">
            <summary>
            Appends a $setWindowFields to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="output">The window fields expression.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SetWindowFields``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``0},``2}})">
            <summary>
            Appends a $setWindowFields to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SetWindowFields``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.SortDefinition{``0},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``0},``2}})">
            <summary>
            Appends a $setWindowFields to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="sortBy">The sortBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortBy``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Appends an ascending sort stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortByCount``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="id">The id.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortByDescending``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Appends a descending sort stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ThenBy``1(MongoDB.Driver.IOrderedAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Modifies the current sort stage by appending an ascending field specification to it.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ThenByDescending``1(MongoDB.Driver.IOrderedAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Modifies the current sort stage by appending a descending field specification to it.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.AggregateUnwindOptions{``1})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.First``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstOrDefault``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result, or the default value if the result set is empty.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstOrDefaultAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result, or the default value if the result set is empty.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Single``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result. Throws an exception if the result set does not contain exactly one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result. Throws an exception if the result set does not contain exactly one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleOrDefault``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result, or the default value if the result set is empty. Throws an exception if the result set contains more than one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleOrDefaultAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result, or the default value if the result set is empty. Throws an exception if the result set contains more than one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.VectorSearch``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``0})">
            <summary>
            Appends a $vectorSearch stage.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The vector search options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="T:MongoDB.Driver.IClientSession">
            <summary>
            The interface for a client session.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.Client">
            <summary>
            Gets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.ClusterTime">
            <summary>
            Gets the cluster time.
            </summary>
            <value>
            The cluster time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.IsImplicit">
            <summary>
            Gets a value indicating whether this session is an implicit session.
            </summary>
            <value>
              <c>true</c> if this session is an implicit session; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.IsInTransaction">
            <summary>
            Gets a value indicating whether this instance is in a transaction.
            </summary>
            <value>
              <c>true</c> if this instance is in a transaction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.OperationTime">
            <summary>
            Gets the operation time.
            </summary>
            <value>
            The operation time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.Options">
            <summary>
            Gets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.ServerSession">
            <summary>
            Gets the server session.
            </summary>
            <value>
            The server session.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.WrappedCoreSession">
            <summary>
            Gets the wrapped core session (intended for internal use only).
            </summary>
            <value>
            The wrapped core session.
            </value>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AbortTransaction(System.Threading.CancellationToken)">
            <summary>
            Aborts the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AbortTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Aborts the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <summary>
            Advances the cluster time.
            </summary>
            <param name="newClusterTime">The new cluster time.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <summary>
            Advances the operation time.
            </summary>
            <param name="newOperationTime">The new operation time.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.CommitTransaction(System.Threading.CancellationToken)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.CommitTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <summary>
            Starts a transaction.
            </summary>
            <param name="transactionOptions">The transaction options.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.WithTransaction``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,``0},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a callback within a transaction, with retries if needed.
            </summary>
            <remarks>
            If a command inside the callback fails, it may cause the transaction on the server to be
            aborted. This situation is normally handled transparently by the driver. However, if the
            application does not return that error from the callback, the driver will not be able to
            determine whether the transaction was aborted or not. The driver will then retry the
            callback indefinitely. To avoid this situation, the application MUST NOT silently handle
            errors within the callback. If the application needs to handle errors within the
            callback, it MUST return them after doing so.
            </remarks>
            <param name="callback">The user defined callback.</param>
            <param name="transactionOptions">The transaction options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <typeparam name="TResult">The type of callback result.</typeparam>
            <returns>The callback result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.WithTransactionAsync``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a callback within a transaction, with retries if needed.
            </summary>
            <remarks>
            If a command inside the callback fails, it may cause the transaction on the server to be
            aborted. This situation is normally handled transparently by the driver. However, if the
            application does not return that error from the callback, the driver will not be able to
            determine whether the transaction was aborted or not. The driver will then retry the
            callback indefinitely. To avoid this situation, the application MUST NOT silently handle
            errors within the callback. If the application needs to handle errors within the
            callback, it MUST return them after doing so.
            </remarks>
            <param name="callbackAsync">The user defined callback.</param>
            <param name="transactionOptions">The transaction options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <typeparam name="TResult">The type of callback result.</typeparam>
            <returns>The callback result.</returns>
        </member>
        <member name="T:MongoDB.Driver.IClientSessionHandle">
            <summary>
            A handle to an underlying reference counted IClientSession.
            </summary>
            <seealso cref="T:MongoDB.Driver.IClientSession" />
        </member>
        <member name="M:MongoDB.Driver.IClientSessionHandle.Fork">
            <summary>
            Forks this instance.
            </summary>
            <returns>A session.</returns>
        </member>
        <member name="T:MongoDB.Driver.IExtensionManager">
            <summary>
            Extension Manager provides a way to configure extensions for the driver.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IExtensionManager.SaslMechanisms">
            <summary>
            Sasl Mechanisms Registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IExtensionManager.KmsProviders">
            <summary>
            Kms Providers Registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IExtensionManager.AutoEncryptionProvider">
            <summary>
            AutoEncryption Provider Registry.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IFilteredMongoCollection`1">
            <summary>
            A filtered mongo collection. The filter will be and'ed with all filters.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IFilteredMongoCollection`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IFindFluent`2">
            <summary>
            Fluent interface for find.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.FindFluentBase`2" />.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IFindFluent`2.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IFindFluent`2.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            A simplified type of projection that changes the result type by using a different serializer.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="resultSerializer">The result serializer.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Count(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.CountDocuments(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <remarks>
            Note: when migrating from Count to CountDocuments the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.CountDocumentsAsync(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <remarks>
            Note: when migrating from CountAsync to CountDocumentsAsync the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Limit(System.Nullable{System.Int32})">
            <summary>
            Limits the number of documents.
            </summary>
            <remarks>
            Limit of zero or null is equivalent to setting no limit.
            </remarks>
            <param name="limit">The limit.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <summary>
            Projects the the result.
            </summary>
            <typeparam name="TNewProjection">The type of the projection.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Skip(System.Nullable{System.Int32})">
            <summary>
            Skips the the specified number of documents.
            </summary>
            <param name="skip">The skip.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Sort(MongoDB.Driver.SortDefinition{`0})">
            <summary>
            Sorts the the documents.
            </summary>
            <param name="sort">The sort.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.ToString(MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Returns a string representation of an IFindFluent instance.
            </summary>
            <param name="translationOptions">The translation options.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="T:MongoDB.Driver.IOrderedFindFluent`2">
            <summary>
            Fluent interface for find.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="T:MongoDB.Driver.IFindFluentExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IFindFluent`2"/>
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Project``2(MongoDB.Driver.IFindFluent{``0,``1},MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Projects the result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="projection">The projection.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Project``3(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
            <summary>
            Projects the result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <typeparam name="TNewProjection">The type of the new projection.</typeparam>
            <param name="find">The fluent find.</param>
            <param name="projection">The projection.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SortBy``2(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Sorts the results by an ascending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SortByDescending``2(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Sorts the results by a descending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.ThenBy``2(MongoDB.Driver.IOrderedFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Adds an ascending field to the existing sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.ThenByDescending``2(MongoDB.Driver.IOrderedFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Adds a descending field to the existing sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Any``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Determine if there are any results.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>True if there is at least one document.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.AnyAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Determine if there are any results.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is true if there is at least one document.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.First``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstOrDefault``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstOrDefaultAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Single``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleOrDefault``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleOrDefaultAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoClient">
            <summary>
            The client interface to MongoDB.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoClient.Cluster">
            <summary>
            Gets the cluster.
            </summary>
            <value>
            The cluster.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IMongoClient.Settings">
            <summary>
            Gets the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.BulkWrite(System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a list of mixed write operations.
            </summary>
            <param name="models">List of operations to execute.</param>
            <param name="options">The bulk write options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.BulkWrite(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a list of mixed write operations.
            </summary>
            <param name="session">The session.</param>
            <param name="models">List of operations to execute.</param>
            <param name="options">The bulk write options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.BulkWriteAsync(System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a list of mixed write operations.
            </summary>
            <param name="models">List of operations to execute.</param>
            <param name="options">The bulk write options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.BulkWriteAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a list of mixed write operations.
            </summary>
            <param name="session">The session.</param>
            <param name="models">List of operations to execute.</param>
            <param name="options">The bulk write options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabase(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabase(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabaseAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Gets a database.
            </summary>
            <param name="name">The name of the database.</param>
            <param name="settings">The database settings.</param>
            <returns>An implementation of a database.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNames(System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNames(MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="options">The options.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNamesAsync(MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="options">The options.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.StartSession(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts a client session.
            </summary>
            <param name="options">The session options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A client session.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.StartSessionAsync(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts a client session.
            </summary>
            <param name="options">The session options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a client session.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <summary>
            Returns a new IMongoClient instance with a different read concern setting.
            </summary>
            <param name="readConcern">The read concern.</param>
            <returns>A new IMongoClient instance with a different read concern setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Returns a new IMongoClient instance with a different read preference setting.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A new IMongoClient instance with a different read preference setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <summary>
            Returns a new IMongoClient instance with a different write concern setting.
            </summary>
            <param name="writeConcern">The write concern.</param>
            <returns>A new IMongoClient instance with a different write concern setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoClientExtensions">
            <summary>
            Extension methods on IMongoClient.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.Watch(MongoDB.Driver.IMongoClient,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.Watch(MongoDB.Driver.IMongoClient,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.WatchAsync(MongoDB.Driver.IMongoClient,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.WatchAsync(MongoDB.Driver.IMongoClient,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoCollection`1">
            <summary>
            Represents a typed collection in MongoDB.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.MongoCollectionBase`1"/>.
            </remarks>
            <typeparam name="TDocument">The type of the documents stored in the collection.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.CollectionNamespace">
            <summary>
            Gets the namespace of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.Database">
            <summary>
            Gets the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.DocumentSerializer">
            <summary>
            Gets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.Indexes">
            <summary>
            Gets the index manager.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.SearchIndexes">
            <summary>
            Gets the search index manager.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.Settings">
            <summary>
            Gets the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Aggregate``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Aggregate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateAsync``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateToCollection``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline whose results are written to a collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateToCollection``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline whose results are written to a collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateToCollectionAsync``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline whose results are written to a collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateToCollectionAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline whose results are written to a collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWrite(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of writing.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWrite(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="session">The session.</param>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of writing.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWriteAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of writing.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWriteAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="session">The session.</param>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of writing.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Count(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Count(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocuments(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
             <summary>
             Counts the number of documents in the collection.
             For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
             </summary>
             <remarks>
             Note: when migrating from Count to CountDocuments the following query operations must be replaced:
            
             <code>
             +-------------+--------------------------------+
             | Operator    | Replacement                    |
             +=============+================================+
             | $where      |  $expr                         |
             +-------------+--------------------------------+
             | $near       |  $geoWithin with $center       |
             +-------------+--------------------------------+
             | $nearSphere |  $geoWithin with $centerSphere |
             +-------------+--------------------------------+
             </code>
             </remarks>
             <param name="filter">The filter.</param>
             <param name="options">The options.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>
             The number of documents in the collection.
             </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocuments(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
             <summary>
             Counts the number of documents in the collection.
             For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
             </summary>
             <remarks>
             Note: when migrating from Count to CountDocuments the following query operations must be replaced:
            
             <code>
             +-------------+--------------------------------+
             | Operator    | Replacement                    |
             +=============+================================+
             | $where      |  $expr                         |
             +-------------+--------------------------------+
             | $near       |  $geoWithin with $center       |
             +-------------+--------------------------------+
             | $nearSphere |  $geoWithin with $centerSphere |
             +-------------+--------------------------------+
             </code>
             </remarks>
             <param name="session">The session.</param>
             <param name="filter">The filter.</param>
             <param name="options">The options.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>
             The number of documents in the collection.
             </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocumentsAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
             <summary>
             Counts the number of documents in the collection.
             For a fast estimate of the total documents in a collection see <seea cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
             </summary>
             <remarks>
             Note: when migrating from CountAsync to CountDocumentsAsync the following query operations must be replaced:
            
             <code>
             +-------------+--------------------------------+
             | Operator    | Replacement                    |
             +=============+================================+
             | $where      |  $expr                         |
             +-------------+--------------------------------+
             | $near       |  $geoWithin with $center       |
             +-------------+--------------------------------+
             | $nearSphere |  $geoWithin with $centerSphere |
             +-------------+--------------------------------+
             </code>
             </remarks>
             <param name="filter">The filter.</param>
             <param name="options">The options.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>
             The number of documents in the collection.
             </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocumentsAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
             <summary>
             Counts the number of documents in the collection.
             For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
             </summary>
             <remarks>
             Note: when migrating from CountAsync to CountDocumentsAsync the following query operations must be replaced:
            
             <code>
             +-------------+--------------------------------+
             | Operator    | Replacement                    |
             +=============+================================+
             | $where      |  $expr                         |
             +-------------+--------------------------------+
             | $near       |  $geoWithin with $center       |
             +-------------+--------------------------------+
             | $nearSphere |  $geoWithin with $centerSphere |
             +-------------+--------------------------------+
             </code>
             </remarks>
             <param name="session">The session.</param>
             <param name="filter">The filter.</param>
             <param name="options">The options.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>
             The number of documents in the collection.
             </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteMany(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Distinct``1(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Distinct``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctAsync``1(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctMany``1(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{``0}},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctMany``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{``0}},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctManyAsync``1(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{``0}},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctManyAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{``0}},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)">
            <summary>
            Returns an estimate of the number of documents in the collection.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An estimate of the number of documents in the collection.
            </returns>
            <remarks>
            Due to an oversight in versions 5.0.0-5.0.8 of MongoDB, the count command, which estimatedDocumentCount uses
            in its implementation, was not included in v1 of the Stable API. If you are using the Stable API with
            estimatedDocumentCount, you must upgrade to server version 5.0.9+ or set strict: false when configuring
            ServerApi to avoid encountering errors.
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)">
            <summary>
            Returns an estimate of the number of documents in the collection.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An estimate of the number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindSync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindSync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDelete``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDelete``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDeleteAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDeleteAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplace``1(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplace``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplaceAsync``1(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplaceAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdate``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdateAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOne(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOne(MongoDB.Driver.IClientSessionHandle,`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="document">The document.</param>
            <param name="_cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(MongoDB.Driver.IClientSessionHandle,`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertMany(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduce``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduce``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduceAsync``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduceAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.OfType``1">
            <summary>
            Returns a filtered collection that appears to contain only documents of the derived type.
            All operations using this filtered collection will automatically use discriminators as necessary.
            </summary>
            <typeparam name="TDerivedDocument">The type of the derived document.</typeparam>
            <returns>A filtered collection.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateMany(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateManyAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <summary>
            Returns a new IMongoCollection instance with a different read concern setting.
            </summary>
            <param name="readConcern">The read concern.</param>
            <returns>A new IMongoCollection instance with a different read concern setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Returns a new IMongoCollection instance with a different read preference setting.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A new IMongoCollection instance with a different read preference setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <summary>
            Returns a new IMongoCollection instance with a different write concern setting.
            </summary>
            <param name="writeConcern">The write concern.</param>
            <returns>A new IMongoCollection instance with a different write concern setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoCollectionExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IMongoCollection`1"/>.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Aggregate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Aggregate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.AsQueryable``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.AggregateOptions)">
            <summary>
            Creates a queryable source of documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="aggregateOptions">The aggregate options</param>
            <returns>A queryable source of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.AsQueryable``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)">
            <summary>
            Creates a queryable source of documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="aggregateOptions">The aggregate options</param>
            <returns>A queryable source of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Count``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Count``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="session">The session.</param>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocuments``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocuments``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="session">The session.</param>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocumentsAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocumentsAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteMany``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteMany``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteMany``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctMany``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctMany``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctMany``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctMany``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctMany``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctMany``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctManyAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctManyAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctManyAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctManyAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctManyAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctManyAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified array field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the array items.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent find interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent find interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.IClientSessionHandle,``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="session">The session.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateMany``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateMany``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateManyAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Watch``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Watch``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.WatchAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.WatchAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoDatabase">
            <summary>
            Represents a database in MongoDB.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoDatabase.Client">
            <summary>
            Gets the client.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoDatabase.DatabaseNamespace">
            <summary>
            Gets the namespace of the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoDatabase.Settings">
            <summary>
            Gets the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Aggregate``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Aggregate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateToCollection``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateToCollection``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateToCollectionAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateToCollectionAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollection(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollection(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollectionAsync(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateView``2(System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateView``2(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="session">The session.</param>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateViewAsync``2(System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateViewAsync``2(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="session">The session.</param>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollection(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollection(System.String,MongoDB.Driver.DropCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="name">The name of the collection to drop.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollection(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollection(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the collection to drop.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(System.String,MongoDB.Driver.DropCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="name">The name of the collection to drop.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the collection to drop.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.GetCollection``1(System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Gets a collection.
            </summary>
            <typeparam name="TDocument">The document type.</typeparam>
            <param name="name">The name of the collection.</param>
            <param name="settings">The settings.</param>
            <returns>An implementation of a collection.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNames(MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNames(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNamesAsync(MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNamesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollections(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollections(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionsAsync(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionsAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollection(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollection(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollectionAsync(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommand``1(MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommand``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="session">The session.</param>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommandAsync``1(MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommandAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="session">The session.</param>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <summary>
            Returns a new IMongoDatabase instance with a different read concern setting.
            </summary>
            <param name="readConcern">The read concern.</param>
            <returns>A new IMongoDatabase instance with a different read concern setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Returns a new IMongoDatabase instance with a different read preference setting.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A new IMongoDatabase instance with a different read preference setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <summary>
            Returns a new IMongoDatabase instance with a different write concern setting.
            </summary>
            <param name="writeConcern">The write concern.</param>
            <returns>A new IMongoDatabase instance with a different write concern setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoDatabaseExtensions">
            <summary>
            Extension methods on IMongoDatabase.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Aggregate(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Aggregate(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <param name="database">The database.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.AsQueryable(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.AggregateOptions)">
            <summary>
            Creates a queryable source of documents.
            </summary>
            <param name="database">The database.</param>
            <param name="aggregateOptions">The aggregate options</param>
            <returns>A queryable source of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.AsQueryable(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)">
            <summary>
            Creates a queryable source of documents.
            </summary>
            <param name="database">The collection.</param>
            <param name="session">The session.</param>
            <param name="aggregateOptions">The aggregate options</param>
            <returns>A queryable source of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Watch(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Watch(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.WatchAsync(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.WatchAsync(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoIndexManager`1">
            <summary>
            An interface representing methods used to create, delete and modify indexes.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.MongoIndexManagerBase`1"/>.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IMongoIndexManager`1.CollectionNamespace">
            <summary>
            Gets the namespace of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoIndexManager`1.DocumentSerializer">
            <summary>
            Gets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoIndexManager`1.Settings">
            <summary>
            Gets the collection settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="keys">The keys.</param>       
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="keys">The keys.</param>
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="keys">The keys.</param>
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="keys">The keys.</param>
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name= "options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.List(System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.List(MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.List(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.List(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListAsync(MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDefinition`1">
            <summary>
            Base class for an index keys definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the index keys definition to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.IndexKeysDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.IndexKeysDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinition`1.op_Implicit(System.String)~MongoDB.Driver.IndexKeysDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.IndexKeysDefinition`1" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based index keys definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonIndexKeysDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based index keys definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonIndexKeysDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonIndexKeysDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonIndexKeysDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonIndexKeysDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDefinitionExtensions">
            <summary>
            Extension methods for an index keys definition.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Ascending``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with an ascending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Ascending``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with an ascending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Descending``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a descending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Descending``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a descending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2D``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a 2d index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2D``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a 2d index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.GeoHaystack``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a geo haystack index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.GeoHaystack``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a geo haystack index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2DSphere``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a 2dsphere index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2DSphere``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a 2dsphere index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Hashed``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a hashed index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Hashed``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a hashed index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Text``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a text index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Text``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a text index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDefinitionBuilder`1">
            <summary>
            A builder for an <see cref="T:MongoDB.Driver.IndexKeysDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Ascending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates an ascending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates an ascending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Combine(MongoDB.Driver.IndexKeysDefinition{`0}[])">
            <summary>
            Creates a combined index keys definition.
            </summary>
            <param name="keys">The keys.</param>
            <returns>A combined index keys definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IndexKeysDefinition{`0}})">
            <summary>
            Creates a combined index keys definition.
            </summary>
            <param name="keys">The keys.</param>
            <returns>A combined index keys definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Descending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a descending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a descending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2D(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a 2d index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2d index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2D(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a 2d index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2d index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.GeoHaystack(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a geo haystack index key definition.
            </summary>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A geo haystack index key definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.GeoHaystack(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a geo haystack index key definition.
            </summary>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A geo haystack index key definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2DSphere(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a 2dsphere index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2dsphere index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2DSphere(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a 2dsphere index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2dsphere index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Hashed(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a hashed index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A hashed index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Hashed(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a hashed index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A hashed index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Text(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a text index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A text index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a text index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A text index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Wildcard(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a wildcard index key definition. The method doesn't expect to specify a wildcard key explicitly.
            </summary>
            <param name="field">The wildcard key name. If the wildcard name is empty, the generated key will be `All field paths`, otherwise `A single field path`.</param>
            <returns>A wildcard index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Wildcard(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a wildcard index key definition.
            </summary>
            <param name="field">The field expression representing the wildcard key name.</param>
            <returns>A wildcard index key definition.</returns>
        </member>
        <member name="T:MongoDB.Driver.IndexOptionDefaults">
            <summary>
            Represents index option defaults.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexOptionDefaults.StorageEngine">
            <summary>
            Gets or sets the storage engine options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionDefaults.ToBsonDocument">
            <summary>
            Returns this instance represented as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.InsertManyOptions">
            <summary>
            Options for inserting many documents.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.InsertManyOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertManyOptions"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertManyOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertManyOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertManyOptions.IsOrdered">
            <summary>
            Gets or sets a value indicating whether the requests are fulfilled in order.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.InsertOneModel`1">
            <summary>
            Model for inserting a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.InsertOneModel`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertOneModel`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.InsertOneModel`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertOneModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.InsertOneOptions">
            <summary>
            Options for inserting one document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertOneOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertOneOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IServerSession">
            <summary>
            The interface for a server session.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IServerSession.Id">
            <summary>
            Gets the session Id.
            </summary>
            <value>
            The session Id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IServerSession.LastUsedAt">
            <summary>
            Gets the time this server session was last used (in UTC).
            </summary>
            <value>
            The time this server session was last used (in UTC).
            </value>
        </member>
        <member name="M:MongoDB.Driver.IServerSession.AdvanceTransactionNumber">
            <summary>
            Gets the next transaction number.
            </summary>
            <returns>The transaction number.</returns>
        </member>
        <member name="M:MongoDB.Driver.IServerSession.WasUsed">
            <summary>
            Called by the driver when the session is used (i.e. sent to the server).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ISetWindowFieldsPartition`1">
            <summary>
            Represents a partition for SetWindowFields.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.Linq.DateTimeExtensions">
            <summary>
            This static class holds methods that can be used to express MongoDB specific operations in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Add(System.DateTime,System.Int64,MongoDB.Driver.Linq.DateTimeUnit)">
            <summary>
            Adds a value of the specified unit to a DateTime.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="unit">The unit.</param>
            <returns>The resulting DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Add(System.DateTime,System.Int64,MongoDB.Driver.Linq.DateTimeUnit,System.String)">
            <summary>
            Adds a value of the specified unit to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="unit">The unit.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Add(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Adds a TimeSpan value to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddDays(System.DateTime,System.Double,System.String)">
            <summary>
            Adds a value in days to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddHours(System.DateTime,System.Double,System.String)">
            <summary>
            Adds a value in hours to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddMilliseconds(System.DateTime,System.Double,System.String)">
            <summary>
            Adds a value in milliseconds to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddMinutes(System.DateTime,System.Double,System.String)">
            <summary>
            Adds a value in minutes to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddMonths(System.DateTime,System.Int32,System.String)">
            <summary>
            Adds a value in months to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddQuarters(System.DateTime,System.Int32)">
            <summary>
            Adds a value in quarters to a DateTime.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <returns>The resulting DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddQuarters(System.DateTime,System.Int32,System.String)">
            <summary>
            Adds a value in quarters to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddSeconds(System.DateTime,System.Double,System.String)">
            <summary>
            Adds a value in seconds to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddWeeks(System.DateTime,System.Int32)">
            <summary>
            Adds a value in weeks to a DateTime taking.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <returns>The resulting DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddWeeks(System.DateTime,System.Int32,System.String)">
            <summary>
            Adds a value in weeks to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.AddYears(System.DateTime,System.Int32,System.String)">
            <summary>
            Adds a value in years to a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateAdd for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Subtract(System.DateTime,System.DateTime,MongoDB.Driver.Linq.DateTimeUnit)">
            <summary>
            Subtracts the start date from the end date returning the result in the specified unit.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="startDate">The start date.</param>
            <param name="unit">The unit.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Subtract(System.DateTime,System.DateTime,MongoDB.Driver.Linq.DateTimeUnit,System.String)">
            <summary>
            Subtracts the start date from the end date returning the result in the specified unit taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="startDate">The start date.</param>
            <param name="unit">The unit.</param>
            <param name="timezone">The timezone.</param>
            <returns>The result.</returns>
            <remarks>See the server documentation for $dateDiff for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Subtract(System.DateTime,System.DateTime,System.String)">
            <summary>
            Subtracts the start date from the end date returning a TimeSpan taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateDiff for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Subtract(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Subtracts a TimeSpan from a date taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateSubtract for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Subtract(System.DateTime,System.Int64,MongoDB.Driver.Linq.DateTimeUnit)">
            <summary>
            Subtracts a value of the specified unit from a DateTime.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="unit">The unit.</param>
            <returns>The resulting DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Subtract(System.DateTime,System.Int64,MongoDB.Driver.Linq.DateTimeUnit,System.String)">
            <summary>
            Subtracts a value of the specified unit from a DateTime taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="value">The value to be added.</param>
            <param name="unit">The unit.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateSubtract for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.ToString(System.DateTime,System.String,System.String)">
            <summary>
            Converts a DateTime value to a string.
            </summary>
            <param name="this">The DateTime value.</param>
            <param name="format">The format string (optional, can be null).</param>
            <param name="timezone">The timezone to use in the returned string (optional, can be null).</param>
            <returns>The DateTime value converted to a string.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Truncate(System.DateTime,MongoDB.Driver.Linq.DateTimeUnit)">
            <summary>
            Truncates a DateTime value to the specified unit.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="unit">The unit.</param>
            <returns>The resulting DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Truncate(System.DateTime,MongoDB.Driver.Linq.DateTimeUnit,System.Int64)">
            <summary>
            Truncates a DateTime value to the specified unit and bin size.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="unit">The unit.</param>
            <param name="binSize">The bin size.</param>
            <returns>The resulting DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Truncate(System.DateTime,MongoDB.Driver.Linq.DateTimeUnit,System.Int64,System.String)">
            <summary>
            Truncates a DateTime value to the specified unit and bin size taking a timezone into consideration.
            </summary>
            <param name="this">The original DateTime.</param>
            <param name="unit">The unit.</param>
            <param name="binSize">The bin size.</param>
            <param name="timezone">The timezone.</param>
            <returns>The resulting DateTime.</returns>
            <remarks>See the server documentation for $dateTrunc for information on timezones in MongoDB.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Week(System.DateTime)">
            <summary>
            Returns the week number of a specified DateTime value.
            </summary>
            <param name="this">The DateTime value.</param>
            <returns>The week number of a specified DateTime value.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.DateTimeExtensions.Week(System.DateTime,System.String)">
            <summary>
            Returns the week number of a specified DateTime value.
            </summary>
            <param name="this">The DateTime value.</param>
            <param name="timezone">The timezone to use (optional, can be null).</param>
            <returns>The week number of a specified DateTime value.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.DateTimeUnit">
            <summary>
            Represents the unit for various DateTime operations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Day">
            <summary>
            Day unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Hour">
            <summary>
            Hour unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Millisecond">
            <summary>
            Millisecond unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Minute">
            <summary>
            Minute unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Month">
            <summary>
            Month unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Quarter">
            <summary>
            Quarter unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Second">
            <summary>
            Second unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Week">
            <summary>
            Week unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingFriday">
            <summary>
            Week starting on Friday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingMonday">
            <summary>
            Week starting on Monday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingSaturday">
            <summary>
            Week starting on Saturday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingSunday">
            <summary>
            Week starting on Sunday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingThursday">
            <summary>
            Week starting on Thursday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingTuesday">
            <summary>
            Week starting on Tuesday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.WeekStartingWednesday">
            <summary>
            Week starting on Wednesday unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Year">
            <summary>
            Year unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.StartOfWeek">
            <summary>
            The day of the start of the week (only valid with Week units that specify a start of the week).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.DateTimeUnit.Unit">
            <summary>
            The unit.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExponentialMovingAverageWeighting">
            <summary>
            Represents how values are weighted when computing the exponential moving average.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExponentialMovingAverageWeighting.Alpha(System.Double)">
            <summary>
            Returns an alpha weighting.
            </summary>
            <param name="alpha">The alpha value.</param>
            <returns>An alpha weighting.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExponentialMovingAverageWeighting.N(System.Int32)">
            <summary>
            Returns an positional weighting.
            </summary>
            <param name="n">The n value.</param>
            <returns>An n weighting.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting">
            <summary>
            Represents an alpha weighting for an exponential moving average.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting.#ctor(System.Double)">
            <summary>
            Initializes an instance of ExponentialMovingAverageAlphaWeighting.
            </summary>
            <param name="alpha">The alpha value.</param>
        </member>
        <member name="P:MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting.Alpha">
            <summary>
            The alpha value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting">
            <summary>
            Represents a positional weighting for an exponential moving average.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting.#ctor(System.Int32)">
            <summary>
            Initializes an instance of ExponentialMovingAveragePositionalWeighting.
            </summary>
            <param name="n">The n value.</param>
        </member>
        <member name="P:MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting.N">
            <summary>
            The n value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionNotSupportedException">
            <summary>
            Exception that is thrown when using a LINQ expression that is not supported.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes an instance of an ExpressionNotSupportedException.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Initializes an instance of an ExpressionNotSupportedException.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Initializes an instance of an ExpressionNotSupportedException.
            </summary>
            <param name="expression">The expression.</param>
            <param name="because">The reason.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Initializes an instance of an ExpressionNotSupportedException.
            </summary>
            <param name="expression">The expression.</param>
            <param name="containingExpression">The containing expression.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.String)">
            <summary>
            Initializes an instance of an ExpressionNotSupportedException.
            </summary>
            <param name="expression">The expression.</param>
            <param name="containingExpression">The containing expression.</param>
            <param name="because">The reason.</param>
        </member>
        <member name="T:MongoDB.Driver.Linq.IMongoQueryProvider">
            <summary>
            An implementation of <see cref="T:System.Linq.IQueryProvider" /> for MongoDB.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.IMongoQueryProvider.LoggedStages">
            <summary>
            Gets the most recently logged stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.IMongoQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes the strongly-typed query represented by a specified expression tree.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">An expression tree that represents a LINQ query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The value that results from executing the specified query.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.IMongoQueryProviderInternal">
            <summary>
            The internal IMongoQueryProvider interface.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.IMongoQueryProviderInternal.CollectionNamespace">
            <summary>
            Gets the collection namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.IMongoQueryProviderInternal.PipelineInputSerializer">
            <summary>
            Gets the pipeline input serializer (the DocumentSerializer for collection queries and NoPipelineInputSerializer for database queries).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.IMongoQueryProviderInternal.GetTranslationOptions">
            <summary>
            Gets the translation options.
            </summary>
            <returns>The translation options.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.IQueryableExtensions">
            <summary>
            Extension methods for IQueryble.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.IQueryableExtensions.GetLoggedStages``1(System.Linq.IQueryable{``0})">
            <summary>
            Gets the most recently logged stages.
            </summary>
            <typeparam name="TSource">The type of the source documents.</typeparam>
            <param name="source">The source.</param>
            <returns>The logged stages.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.IQueryableExtensions.GetMongoQueryProvider(System.Linq.IQueryable)">
            <summary>
            Gets the source's provider cast to an IMongoQueryProvider.
            </summary>
            <param name="source">The source.</param>
            <returns>The MongoDB query provider.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions">
            <summary>
            Extension methods that represent operations for SetWindowFields.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.AddToSet``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns a set.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The set of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Decimal}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Double}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Single}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int32}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Average``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int64}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average value of the numeric values. Average ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Count``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the number of documents in the window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Func{``0,System.Nullable{System.Decimal}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Double}},System.Func{``0,System.Nullable{System.Double}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int32}},System.Func{``0,System.Nullable{System.Int32}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int64}},System.Func{``0,System.Nullable{System.Int64}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovariancePopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Single}},System.Func{``0,System.Nullable{System.Single}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the population covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Decimal}},System.Func{``0,System.Nullable{System.Decimal}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Double}},System.Func{``0,System.Nullable{System.Double}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int32}},System.Func{``0,System.Nullable{System.Int32}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int64}},System.Func{``0,System.Nullable{System.Int64}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.CovarianceSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Single}},System.Func{``0,System.Nullable{System.Single}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sample covariance of two numeric expressions that are evaluated using documents in the partition window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector1">The selector that defines the first expression.</param>
            <param name="selector2">The selector that defines the second expression.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.DenseRank``1(MongoDB.Driver.ISetWindowFieldsPartition{``0})">
            <summary>
            Returns the document position (known as the rank) relative to other documents in the $setWindowFields stage partition.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <returns>The document position.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based derivatives.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based derivatives.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based derivatives.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based derivatives.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Derivative``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the average rate of change within the specified window.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based derivatives.</param>
            <param name="window">The window boundaries.</param>
            <returns>The average rate of change within the specified window.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.DocumentNumber``1(MongoDB.Driver.ISetWindowFieldsPartition{``0})">
            <summary>
            Returns the position of a document (known as the document number) in the $setWindowFields stage partition.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <returns>The document position.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.ExponentialMovingAverage``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the exponential moving average value of the numeric values. Ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="weighting">How to weigh the values when computing the exponential moving average.</param>
            <param name="window">The window boundaries.</param>
            <returns>The exponential moving average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.ExponentialMovingAverage``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the exponential moving average value of the numeric values. Ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="weighting">How to weigh the values when computing the exponential moving average.</param>
            <param name="window">The window boundaries.</param>
            <returns>The exponential moving average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.ExponentialMovingAverage``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the exponential moving average value of the numeric values. Ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="weighting">How to weigh the values when computing the exponential moving average.</param>
            <param name="window">The window boundaries.</param>
            <returns>The exponential moving average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.ExponentialMovingAverage``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the exponential moving average value of the numeric values. Ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="weighting">How to weigh the values when computing the exponential moving average.</param>
            <param name="window">The window boundaries.</param>
            <returns>The exponential moving average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.ExponentialMovingAverage``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the exponential moving average value of the numeric values. Ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="weighting">How to weigh the values when computing the exponential moving average.</param>
            <param name="window">The window boundaries.</param>
            <returns>The exponential moving average of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.First``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the first value.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The first of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based integrals.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based integrals.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based integrals.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based integrals.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Integral``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the approximation of the area under a curve.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="unit">The unit for time based integrals.</param>
            <param name="window">The window boundaries.</param>
            <returns>The approximation of the area under a curve.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Last``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the last value.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The last of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Locf``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the last observation carried forward.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The last observation carried forward.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Max``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the maximum value.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The maximum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Min``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the minimum value.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The minimum of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Push``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns a sequence of values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>A sequence of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Rank``1(MongoDB.Driver.ISetWindowFieldsPartition{``0})">
            <summary>
            Returns the document position (known as the rank) relative to other documents in the $setWindowFields stage partition.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <returns>The document position.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Shift``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the value from an expression applied to a document in a specified position relative to the current document.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="by">The relative position of the document to evaluate the selector on to shift a value to this document.</param>
            <returns>The value from an expression applied to a document in a specified position relative to the current document.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Shift``2(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,``1},System.Int32,``1)">
            <summary>
            Returns the value from an expression applied to a document in a specified position relative to the current document.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <typeparam name="TValue">The type of the selected values.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="by">The relative position of the document to evaluate the selector on to shift a value to this document.</param>
            <param name="defaultValue">The default value to use if the document position is outside the partition.</param>
            <returns>The value from an expression applied to a document in a specified position relative to the current document.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Decimal}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Double}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int32}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int64}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationPopulation``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Single}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the population standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The population standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Decimal}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Double}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int32}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int64}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.StandardDeviationSample``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Single}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Calculates the sample standard deviation of the input values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sample standard deviation of the selected values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Decimal},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Decimal}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Double},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Double}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Single},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Single}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int32},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int32}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Int64},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ISetWindowFieldsPartitionExtensions.Sum``1(MongoDB.Driver.ISetWindowFieldsPartition{``0},System.Func{``0,System.Nullable{System.Int64}},MongoDB.Driver.SetWindowFieldsWindow)">
            <summary>
            Returns the sum of numeric values. $sum ignores non-numeric values.
            </summary>
            <typeparam name="TInput">The type of the input documents in the partition.</typeparam>
            <param name="partition">The partition.</param>
            <param name="selector">The selector that selects a value from the input document.</param>
            <param name="window">The window boundaries.</param>
            <returns>The sum of the values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.EnumUnderlyingTypeSerializer`2.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.EnumUnderlyingTypeSerializer`2.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.IEnumerableSerializerBase`2.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.IEnumerableSerializerBase`2.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.IGroupingSerializer`2.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.IGroupingSerializer`2.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.WrappedValueSerializer`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.Linq.Linq3Implementation.Serializers.WrappedValueSerializer`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Linq.LinqExtensions">
            <summary>
            This static class holds methods that can be used to express MongoDB specific operations in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqExtensions.Inject``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Injects a low level FilterDefinition{TDocument} into a LINQ where clause. Can only be used in LINQ queries.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="filter">The filter.</param>
            <returns>
            Throws an InvalidOperationException if called.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoDBMath">
            <summary>
            Similar to the standard Math class but contains MongoDB specific methods.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoDBMath.DegreesToRadians(System.Double)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The degrees.</param>
            <returns>The radians.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoDBMath.RadiansToDegrees(System.Double)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The radians.</param>
            <returns>The degrees.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoEnumerable">
            <summary>
            Enumerable Extensions for MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.AllElements``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Represents all elements in an array (corresponds to the server's "$[]" update operator).
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A source of values.</param>
            <returns>Only meant to be used in Update specifications.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.AllMatchingElements``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Represents all matching elements in an array when using an array filter (corresponds to the server's "$[identifier]" update operator).
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A source of values.</param>
            <param name="identifier">The name of the identifier in the corresponding array filter.</param>
            <returns>Only meant to be used in Update specifications.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.Bottom``2(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.SortDefinition{``0},System.Func{``0,``1})">
            <summary>
            Returns the bottom result.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort order.</param>
            <param name="selector">The selector.</param>
            <returns>The bottom result.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.BottomN``2(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.SortDefinition{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the bottom n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort order.</param>
            <param name="selector">The selector.</param>
            <param name="n">The number of results to return.</param>
            <returns>The bottom n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.BottomN``3(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.SortDefinition{``0},System.Func{``0,``2},``1,System.Func{``1,System.Int32})">
            <summary>
            Returns the bottom n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort order.</param>
            <param name="selector">The selector.</param>
            <param name="key">The key (needed to infer the key type and to determine the key serializer).</param>
            <param name="n">The number of results to return.</param>
            <returns>The bottom n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.FirstMatchingElement``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Represents the first matching element in an array used in a query (corresponds to the server's "$" update operator).
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A source of values.</param>
            <returns>Only meant to be used in Update specifications.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.FirstN``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the first n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="n">The number of results to return.</param>
            <returns>The first n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.FirstN``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``2},``1,System.Func{``1,System.Int32})">
            <summary>
            Returns the first n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="key">The key (needed to infer the key type and to determine the key serializer).</param>
            <param name="n">The number of results to return.</param>
            <returns>The first n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.LastN``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the last n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="n">The number of results to return.</param>
            <returns>The last n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.LastN``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``2},``1,System.Func{``1,System.Int32})">
            <summary>
            Returns the last n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="key">The key (needed to infer the key type and to determine the key serializer).</param>
            <param name="n">The number of results to return.</param>
            <returns>The last n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.MaxN``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the max n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="n">The number of results to return.</param>
            <returns>The max n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.MaxN``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``2},``1,System.Func{``1,System.Int32})">
            <summary>
            Returns the max n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="key">The key (needed to infer the key type and to determine the key serializer).</param>
            <param name="n">The number of results to return.</param>
            <returns>The max n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.MinN``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the min n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="n">The number of results to return.</param>
            <returns>The min n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.MinN``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``2},``1,System.Func{``1,System.Int32})">
            <summary>
            Returns the min n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="key">The key (needed to infer the key type and to determine the key serializer).</param>
            <param name="n">The number of results to return.</param>
            <returns>The min n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.Top``2(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.SortDefinition{``0},System.Func{``0,``1})">
            <summary>
            Returns the top n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort order.</param>
            <param name="selector">The selector.</param>
            <returns>The top n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.TopN``2(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.SortDefinition{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            Returns the top n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort order.</param>
            <param name="selector">The selector.</param>
            <param name="n">The number of results to return.</param>
            <returns>The top n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.TopN``3(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.SortDefinition{``0},System.Func{``0,``2},``1,System.Func{``1,System.Int32})">
            <summary>
            Returns the top n results.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort order.</param>
            <param name="selector">The selector.</param>
            <param name="key">The key (needed to infer the key type and to determine the key serializer).</param>
            <param name="n">The number of results to return.</param>
            <returns>The top n results.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)">
            <summary>
            Filters a sequence of values based on a predicate and limits the number of results.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The source values.</param>
            <param name="predicate">The predicate.</param>
            <param name="limit">The limit.</param>
            <returns>The filtered results.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoQueryable">
            <summary>
            LINQ extension methods for <see cref="T:System.Linq.IQueryable" />.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence to check for being empty.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if the source sequence contains any elements; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Determines whether any element of a sequence satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence whose elements to test for a condition.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AppendStage``2(System.Linq.IQueryable{``0},MongoDB.Driver.PipelineStageDefinition{``0,``1},MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Appends an arbitrary stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The type of the result values returned by the appended stage.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="stage">The stage to append.</param>
            <param name="resultSerializer">The result serializer.</param>
            <returns>The queryable with a new stage appended.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.As``2(System.Linq.IQueryable{``0},MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Allows the results to be interpreted as a different type. It is up to the caller
            to determine that the new result type is compatible with the actual results.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The new result type for the results.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="resultSerializer">The new serializer (optional, will be looked up if null).</param>
            <returns>
            A new IQueryable with a new result type.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Decimal"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Double"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Single"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int32"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int64"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Decimal" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Double" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Single" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Int32" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Int64" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in the specified sequence that satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the sequence that satisfies the condition in the predicate function.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Densify``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>
            Adds a $densify stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>The densified sequence of values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Densify``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.DensifyRange,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Adds a $densify stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>The densified sequence of values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Documents``1(System.Linq.IQueryable{MongoDB.Driver.NoPipelineInput},``0[])">
            <summary>
            Injects a sequence of documents at the beginning of a pipeline.
            </summary>
            <typeparam name="TDocument"> The type of the documents.</typeparam>
            <param name="source">An IQueryable with no other input.</param>
            <param name="documents">The documents.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1"/> whose elements are the documents.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Documents``1(System.Linq.IQueryable{MongoDB.Driver.NoPipelineInput},System.Collections.Generic.IEnumerable{``0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Injects a sequence of documents at the beginning of a pipeline.
            </summary>
            <typeparam name="TDocument"> The type of the documents.</typeparam>
            <param name="source">An IQueryable with no other input.</param>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1"/> whose elements are the documents.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The first element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The first element in <paramref name="source" /> that passes the test in <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            default(<typeparamref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            default(<typeparamref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.GroupJoin``4(System.Linq.IQueryable{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
            <summary>
            Correlates the elements of two sequences based on key equality and groups the results.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The collection to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <typeparamref name="TResult" /> obtained by performing a grouped join on two sequences.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Join``4(System.Linq.IQueryable{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
            <summary>
            Correlates the elements of two sequences based on matching keys.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from two matching elements.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <typeparamref name="TResult" /> obtained by performing an inner join on two sequences.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in the specified sequence that satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the sequence that satisfies the condition in the predicate function.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the maximum value in a generic <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to determine the maximum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The maximum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
            <summary>
            Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the maximum resulting value.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The type of the value returned by the function represented by <paramref name="selector" />.</typeparam>
            <param name="source">A sequence of values to determine the maximum of.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The maximum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the minimum value in a generic <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to determine the minimum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The minimum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
            <summary>
            Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the minimum resulting value.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The type of the value returned by the function represented by <paramref name="selector" />.</typeparam>
            <param name="source">A sequence of values to determine the minimum of.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The minimum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Sample``1(System.Linq.IQueryable{``0},System.Int64)">
            <summary>
            Returns a sample of the elements in the <paramref name="source"/>.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return a sample of.</param>
            <param name="count">The number of elements in the sample.</param>
            <returns>
            A sample of the elements in the <paramref name="source"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Search``1(System.Linq.IQueryable{``0},MongoDB.Driver.Search.SearchDefinition{``0},MongoDB.Driver.Search.SearchHighlightOptions{``0},System.String,MongoDB.Driver.Search.SearchCountOptions,System.Boolean,System.Boolean)">
            <summary>
            Appends a $search stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="searchDefinition">The search definition.</param>
            <param name="highlight">The highlight options.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <param name="returnStoredSource">
            Flag that specifies whether to perform a full document lookup on the backend database
            or return only stored source fields directly from Atlas Search.
            </param>
            <param name="scoreDetails">
            Flag that specifies whether to return a detailed breakdown
            of the score for each document in the result. 
            </param>
            <returns>The queryable with a new stage appended.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Search``1(System.Linq.IQueryable{``0},MongoDB.Driver.Search.SearchDefinition{``0},MongoDB.Driver.Search.SearchOptions{``0})">
            <summary>
            Appends a $search stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="searchDefinition">The search definition.</param>
            <param name="searchOptions">The search options.</param>
            <returns>The queryable with a new stage appended.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SearchMeta``1(System.Linq.IQueryable{``0},MongoDB.Driver.Search.SearchDefinition{``0},System.String,MongoDB.Driver.Search.SearchCountOptions)">
            <summary>
            Appends a $searchMeta stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="searchDefinition">The search definition.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <returns>The queryable with a new stage appended.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</param>
            <param name="predicate">A function to test an element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence that satisfies the condition in <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence, or default(<typeparamref name="TSource" />) if the sequence contains no elements.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</param>
            <param name="predicate">A function to test an element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence that satisfies the condition in <paramref name="predicate" />, or default(<typeparamref name="TSource" />) if no such element is found.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Skip``1(System.Linq.IQueryable{``0},System.Int64)">
            <summary>
            Bypasses a specified number of elements in a sequence and then returns the
            remaining elements.
            </summary>
            <typeparam name="TSource">The type of the elements of source</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1"/> to return elements from.</param>
            <param name="count">The number of elements to skip before returning the remaining elements.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1"/> that contains elements that occur after the
            specified index in the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Int32})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Nullable{System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Int64})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Nullable{System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Single})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Nullable{System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Double})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Nullable{System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Decimal})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Int32})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Nullable{System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Int64})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Nullable{System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Single})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Nullable{System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Double})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Nullable{System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Decimal})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Decimal"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Double"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Single"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int32"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int64"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Decimal" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Double" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Single" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Int32" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Int64" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Take``1(System.Linq.IQueryable{``0},System.Int64)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="count">The number of elements to return.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1"/> that contains the specified number of elements
            from the start of source.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.ToCursor``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Executes the LINQ query and returns a cursor to the results.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor to the results of executing the LINQ query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.ToCursorAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Executes the LINQ query and returns a cursor to the results.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor to the results of executing the LINQ query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Executes the LINQ query and returns a list of the results.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of the results of executing the LINQ query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.VectorSearch``2(System.Linq.IQueryable{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``0})">
            <summary>
            Appends a $vectorSearch stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The options.</param>
            <returns>
            The queryable with a new stage appended.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.VectorSearch``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``0})">
            <summary>
            Appends a $vectorSearch stage to the LINQ pipeline.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The options.</param>
            <returns>
            The queryable with a new stage appended.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.NullableDateTimeExtensions">
            <summary>
            This static class holds methods that can be used to express MongoDB specific operations in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.NullableDateTimeExtensions.ToString(System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Converts a NullableDateTime value to a string.
            </summary>
            <param name="this">The NullableDateTime value.</param>
            <param name="format">The format string (optional, can be null).</param>
            <param name="timezone">The timezone to use in the returned string (optional, can be null).</param>
            <param name="onNull">The string to return if the NullableDateTime value is null.</param>
            <returns>The NullableDateTime value converted to a string.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.StringExtensions">
            <summary>
            This static class holds methods that can be used to express MongoDB specific operations in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.AnyStringIn(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Returns true if any value in s is present in values (corresponds to the $in filter operator).
            </summary>
            <param name="s">The values to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if any value in s is present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.AnyStringIn(System.Collections.Generic.IEnumerable{System.String},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Returns true if any value in s is present in values (corresponds to the $in filter operator).
            </summary>
            <param name="s">The values to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if any value in s is present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.AnyStringNin(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Returns true if any value in s is not present in values (corresponds to the $nin filter operator).
            </summary>
            <param name="s">The values to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if any value in s is not present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.AnyStringNin(System.Collections.Generic.IEnumerable{System.String},MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Returns true if any value in s is not present in values (corresponds to the $nin filter operator).
            </summary>
            <param name="s">The values to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if any value in s is not present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.IndexOfBytes(System.String,System.String)">
            <summary>
            Searches a string for an occurrence of a substring and returns the UTF-8 byte index (zero-based) of the first occurrence.
            </summary>
            <param name="s">The string.</param>
            <param name="value">The value.</param>
            <returns>The byte index of the first occurrence, or -1 if not found.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.IndexOfBytes(System.String,System.String,System.Int32)">
            <summary>
            Searches a string for an occurrence of a substring and returns the UTF-8 byte index (zero-based) of the first occurrence.
            </summary>
            <param name="s">The string.</param>
            <param name="value">The value.</param>
            <param name="startIndex">The start index.</param>
            <returns>The byte index of the first occurrence, or -1 if not found.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.IndexOfBytes(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Searches a string for an occurrence of a substring and returns the UTF-8 byte index (zero-based) of the first occurrence.
            </summary>
            <param name="s">The string.</param>
            <param name="value">The value.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>The byte index of the first occurrence, or -1 if not found.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.StringIn(System.String,System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Returns true if s is present in values (corresponds to the $in filter operator).
            </summary>
            <param name="s">The value to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if s is present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.StringIn(System.String,MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Returns true if s is present in values (corresponds to the $in filter operator).
            </summary>
            <param name="s">The value to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if s is present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.StringNin(System.String,System.Collections.Generic.IEnumerable{MongoDB.Driver.StringOrRegularExpression})">
            <summary>
            Returns true if s is not present in values (corresponds to the $nin filter operator).
            </summary>
            <param name="s">The value to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if s is not present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.StringNin(System.String,MongoDB.Driver.StringOrRegularExpression[])">
            <summary>
            Returns true if s is not present in values (corresponds to the $nin filter operator).
            </summary>
            <param name="s">The value to test.</param>
            <param name="values">The values to test against.</param>
            <returns>True if s is not present in values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.StrLenBytes(System.String)">
            <summary>
            Returns the number of UTF-8 encoded bytes in the specified string.
            </summary>
            <param name="s">The string.</param>
            <returns>The number of UTF-8 bytes.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.StringExtensions.SubstrBytes(System.String,System.Int32,System.Int32)">
            <summary>
            Returns the number of UTF-8 encoded bytes in the specified string.
            </summary>
            <param name="s">The string.</param>
            <param name="startIndex">The start index.</param>
            <param name="length">The length.</param>
            <returns>The number of UTF-8 bytes.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.WindowTimeUnit">
            <summary>
            The time unit to use in DateTime SetWindowFields windows.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.WindowTimeUnit.Week">
            <summary>
            Weeks.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.WindowTimeUnit.Day">
            <summary>
            Days.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.WindowTimeUnit.Hour">
            <summary>
            Hours.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.WindowTimeUnit.Minute">
            <summary>
            Minutes.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.WindowTimeUnit.Second">
            <summary>
            Seconds.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.WindowTimeUnit.Millisecond">
            <summary>
            Milliseconds.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListCollectionNamesOptions">
            <summary>
            Options for a list collection names operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionNamesOptions.AuthorizedCollections">
            <summary>
            Gets or sets the AuthorizedCollections flag.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionNamesOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionNamesOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListCollectionsOptions">
            <summary>
            Options for a list collections operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionsOptions.BatchSize">
            <summary>
            Gets or sets the batch size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionsOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionsOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListDatabaseNamesOptions">
            <summary>
            Options for a list database names operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabaseNamesOptions.AuthorizedDatabases">
            <summary>
            Gets or sets the AuthorizedDatabases flag.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabaseNamesOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabaseNamesOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListDatabasesOptions">
            <summary>
            Options for a list databases operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabasesOptions.AuthorizedDatabases">
            <summary>
            Gets or sets the AuthorizedDatabases flag.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabasesOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabasesOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabasesOptions.NameOnly">
            <summary>
            Gets or sets the NameOnly flag.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListIndexesOptions">
            <summary>
            Options for a list indexes operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListIndexesOptions.BatchSize">
            <summary>
            Gets or sets the batch size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListIndexesOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceOptions`2">
            <summary>
            Represents the options for a map-reduce operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Finalize">
            <summary>
            Gets or sets the finalize function.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.JavaScriptMode">
            <summary>
            Gets or sets the java script mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.OutputOptions">
            <summary>
            Gets or sets the output options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.ResultSerializer">
            <summary>
            Gets or sets the result serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Scope">
            <summary>
            Gets or sets the scope.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Verbose">
            <summary>
            Gets or sets whether to include timing information.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceOutputOptions">
            <summary>
            Represents the output options for a map-reduce operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOutputOptions.Inline">
            <summary>
            An inline map-reduce output options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Merge(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            A merge map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">The name of the database.</param>
            <param name="sharded">Whether the output collection should be sharded.</param>
            <param name="nonAtomic">Whether the server should not lock the database for the duration of the merge.</param>
            <returns>A merge map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Merge(System.String,System.String)">
            <summary>
            A merge map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">The name of the database.</param>
            <returns>A merge map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Reduce(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            A reduce map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">The name of the database.</param>
            <param name="sharded">Whether the output collection should be sharded.</param>
            <param name="nonAtomic">Whether the server should not lock the database for the duration of the reduce.</param>
            <returns>A reduce map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Reduce(System.String,System.String)">
            <summary>
            A reduce map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">The name of the database.</param>
            <returns>A reduce map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Replace(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            A replace map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="sharded">Whether the output collection should be sharded.</param>
            <returns>A replace map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Replace(System.String,System.String)">
            <summary>
            A replace map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">Name of the database.</param>
            <returns>A replace map-reduce output options.</returns>
        </member>
        <member name="T:MongoDB.Driver.MergeStageWhenMatched">
            <summary>
            The behavior of $merge is a result document and an existing document in the collection
            have the same value for the specified on field(s).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Replace">
            <summary>
            Replace the existing document in the output collection with the matching results document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.KeepExisting">
            <summary>
            Keep the existing document in the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Merge">
            <summary>
            Merge the matching documents (similar to the $mergeObjects operator).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Fail">
            <summary>
            Stop and fail the aggregation. Any changes to the output collection from previous documents are not reverted.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Pipeline">
            <summary>
            Use an aggregation pipeline to update the document in the collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MergeStageWhenNotMatched">
            <summary>
            The behavior of $merge if a result document does not match an existing document in the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenNotMatched.Insert">
            <summary>
            Insert the document into the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenNotMatched.Discard">
            <summary>
            Discard the document; i.e. $merge does not insert the document into the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenNotMatched.Fail">
            <summary>
            Stop and fail the aggregation operation. Any changes to the output collection from previous documents are not reverted.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MergeStageOptions`1">
            <summary>
            Options for the $merge aggregation pipeline stage.
            </summary>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.LetVariables">
            <summary>
            Specifies variables accessible for use in the WhenMatchedPipeline.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.OnFieldNames">
            <summary>
            Field or fields that act as a unique identifier for a document. The identifier determines if a results
            document matches an already existing document in the output collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.OutputSerializer">
            <summary>
            The output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.WhenMatched">
            <summary>
            The behavior of $merge if a result document and an existing document in the collectoin have the
            same value for the specified on field(s).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.WhenMatchedPipeline">
            <summary>
            An aggregation pipeline to update the document in the collection.
            Used when WhenMatched is Pipeline.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.WhenNotMatched">
            <summary>
            The behavior of $merge if a result document does not match an existing document in the output collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoBulkWriteException">
            <summary>
            Represents a bulk write exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoBulkWriteException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="writeErrors">The write errors.</param>
            <param name="writeConcernError">The write concern error.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException.WriteConcernError">
            <summary>
            Gets the write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException.WriteErrors">
            <summary>
            Gets the write errors.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoBulkWriteException`1">
            <summary>
            Represents a bulk write exception.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException`1.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.BulkWriteResult{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoBulkWriteException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="result">The result.</param>
            <param name="writeErrors">The write errors.</param>
            <param name="writeConcernError">The write concern error.</param>
            <param name="unprocessedRequests">The unprocessed requests.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException`1.Result">
            <summary>
            Gets the result of the bulk write operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException`1.UnprocessedRequests">
            <summary>
            Gets the unprocessed requests.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoClient">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoUrl)">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoClient.Cluster">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.MongoClient.Settings">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.BulkWrite(System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.BulkWrite(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.BulkWriteAsync(System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.BulkWriteAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.BulkWriteModel},MongoDB.Driver.ClientBulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabase(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabase(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabaseAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNames(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNames(MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNamesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNamesAsync(MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabaseNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartImplicitSession(System.Threading.CancellationToken)">
            <summary>
            Starts an implicit session.
            </summary>
            <returns>A session.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartImplicitSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Starts an implicit session.
            </summary>
            <returns>A Task whose result is a session.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartSession(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartSessionAsync(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoClientSettings">
            <summary>
            The settings for a MongoDB client.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoClientSettings.Extensions">
            <summary>
            Extension Manager provides a way to configure extensions for the driver.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.#ctor">
            <summary>
            Creates a new instance of MongoClientSettings. Usually you would use a connection string instead.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.AllowInsecureTls">
            <summary>
            Gets or sets whether to relax TLS constraints as much as possible.
            Setting this variable to true will also set SslSettings.CheckCertificateRevocation to false.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ApplicationName">
            <summary>
            Gets or sets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.AutoEncryptionOptions">
            <summary>
            Gets or sets the auto encryption options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Compressors">
            <summary>
            Gets or sets the compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ClusterConfigurator">
            <summary>
            Gets or sets the cluster configurator.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Credential">
            <summary>
            Gets or sets the credential.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.DirectConnection">
            <summary>
            Gets or sets the direct connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.IsFrozen">
            <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.HeartbeatInterval">
            <summary>
            Gets or sets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.HeartbeatTimeout">
            <summary>
            Gets or sets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.IPv6">
            <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.LibraryInfo">
            <summary>
            Gets or sets information about a library using the .NET Driver.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.LoadBalanced">
            <summary>
            Gets or sets whether load balanced mode is used.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.LocalThreshold">
            <summary>
            Gets or sets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.LoggingSettings">
            <summary>
            Gets or sets the logging settings
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnecting">
            <summary>
            Gets or sets the maximum concurrently connecting connections.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadPreference">
            <summary>
            Gets or sets the read preferences.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.RetryReads">
            <summary>
            Gets or sets whether to retry reads.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.RetryWrites">
            <summary>
            Gets or sets whether to retry writes.
            </summary>
            <value>
            The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Scheme">
            <summary>
            Gets or sets the connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ServerApi">
            <summary>
            Gets or sets the server API.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ServerMonitoringMode">
            <summary>
            Gets or sets the server monitoring mode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ServerSelectionTimeout">
            <summary>
            Gets or sets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SrvMaxHosts">
            <summary>
            Limits the number of SRV records used to populate the seedlist
            during initial discovery, as well as the number of additional hosts
            that may be added during SRV polling.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SrvServiceName">
            <summary>
            Gets or sets the SRV service name which modifies the srv URI to look like:
            <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code>
            The default value is "mongodb".
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SslSettings">
            <summary>
            Gets or sets the SSL settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.TranslationOptions">
            <summary>
            Gets or sets the translation options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.UseSsl">
            <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.UseTls">
            <summary>
            Gets or sets a value indicating whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.VerifySslCertificate">
            <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.op_Equality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.op_Inequality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FromConnectionString(System.String)">
            <summary>
            Gets a MongoClientSettings object intialized with values from a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns>A MongoClientSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FromUrl(MongoDB.Driver.MongoUrl)">
            <summary>
            Gets a MongoClientSettings object initialized with values from a MongoURL.
            </summary>
            <param name="url">The MongoURL.</param>
            <returns>A MongoClientSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Equals(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoClientSettings" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.MongoClientSettings" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoClientSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCollectionSettings">
            <summary>
            The settings used to access a collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.#ctor">
            <summary>
            Initializes a new instance of the MongoCollectionSettings class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.AssignIdOnInsert">
            <summary>
            Gets or sets a value indicating whether the driver should assign Id values when missing.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.IsFrozen">
            <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadPreference">
            <summary>
            Gets or sets the read preference to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.SerializerRegistry">
            <summary>
            Gets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Equals(System.Object)">
            <summary>
            Compares two MongoCollectionSettings instances.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCredential">
            <summary>
            Credential to access a MongoDB database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.#ctor(System.String,MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCredential" /> class.
            </summary>
            <param name="mechanism">Mechanism to authenticate with.</param>
            <param name="identity">The identity.</param>
            <param name="evidence">The evidence.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Evidence">
            <summary>
            Gets the evidence.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Identity">
            <summary>
            Gets the identity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Mechanism">
            <summary>
            Gets the mechanism to authenticate with.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.op_Equality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
            <summary>
            Compares two MongoCredentials.
            </summary>
            <param name="lhs">The first MongoCredential.</param>
            <param name="rhs">The other MongoCredential.</param>
            <returns>True if the two MongoCredentials are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.op_Inequality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
            <summary>
            Compares two MongoCredentials.
            </summary>
            <param name="lhs">The first MongoCredential.</param>
            <param name="rhs">The other MongoCredential.</param>
            <returns>True if the two MongoCredentials are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateCredential(System.String,System.String,System.String)">
            <summary>
            Creates a default credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A default credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a default credential.
            Less secure when used in conjunction with SCRAM-SHA-256, due to the need to store the password in a managed
            string in order to SaslPrep it.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A default credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <returns>A credential for GSSAPI.</returns>
            <remarks>This overload is used primarily on linux.</remarks>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.String)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for GSSAPI.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.Security.SecureString)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for GSSAPI.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateOidcCredential(MongoDB.Driver.Authentication.Oidc.IOidcCallback,System.String)">
            <summary>
            Creates a credential used with MONGODB-OIDC.
            </summary>
            <param name="callback">The OIDC callback.</param>
            <param name="principalName">The principal name.</param>
            <returns>The OIDC credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateOidcCredential(System.String,System.String)">
            <summary>
            Creates a credential used with MONGODB-OIDC.
            </summary>
            <param name="environment">The built in environemnt.</param>
            <param name="userName">User name.</param>
            <returns>The OIDC credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoX509Credential(System.String)">
            <summary>
            Creates a credential used with MONGODB-X509.
            </summary>
            <param name="username">The username.</param>
            <returns>A credential for MONGODB-X509.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.String)">
            <summary>
            Creates a PLAIN credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for PLAIN.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a PLAIN credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for PLAIN.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.GetMechanismProperty``1(System.String,``0)">
            <summary>
            Gets the mechanism property.
            </summary>
            <typeparam name="T">The type of the mechanism property.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The mechanism property if one was set; otherwise the default value.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.Equals(MongoDB.Driver.MongoCredential)">
            <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
            <param name="rhs">The other credential.</param>
            <returns>True if the two credentials are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.Equals(System.Object)">
            <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
            <param name="obj">The other credential.</param>
            <returns>True if the two credentials are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.GetHashCode">
            <summary>
            Gets the hashcode for the credential.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.ToString">
            <summary>
            Returns a string representation of the credential.
            </summary>
            <returns>A string representation of the credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.WithMechanismProperty(System.String,System.Object)">
            <summary>
            Creates a new MongoCredential with the specified mechanism property.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>A new MongoCredential with the specified mechanism property.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDatabaseSettings">
            <summary>
            The settings used to access a database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.#ctor">
            <summary>
            Creates a new instance of MongoDatabaseSettings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.IsFrozen">
            <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.SerializerRegistry">
            <summary>
            Gets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Equals(System.Object)">
            <summary>
            Compares two MongoDatabaseSettings instances.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDBRef">
            <summary>
            Represents a DBRef (a convenient way to refer to a document).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates a MongoDBRef.
            </summary>
            <param name="collectionName">The name of the collection that contains the document.</param>
            <param name="id">The Id of the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates a MongoDBRef.
            </summary>
            <param name="databaseName">The name of the database that contains the document.</param>
            <param name="collectionName">The name of the collection that contains the document.</param>
            <param name="id">The Id of the document.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.DatabaseName">
            <summary>
            Gets the name of the database that contains the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.CollectionName">
            <summary>
            Gets the name of the collection that contains the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.Id">
            <summary>
            Gets the Id of the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.op_Inequality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.op_Equality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether this instance and another specified MongoDBRef object have the same value.
            </summary>
            <param name="rhs">The MongoDBRef object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a MongoDBRef object, have the same value.
            </summary>
            <param name="obj">The MongoDBRef object to compare to this instance.</param>
            <returns>True if obj is a MongoDBRef object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.GetHashCode">
            <summary>
            Returns the hash code for this MongoDBRef object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDBRefSerializer">
            <summary>
            Represents a serializer for MongoDBRefs.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDBRefSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.TryGetMemberSerializationInfo(System.String,MongoDB.Bson.Serialization.BsonSerializationInfo@)">
            <summary>
            Tries to get the serialization info for a member.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="serializationInfo">The serialization information.</param>
            <returns>
              <c>true</c> if the serialization info exists; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.MongoDBRef)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoDefaults">
            <summary>
            Default values for various Mongo settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.AssignIdOnInsert">
            <summary>
            Gets or sets whether the driver should assign a value to empty Ids on Insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.AuthenticationMechanism">
            <summary>
            Gets or sets the default authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.LocalThreshold">
            <summary>
            Gets or sets the default local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxBatchCount">
            <summary>
            Gets or sets the maximum batch count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxDocumentSize">
            <summary>
            Gets or sets the max document size
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxMessageLength">
            <summary>
            Gets or sets the max message length.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ServerSelectionTimeout">
            <summary>
            Gets or sets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.TcpReceiveBufferSize">
            <summary>
            Gets or sets the TCP receive buffer size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.TcpSendBufferSize">
            <summary>
            Gets or sets the TCP send buffer size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize, see also WaitQueueSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size (see also WaitQueueMultiple).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoExternalAwsIdentity">
            <summary>
            Represents an identity defined by AWS external credentials.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalAwsIdentity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalAwsIdentity" /> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoExternalIdentity">
            <summary>
            Represents an identity defined outside of mongodb.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoIdentity">
            <summary>
            Represents an identity in MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIdentity" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
            <param name="allowNullUsername">Whether to allow null usernames.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoIdentity.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoIdentity.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.op_Equality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
            <summary>
            Compares two MongoIdentity values.
            </summary>
            <param name="lhs">The first MongoIdentity.</param>
            <param name="rhs">The other MongoIdentity.</param>
            <returns>True if the two MongoIdentity values are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.op_Inequality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
            <summary>
            Compares two MongoIdentity values.
            </summary>
            <param name="lhs">The first MongoIdentity.</param>
            <param name="rhs">The other MongoIdentity.</param>
            <returns>True if the two MongoIdentity values are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.Equals(MongoDB.Driver.MongoIdentity)">
            <summary>
            Determines whether the specified instance is equal to this instance.
            </summary>
            <param name="rhs">The right-hand side.</param>
            <returns>
              <c>true</c> if the specified instance is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.MongoIdentityEvidence">
            <summary>
            Evidence used as proof of a MongoIdentity.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIdentityEvidence" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Equality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Compares two MongoIdentityEvidences.
            </summary>
            <param name="lhs">The first MongoIdentityEvidence.</param>
            <param name="rhs">The other MongoIdentityEvidence.</param>
            <returns>True if the two MongoIdentityEvidences are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Inequality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Compares two MongoIdentityEvidences.
            </summary>
            <param name="lhs">The first MongoIdentityEvidence.</param>
            <param name="rhs">The other MongoIdentityEvidence.</param>
            <returns>True if the two MongoIdentityEvidences are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.MongoIndexManagerBase`1">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IMongoIndexManager`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MongoIndexManagerBase`1.CollectionNamespace">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoIndexManagerBase`1.DocumentSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoIndexManagerBase`1.Settings">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.List(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.List(MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.List(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.List(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.ListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.ListAsync(MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.ListAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.ListAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.MongoInternalIdentity">
            <summary>
            Represents an identity defined inside mongodb.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalIdentity" /> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoOidcIdentity">
            <summary>
            Represents an OIDC identity.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoOidcIdentity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoOidcIdentity" /> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoServerAddress">
            <summary>
            The address of a MongoDB server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
            <param name="host">The server's host name.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
            <param name="host">The server's host name.</param>
            <param name="port">The server's port number.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Parse(System.String)">
            <summary>
            Parses a string representation of a server address.
            </summary>
            <param name="value">The string representation of a server address.</param>
            <returns>A new instance of MongoServerAddress initialized with values parsed from the string.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.TryParse(System.String,MongoDB.Driver.MongoServerAddress@)">
            <summary>
            Tries to parse a string representation of a server address.
            </summary>
            <param name="value">The string representation of a server address.</param>
            <param name="address">The server address (set to null if TryParse fails).</param>
            <returns>True if the string is parsed succesfully.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServerAddress.Host">
            <summary>
            Gets the server's host name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerAddress.Port">
            <summary>
            Gets the server's port number.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.op_Equality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="lhs">The first address.</param>
            <param name="rhs">The other address.</param>
            <returns>True if the two addresses are equal (or both are null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.op_Inequality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="lhs">The first address.</param>
            <param name="rhs">The other address.</param>
            <returns>True if the two addresses are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Equals(MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="rhs">The other server address.</param>
            <returns>True if the two server addresses are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Equals(System.Object)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="obj">The other server address.</param>
            <returns>True if the two server addresses are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.GetHashCode">
            <summary>
            Gets the hash code for this object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.ToString">
            <summary>
            Returns a string representation of the server address.
            </summary>
            <returns>A string representation of the server address.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUrl">
            <summary>
            Represents an immutable URL style connection string. See also MongoUrlBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoUrl.
            </summary>
            <param name="url">The URL containing the settings.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AllowInsecureTls">
            <summary>
            Gets whether to relax TLS constraints as much as possible.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanism">
            <summary>
            Gets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanismProperties">
            <summary>
            Gets the authentication mechanism properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationSource">
            <summary>
            Gets the authentication source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Compressors">
            <summary>
            Gets the compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ConnectTimeout">
            <summary>
            Gets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.DatabaseName">
            <summary>
            Gets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.DirectConnection">
            <summary>
            Gets the direct connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.FSync">
            <summary>
            Gets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.HasAuthenticationSettings">
            <summary>
            Gets a value indicating whether this instance has authentication settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.HeartbeatInterval">
            <summary>
            Gets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.HeartbeatTimeout">
            <summary>
            Gets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.IPv6">
            <summary>
            Gets a value indicating whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.IsResolved">
            <summary>
            Gets a value indicating whether a connection string with scheme MongoDBPlusSrv has been resolved.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Journal">
            <summary>
            Gets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.LoadBalanced">
            <summary>
            Gets or sets whether load balanced mode is used.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.LocalThreshold">
            <summary>
            Gets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnecting">
            <summary>
            Gets the maximum concurrently connecting connections.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionIdleTime">
            <summary>
            Gets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionLifeTime">
            <summary>
            Gets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionPoolSize">
            <summary>
            Gets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MinConnectionPoolSize">
            <summary>
            Gets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReadConcernLevel">
            <summary>
            Gets the read concern level.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReadPreference">
            <summary>
            Gets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReplicaSetName">
            <summary>
            Gets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.RetryReads">
            <summary>
            Gets whether reads will be retried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.RetryWrites">
            <summary>
            Gets whether writes will be retried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Scheme">
            <summary>
            Gets the connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Server">
            <summary>
            Gets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Servers">
            <summary>
            Gets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ServerMonitoringMode">
            <summary>
            Gets the server monitoring mode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ServerSelectionTimeout">
            <summary>
            Gets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SocketTimeout">
            <summary>
            Gets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SrvMaxHosts">
            <summary>
            Limits the number of SRV records used to populate the seedlist
            during initial discovery, as well as the number of additional hosts
            that may be added during SRV polling.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SrvServiceName">
            <summary>
            Gets the SRV service name which modifies the srv URI to look like:
            <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code>
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.TlsDisableCertificateRevocationCheck">
            <summary>
            Gets whether or not to disable checking certificate revocation status during the TLS handshake.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Url">
            <summary>
            Gets the URL (in canonical form).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.UseSsl">
            <summary>
            Gets a value indicating whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.UseTls">
            <summary>
            Gets a value indicating whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.VerifySslCertificate">
            <summary>
            Gets a value indicating whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.W">
            <summary>
            Gets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueMultiple">
            <summary>
            Gets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueSize">
            <summary>
            Gets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueTimeout">
            <summary>
            Gets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WTimeout">
            <summary>
            Gets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.op_Equality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="lhs">The first URL.</param>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.op_Inequality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="lhs">The first URL.</param>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ClearCache">
            <summary>
            Clears the URL cache. When a URL is parsed it is stored in the cache so that it doesn't have to be
            parsed again. There is rarely a need to call this method.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Create(System.String)">
            <summary>
            Creates an instance of MongoUrl (might be an existing existence if the same URL has been used before).
            </summary>
            <param name="url">The URL containing the settings.</param>
            <returns>An instance of MongoUrl.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Equals(MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Equals(System.Object)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="obj">The other URL.</param>
            <returns>True if the two URLs are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetCredential">
            <summary>
            Gets the credential.
            </summary>
            <returns>The credential (or null if the URL has not authentication settings).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Resolve(System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Resolve(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="resolveHosts">Whether to resolve hosts.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ResolveAsync(System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ResolveAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="resolveHosts">Whether to resolve hosts.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ToString">
            <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>The canonical URL.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUrlBuilder">
            <summary>
            Represents URL-style connection strings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor">
            <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
            <param name="url">The initial settings.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AllowInsecureTls">
            <summary>
            Gets or sets whether to relax TLS constraints as much as possible.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ApplicationName">
            <summary>
            Gets or sets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanism">
            <summary>
            Gets or sets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanismProperties">
            <summary>
            Gets or sets the authentication mechanism properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationSource">
            <summary>
            Gets or sets the authentication source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Compressors">
            <summary>
            Gets or sets the compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.DatabaseName">
            <summary>
            Gets or sets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.DirectConnection">
            <summary>
            Gets or sets the direct connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.FSync">
            <summary>
            Gets or sets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.HeartbeatInterval">
            <summary>
            Gets or sets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.HeartbeatTimeout">
            <summary>
            Gets or sets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.IPv6">
            <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Journal">
            <summary>
            Gets or sets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.LoadBalanced">
            <summary>
            Gets or sets whether load balanced mode is used.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.LocalThreshold">
            <summary>
            Gets or sets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnecting">
            <summary>
            Gets or sets the maximum concurrently connecting connections.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReadConcernLevel">
            <summary>
            Gets or sets the read concern level.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.RetryReads">
            <summary>
            Gets or sets whether to retry reads.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.RetryWrites">
            <summary>
            Gets or sets whether to retry writes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Scheme">
            <summary>
            The connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ServerMonitoringMode">
            <summary>
            Gets or sets the server monitoring mode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ServerSelectionTimeout">
            <summary>
            Gets or sets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SrvMaxHosts">
            <summary>
            Limits the number of SRV records used to populate the seedlist
            during initial discovery, as well as the number of additional hosts
            that may be added during SRV polling.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SrvServiceName">
            <summary>
            Gets or sets the SRV service name which modifies the srv URI to look like:
            <code>_{srvServiceName}._tcp.{hostname}.{domainname}</code>
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.TlsDisableCertificateRevocationCheck">
            <summary>
            Gets or sets whether to disable certificate revocation checking during the TLS handshake.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.UseSsl">
            <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.UseTls">
            <summary>
            Gets or sets a value indicating whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.VerifySslCertificate">
            <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.W">
            <summary>
            Gets or sets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WTimeout">
            <summary>
            Gets or sets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.Parse(System.String)">
            <summary>
            Parses a URL and sets all settings to match the URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToMongoUrl">
            <summary>
            Creates a new instance of MongoUrl based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>A new instance of MongoUrl.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToString">
            <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>The canonical URL.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUrlTypeConverter">
            <summary>Implements a <see cref="T:System.ComponentModel.TypeConverter"/> for converting <see cref="T:MongoDB.Driver.MongoUrl"/>.</summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoUrlTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.MongoUtils">
            <summary>
            Various static utility methods.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.Hash(System.String)">
            <summary>
            Gets the MD5 hash of a string.
            </summary>
            <param name="text">The string to get the MD5 hash of.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.TimeSpanFromMicroseconds(System.Int64)">
            <summary>
            Creates a TimeSpan from microseconds.
            </summary>
            <param name="microseconds">The microseconds.</param>
            <returns>The TimeSpan.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.ToCamelCase(System.String)">
            <summary>
            Converts a string to camel case by lower casing the first letter (only the first letter is modified).
            </summary>
            <param name="value">The string to camel case.</param>
            <returns>The camel cased string.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoWriteException">
            <summary>
            Represents a write exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.WriteError,MongoDB.Driver.WriteConcernError,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="writeError">The write error.</param>
            <param name="writeConcernError">The write concern error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoWriteException.WriteConcernError">
            <summary>
            Gets the write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoWriteException.WriteError">
            <summary>
            Gets the write error.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoX509Identity">
            <summary>
            Represents an identity defined by an X509 certificate.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoX509Identity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.Mql">
            <summary>
            Contains methods that can be used to access MongoDB specific functionality in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Mql.DateFromString(System.String)">
            <summary>
            Converts a string to a DateTime using the $dateFromString aggregation operator.
            </summary>
            <param name="dateString">The string.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.DateFromString(System.String,System.String)">
            <summary>
            Converts a string to a DateTime using the $dateFromString aggregation operator.
            </summary>
            <param name="dateString">The string.</param>
            <param name="format">The format string.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.DateFromString(System.String,System.String,System.String)">
            <summary>
            Converts a string to a DateTime using the $dateFromString aggregation operator.
            </summary>
            <param name="dateString">The string.</param>
            <param name="format">The format string.</param>
            <param name="timezone">The time zone.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.DateFromString(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Converts a string to a DateTime using the $dateFromString aggregation operator.
            </summary>
            <param name="dateString">The string.</param>
            <param name="format">The format string.</param>
            <param name="timezone">The time zone.</param>
            <param name="onError">The onError value.</param>
            <param name="onNull">The onNull value.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.Exists``1(``0)">
            <summary>
            Tests whether a field exists.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <returns><c>true</c> if the field exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.Field``2(``0,System.String,MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Gets the value of a field in a document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="document">The document.</param>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.IsMissing``1(``0)">
            <summary>
            Tests whether a field is missing.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <returns><c>true</c> if the field is missing.</returns>
        </member>
        <member name="M:MongoDB.Driver.Mql.IsNullOrMissing``1(``0)">
            <summary>
            Tests whether a field is null or missing.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <returns><c>true</c> if the field is null or missing.</returns>
        </member>
        <member name="T:MongoDB.Driver.NoPipelineInput">
            <summary>
            Represents the void input data type to a pipeline with no input, such as a database aggregation. No actual instances of this type can be created.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.NoPipelineInputSerializer">
            <summary>
            The serializer for NoPipelineInput.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.NoPipelineInputSerializer.Instance">
            <summary>
             Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:MongoDB.Driver.NoPipelineInputSerializer.ValueType">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.NoPipelineInput)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.TryGetMemberSerializationInfo(System.String,MongoDB.Bson.Serialization.BsonSerializationInfo@)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.PasswordEvidence">
            <summary>
            Evidence of a MongoIdentity via a shared secret.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.Security.SecureString)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence" /> class.
            Less secure when used in conjunction with SCRAM-SHA-256, due to the need to store the password in a managed
            string in order to SaslPrep it.
            See <a href="https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst#scram-sha-256">Driver Authentication: SCRAM-SHA-256</a>
            for additional details.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence" /> class.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="P:MongoDB.Driver.PasswordEvidence.SecurePassword">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="rhs">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.ToInsecureString">
            <summary>
            Returns password as decoded string
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RenderedPipelineDefinition`1">
            <summary>
            A rendered pipeline.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedPipelineDefinition`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedPipelineDefinition`1"/> class.
            </summary>
            <param name="documents">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineDefinition`1.Documents">
            <summary>
            Gets the documents.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineDefinition`1.OutputSerializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.PipelineDefinition`2">
            <summary>
            Base class for a pipeline.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.PipelineDefinition`2.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PipelineDefinition`2.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the pipeline.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedPipelineDefinition`1"/></returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.Collections.Generic.IEnumerable{MongoDB.Driver.IPipelineStageDefinition},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.Collections.Generic.IEnumerable{System.String},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(MongoDB.Bson.BsonDocument[])">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.String[])">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(MongoDB.Driver.IPipelineStageDefinition[])~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.IPipelineStageDefinition"/>[] to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(System.Collections.Generic.List{MongoDB.Driver.IPipelineStageDefinition})~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Collections.Generic.List`1"/> to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(MongoDB.Bson.BsonDocument[])~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/>[] to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Collections.Generic.List`1"/> to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2">
            <summary>
            A pipeline composed of instances of <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2"/> class.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.OutputSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.Documents">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.Stages">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.PipelineStagePipelineDefinition`2">
            <summary>
            A pipeline composed of instances of <see cref="T:MongoDB.Driver.IPipelineStageDefinition" />.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.PipelineStagePipelineDefinition`2.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.IPipelineStageDefinition},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PipelineStagePipelineDefinition`2"/> class.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.PipelineStagePipelineDefinition`2.OutputSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.PipelineStagePipelineDefinition`2.Serializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PipelineStagePipelineDefinition`2.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineStagePipelineDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.OptimizingPipelineDefinition`2.OutputSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.OptimizingPipelineDefinition`2.Stages">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.PipelineDefinitionBuilder">
            <summary>
            Extension methods for adding stages to a pipeline.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.AppendStage``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.PipelineStageDefinition{``1,``2},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
            <summary>
            Appends a stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="stage">The stage.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.As``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
            <summary>
            Changes the output type of the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Collections.Generic.IEnumerable{``2},MongoDB.Driver.AggregateBucketOptions{``2})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Collections.Generic.IEnumerable{``2},MongoDB.Driver.ProjectionDefinition{``1,``3},MongoDB.Driver.AggregateBucketOptions{``2})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Collections.Generic.IEnumerable{``2},MongoDB.Driver.AggregateBucketOptions{``2})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Collections.Generic.IEnumerable{``2},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``2,``1},``3}},MongoDB.Driver.AggregateBucketOptions{``2})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Int32,MongoDB.Driver.ProjectionDefinition{``1,``3},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Int32,System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{MongoDB.Driver.AggregateBucketAutoResultId{``2},``1},``3}},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline (this overload can only be used with LINQ3).
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ChangeStream``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ChangeStreamStageOptions)">
            <summary>
            Appends a $changeStream stage to the pipeline.
            Normally you would prefer to use the Watch method of <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            Only use this method if subsequent stages project away the resume token (the _id)
            or you don't want the resulting cursor to automatically resume.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ChangeStreamSplitLargeEvent``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{``0},MongoDB.Driver.ChangeStreamDocument{``0}})">
            <summary>
            Appends a $changeStreamSplitLargeEvent stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Count``2(MongoDB.Driver.PipelineDefinition{``0,``1})">
            <summary>
            Appends a $count stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Densify``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{MongoDB.Driver.FieldDefinition{``1}})">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Densify``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.DensifyRange,MongoDB.Driver.FieldDefinition{``1}[])">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Densify``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``1,System.Object}}})">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Densify``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Driver.DensifyRange,System.Linq.Expressions.Expression{System.Func{``1,System.Object}}[])">
            <summary>
            Appends a $densify stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Documents``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,MongoDB.Driver.NoPipelineInput},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.NoPipelineInput,System.Collections.Generic.IEnumerable{``0}},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends a $documents stage to the pipeline.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Documents``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,MongoDB.Driver.NoPipelineInput},System.Collections.Generic.IEnumerable{``0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends a $documents stage to the pipeline.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``1}},MongoDB.Driver.AggregateFacetOptions{``2})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``1}})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateFacet{``1}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateFacet{``1}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.For``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Used to start creating a pipeline for {TInput} documents.
            </summary>
            <typeparam name="TInput">The type of the output.</typeparam>
            <param name="inputSerializer">The inputSerializer serializer.</param>
            <returns>An empty pipeline.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``9(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``2,``3},MongoDB.Driver.FieldDefinition{``2,``4},MongoDB.Driver.AggregateExpressionDefinition{``1,``5},MongoDB.Driver.FieldDefinition{``8,``7},MongoDB.Driver.FieldDefinition{``6,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``2,``6,``8})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``8(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``2,``3},MongoDB.Driver.FieldDefinition{``2,``4},MongoDB.Driver.AggregateExpressionDefinition{``1,``5},MongoDB.Driver.FieldDefinition{``7,``6},MongoDB.Driver.AggregateGraphLookupOptions{``2,``2,``7})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``2,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{``2,MongoDB.Bson.BsonValue},MongoDB.Driver.AggregateExpressionDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Int32})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``8(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},System.Linq.Expressions.Expression{System.Func{``2,``3}},System.Linq.Expressions.Expression{System.Func{``2,``4}},System.Linq.Expressions.Expression{System.Func{``1,``5}},System.Linq.Expressions.Expression{System.Func{``7,``6}},MongoDB.Driver.AggregateGraphLookupOptions{``2,``2,``7})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``9(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},System.Linq.Expressions.Expression{System.Func{``2,``3}},System.Linq.Expressions.Expression{System.Func{``2,``4}},System.Linq.Expressions.Expression{System.Func{``1,``5}},System.Linq.Expressions.Expression{System.Func{``8,``7}},System.Linq.Expressions.Expression{System.Func{``6,System.Int32}},MongoDB.Driver.AggregateGraphLookupOptions{``2,``6,``8})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Group``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,``2})">
            <summary>
            Appends a $group stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="group">The group projection.</param>
            <returns>A new pipeline with an additional stage.</returns>s
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Group``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="group">The group projection.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Group``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``2,``1},``3}})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="id">The id.</param>
            <param name="group">The group projection.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Limit``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Int64)">
            <summary>
            Appends a $limit stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="limit">The limit.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.FieldDefinition{``2},MongoDB.Driver.FieldDefinition{``3},MongoDB.Driver.AggregateLookupOptions{``2,``3})">
            <summary>
            Appends a $lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Linq.Expressions.Expression{System.Func{``2,System.Object}},System.Linq.Expressions.Expression{System.Func{``3,System.Object}},MongoDB.Driver.AggregateLookupOptions{``2,``3})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``6(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``2,``3},MongoDB.Driver.FieldDefinition{``5,``4},MongoDB.Driver.AggregateLookupOptions{``2,``5})">
            <summary>
            Appends a $lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``6(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``2,``3},System.Linq.Expressions.Expression{System.Func{``5,``4}},MongoDB.Driver.AggregateLookupOptions{``2,``5})">
            <summary>
            Appends a $lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Match``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Appends a $match stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="filter">The filter.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Match``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Appends a match stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="filter">The filter.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.OfType``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
            <summary>
            Appends a $match stage to the pipeline to select documents of a certain type.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A new pipeline with an additional stage.</returns>>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Merge``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.MergeStageOptions{``2})">
            <summary>
            Appends a $merge stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <returns>A new pipeline with an additional stage.</returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Out``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.TimeSeriesOptions)">
            <summary>
            Appends a $out stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputCollection">The output collection.</param>
            <param name="timeSeriesOptions">The time series options.</param>
            <returns>A new pipeline with an additional stage.</returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Project``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,``2})">
            <summary>
            Appends a $project stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="projection">The projection.</param>
            <returns>A new pipeline with an additional stage.</returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Project``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="projection">The projection.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Project``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="projection">The projection.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceRoot``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceRoot``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceWith``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceWith``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Sample``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Int64)">
            <summary>
            Appends a $sample stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="size">The sample size.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Search``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.Search.SearchDefinition{``1},MongoDB.Driver.Search.SearchHighlightOptions{``1},System.String,MongoDB.Driver.Search.SearchCountOptions,System.Boolean,System.Boolean)">
            <summary>
            Appends a $search stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="searchDefinition">The search definition.</param>
            <param name="highlight">The highlight options.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <param name="returnStoredSource">
            Flag that specifies whether to perform a full document lookup on the backend database
            or return only stored source fields directly from Atlas Search.
            </param>
            <param name="scoreDetails">
            Flag that specifies whether to return a detailed breakdown
            of the score for each document in the result.
            </param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Search``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.Search.SearchDefinition{``1},MongoDB.Driver.Search.SearchOptions{``1})">
            <summary>
            Appends a $search stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="searchDefinition">The search definition.</param>
            <param name="searchOptions">The search options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SearchMeta``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.Search.SearchDefinition{``1},System.String,MongoDB.Driver.Search.SearchCountOptions)">
            <summary>
            Appends a $searchMeta stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="query">The search definition.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Set``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.SetFieldDefinitions{``1})">
            <summary>
            Appends a $set stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="fields">The fields to set.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Set``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            Appends a $set stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <typeparam name="TFields">The type of object specifying the fields to set.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="fields">The fields to set.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SetWindowFields``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{``1},``2})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="output">The window fields expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SetWindowFields``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{``1},``3})">
            <summary>
            Appends a $setWindowFields stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SetWindowFields``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},MongoDB.Driver.SortDefinition{``1},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{``1},``3})">
            <summary>
            Appends a $setWindowFields stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="sortBy">The sortBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SetWindowFields``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``1},``3}})">
            <summary>
            Appends a $setWindowFields stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="output">The window fields expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SetWindowFields``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``1},``3}})">
            <summary>
            Appends a $setWindowFields stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SetWindowFields``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},MongoDB.Driver.SortDefinition{``1},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``1},``3}})">
            <summary>
            Appends a $setWindowFields stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="sortBy">The sortBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Skip``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Int64)">
            <summary>
            Appends a $skip stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="skip">The number of documents to skip.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Sort``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.SortDefinition{``1})">
            <summary>
            Appends a $sort stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="sort">The sort definition.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SortByCount``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2})">
            <summary>
            Appends a $sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="value">The value expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SortByCount``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            Appends a sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="value">The value expression.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.UnionWith``3(MongoDB.Driver.PipelineDefinition{``0,``2},MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.PipelineDefinition{``1,``2})">
            <summary>
            Appends a $unionWith stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TWith">The type of the with collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="withCollection">The with collection.</param>
            <param name="withPipeline">The with pipeline.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateUnwindOptions{``2})">
            <summary>
            Appends an $unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Driver.AggregateUnwindOptions{``2})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.VectorSearch``3(MongoDB.Driver.PipelineDefinition{``0,``2},System.Linq.Expressions.Expression{System.Func{``2,``1}},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``2})">
            <summary>
            Appends a $vectorSearch stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The vector search options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.VectorSearch``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``1})">
            <summary>
            Appends a $vectorSearch stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The vector search options.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="T:MongoDB.Driver.AppendedStagePipelineDefinition`3">
            <summary>
            Represents a pipeline consisting of an existing pipeline with one additional stage appended.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AppendedStagePipelineDefinition`3.#ctor(MongoDB.Driver.PipelineDefinition{`0,`1},MongoDB.Driver.PipelineStageDefinition{`1,`2},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AppendedStagePipelineDefinition`3" /> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="stage">The stage.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.AppendedStagePipelineDefinition`3.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.AppendedStagePipelineDefinition`3.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.AppendedStagePipelineDefinition`3.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.EmptyPipelineDefinition`1">
            <summary>
            Represents an empty pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.EmptyPipelineDefinition`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.EmptyPipelineDefinition`1"/> class.
            </summary>
            <param name="inputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.EmptyPipelineDefinition`1.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.EmptyPipelineDefinition`1.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.EmptyPipelineDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.PrependedStagePipelineDefinition`3">
            <summary>
            Represents a pipeline consisting of an existing pipeline with one additional stage prepended.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.PrependedStagePipelineDefinition`3.#ctor(MongoDB.Driver.PipelineStageDefinition{`0,`1},MongoDB.Driver.PipelineDefinition{`1,`2},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PrependedStagePipelineDefinition`3" /> class.
            </summary>
            <param name="stage">The stage.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.PrependedStagePipelineDefinition`3.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.PrependedStagePipelineDefinition`3.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.PrependedStagePipelineDefinition`3.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3">
            <summary>
            Represents a pipeline with the output serializer replaced.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <seealso cref="T:MongoDB.Driver.PipelineDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.#ctor(MongoDB.Driver.PipelineDefinition{`0,`1},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.IRenderedPipelineStageDefinition">
            <summary>
            A rendered pipeline stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.OperatorName">
            <summary>
            Gets the name of the pipeline operator.
            </summary>
            <value>
            The name of the pipeline operator.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.Documents">
            <summary>
            Gets the documents (usually one but could be more).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RenderedPipelineStageDefinition`1">
            <summary>
            A rendered pipeline stage.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedPipelineStageDefinition`1.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedPipelineStageDefinition`1"/> class.
            </summary>
            <param name="operatorName">Name of the pipeline operator.</param>
            <param name="document">The document.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.RenderedPipelineStageDefinition`1.#ctor(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedPipelineStageDefinition`1"/> class.
            </summary>
            <param name="operatorName">Name of the pipeline operator.</param>
            <param name="documents">The documents.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.Document">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.Documents">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.OperatorName">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.MongoDB#Driver#IRenderedPipelineStageDefinition#OutputSerializer">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.IPipelineStageDefinition">
            <summary>
            A pipeline stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IPipelineStageDefinition.InputType">
            <summary>
            Gets the type of the input.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IPipelineStageDefinition.OperatorName">
            <summary>
            Gets the name of the pipeline operator.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IPipelineStageDefinition.OutputType">
            <summary>
            Gets the type of the output.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IPipelineStageDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the specified document serializer.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>An <see cref="T:MongoDB.Driver.IRenderedPipelineStageDefinition" /></returns>
        </member>
        <member name="M:MongoDB.Driver.IPipelineStageDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Renders the specified document serializer.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>An <see cref="T:MongoDB.Driver.IRenderedPipelineStageDefinition" /></returns>
        </member>
        <member name="M:MongoDB.Driver.IPipelineStageDefinition.ToString(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.PipelineStageDefinition`2">
            <summary>
            Base class for pipeline stages.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.PipelineStageDefinition`2.InputType">
            <summary>
            Gets the type of the input.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PipelineStageDefinition`2.OperatorName">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.PipelineStageDefinition`2.OutputType">
            <summary>
            Gets the type of the output.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the specified document serializer.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedPipelineStageDefinition`1" /></returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.PipelineStageDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.PipelineStageDefinition`2"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.op_Implicit(System.String)~MongoDB.Driver.PipelineStageDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.PipelineStageDefinition`2" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.MongoDB#Driver#IPipelineStageDefinition#Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.MongoDB#Driver#IPipelineStageDefinition#Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Driver.ExpressionTranslationOptions)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based stage.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2.OperatorName">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonPipelineStageDefinition`2">
            <summary>
            A JSON <see cref="T:System.String"/> based pipeline stage.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonPipelineStageDefinition`2.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonPipelineStageDefinition`2" /> class.
            </summary>
            <param name="json">The json.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonPipelineStageDefinition`2.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.JsonPipelineStageDefinition`2.OperatorName">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.JsonPipelineStageDefinition`2.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonPipelineStageDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.PipelineStageDefinitionBuilder">
            <summary>
            Methods for building pipeline stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``3(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.ProjectionDefinition{``0,``2},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``3(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Int32,MongoDB.Driver.ProjectionDefinition{``0,``2},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{MongoDB.Driver.AggregateBucketAutoResultId{``1},``0},``2}},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Creates a $bucketAuto stage (this overload can only be used with LINQ3).
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the output documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ChangeStream``1(MongoDB.Driver.ChangeStreamStageOptions)">
            <summary>
            Creates a $changeStream stage.
            Normally you would prefer to use the Watch method of <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            Only use this method if subsequent stages project away the resume token (the _id)
            or you don't want the resulting cursor to automatically resume.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ChangeStreamSplitLargeEvent``1">
            <summary>
            Creates a $changeStreamSplitLargeEvent stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Count``1">
            <summary>
            Creates a $count stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Densify``1(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{MongoDB.Driver.FieldDefinition{``0}})">
            <summary>
            Creates a $densify stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Densify``1(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.DensifyRange,MongoDB.Driver.FieldDefinition{``0}[])">
            <summary>
            Creates a $densify stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Densify``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.DensifyRange,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>
            Creates a $densify stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Densify``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.DensifyRange,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Creates a $densify stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field.</param>
            <param name="range">The range.</param>
            <param name="partitionByFields">The partition by fields.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Documents``1(MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.NoPipelineInput,System.Collections.Generic.IEnumerable{``0}},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Creates a $documents stage.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Documents``1(System.Collections.Generic.IEnumerable{``0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Creates a $documents stage.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <param name="documents">The documents.</param>
            <param name="documentSerializer">The document serializer.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``2(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``0}},MongoDB.Driver.AggregateFacetOptions{``1})">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="facets">The facets.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``1(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``0}})">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="facets">The facets.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``1(MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="facets">The facets.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``2(MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="facets">The facets.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``8(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``1,``3},MongoDB.Driver.AggregateExpressionDefinition{``0,``4},MongoDB.Driver.FieldDefinition{``7,``6},MongoDB.Driver.FieldDefinition{``5,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``1,``5,``7})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``7(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``1,``3},MongoDB.Driver.AggregateExpressionDefinition{``0,``4},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``2(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.AggregateExpressionDefinition{``0,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Int32})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``7(MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``6,``5}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``8(MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``7,``6}},System.Linq.Expressions.Expression{System.Func{``5,System.Int32}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``5,``7})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Group``2(MongoDB.Driver.ProjectionDefinition{``0,``1})">
            <summary>
            Creates a $group stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="group">The group projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Group``1(MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Creates a $group stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="group">The group projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Group``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}})">
            <summary>
            Creates a $group stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="value">The value field.</param>
            <param name="group">The group projection.</param>
            <returns>The stage.</returns>
            <remarks>This method can only be used with LINQ2 but that can't be verified until Render is called.</remarks>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Limit``1(System.Int64)">
            <summary>
            Creates a $limit stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="limit">The limit.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``3(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.FieldDefinition{``2},MongoDB.Driver.AggregateLookupOptions{``1,``2})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``3(MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Linq.Expressions.Expression{System.Func{``2,System.Object}},MongoDB.Driver.AggregateLookupOptions{``1,``2})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``5(MongoDB.Driver.IMongoCollection{``1},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``4,``3},MongoDB.Driver.AggregateLookupOptions{``1,``4})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``5(MongoDB.Driver.IMongoCollection{``1},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``1,``2},System.Linq.Expressions.Expression{System.Func{``4,``3}},MongoDB.Driver.AggregateLookupOptions{``1,``4})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Match``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a $match stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="filter">The filter.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Match``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a $match stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="filter">The filter.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Merge``2(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.MergeStageOptions{``1})">
            <summary>
            Creates a $merge stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.OfType``2(MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Create a $match stage that select documents of a sub type.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="outputSerializer">The output serializer.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Out``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.TimeSeriesOptions)">
            <summary>
            Creates a $out stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="timeSeriesOptions">The time series options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Project``2(MongoDB.Driver.ProjectionDefinition{``0,``1})">
            <summary>
            Creates a $project stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Project``1(MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Creates a $project stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Project``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Creates a $project stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Search``1(MongoDB.Driver.Search.SearchDefinition{``0},MongoDB.Driver.Search.SearchHighlightOptions{``0},System.String,MongoDB.Driver.Search.SearchCountOptions,System.Boolean,System.Boolean)">
            <summary>
            Creates a $search stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="searchDefinition">The search definition.</param>
            <param name="highlight">The highlight options.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <param name="returnStoredSource">
            Flag that specifies whether to perform a full document lookup on the backend database
            or return only stored source fields directly from Atlas Search.
            </param>
            <param name="scoreDetails">
            Flag that specifies whether to return a detailed breakdown
            of the score for each document in the result.
            </param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Search``1(MongoDB.Driver.Search.SearchDefinition{``0},MongoDB.Driver.Search.SearchOptions{``0})">
            <summary>
            Creates a $search stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="searchDefinition">The search definition.</param>
            <param name="searchOptions">The search options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SearchMeta``1(MongoDB.Driver.Search.SearchDefinition{``0},System.String,MongoDB.Driver.Search.SearchCountOptions)">
            <summary>
            Creates a $searchMeta stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="searchDefinition">The search definition.</param>
            <param name="indexName">The index name.</param>
            <param name="count">The count options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceRoot``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1})">
            <summary>
            Creates a $replaceRoot stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceRoot``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Creates a $replaceRoot stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceWith``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1})">
            <summary>
            Creates a $replaceWith stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceWith``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Creates a $replaceWith stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Set``1(MongoDB.Driver.SetFieldDefinitions{``0})">
            <summary>
            Creates a $set stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="fields">The fields to set.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Set``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Creates a $set stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFields">The type of object specifying the fields to set.</typeparam>
            <param name="fields">The fields to set.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SetWindowFields``2(MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{``0},``1})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="output">The window fields expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SetWindowFields``3(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{``0},``2})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SetWindowFields``3(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},MongoDB.Driver.SortDefinition{``0},MongoDB.Driver.AggregateExpressionDefinition{MongoDB.Driver.ISetWindowFieldsPartition{``0},``2})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="sortBy">The sortBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SetWindowFields``2(System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``0},``1}})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="output">The window fields expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SetWindowFields``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``0},``2}})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SetWindowFields``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.SortDefinition{``0},System.Linq.Expressions.Expression{System.Func{MongoDB.Driver.ISetWindowFieldsPartition{``0},``2}})">
            <summary>
            Create a $setWindowFields stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TPartitionBy">The type of the value to partition by.</typeparam>
            <typeparam name="TWindowFields">The type of the added window fields.</typeparam>
            <param name="partitionBy">The partitionBy expression.</param>
            <param name="sortBy">The sortBy expression.</param>
            <param name="output">The window fields expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Skip``1(System.Int64)">
            <summary>
            Creates a $skip stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="skip">The skip.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Sort``1(MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a $sort stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="sort">The sort.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Sample``1(System.Int64)">
            <summary>
            Creates a $sample stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="size">The size.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SortByCount``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1})">
            <summary>
            Creates a $sortByCount stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="value">The value expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SortByCount``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Creates a $sortByCount stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="value">The value.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.UnionWith``2(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.PipelineDefinition{``1,``0})">
            <summary>
            Creates a $unionWith stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TWith">The type of the with collection documents.</typeparam>
            <param name="withCollection">The with collection.</param>
            <param name="withPipeline">The with pipeline.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``2(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.AggregateUnwindOptions{``1})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="field">The field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``1(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.AggregateUnwindOptions{``1})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.VectorSearch``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``0})">
            <summary>
            Creates a $vectorSearch stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.VectorSearch``1(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.QueryVector,System.Int32,MongoDB.Driver.VectorSearchOptions{``0})">
            <summary>
            Creates a $vectorSearch stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field.</param>
            <param name="queryVector">The query vector.</param>
            <param name="limit">The limit.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="T:MongoDB.Driver.RenderedProjectionDefinition`1">
            <summary>
            A rendered projection.
            </summary>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedProjectionDefinition`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1" /> class.
            </summary>
            <param name="document">The document.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedProjectionDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedProjectionDefinition`1.ProjectionSerializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinition`1">
            <summary>
            Base class for projections whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the projection to a <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.ProjectionDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.ProjectionDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`1.op_Implicit(System.String)~MongoDB.Driver.ProjectionDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinition`2">
            <summary>
            Base class for projections.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the projection to a <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.ProjectionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.op_Implicit(System.String)~MongoDB.Driver.ProjectionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.op_Implicit(MongoDB.Driver.ProjectionDefinition{`0})~MongoDB.Driver.ProjectionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.ProjectionDefinition`1"/> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2"/>.
            </summary>
            <param name="projection">The projection.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentProjectionDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument" /> based projection whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentProjectionDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentProjectionDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentProjectionDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument" /> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`2.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentProjectionDefinition`2"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentProjectionDefinition`2.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentProjectionDefinition`2.ProjectionSerializer">
            <summary>
            Gets the projection serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FindExpressionProjectionDefinition`2">
            <summary>
            A find <see cref="P:MongoDB.Driver.FindExpressionProjectionDefinition`2.Expression" /> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FindExpressionProjectionDefinition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindExpressionProjectionDefinition`2" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.FindExpressionProjectionDefinition`2.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FindExpressionProjectionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonProjectionDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based projection whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonProjectionDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonProjectionDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonProjectionDefinition`2">
            <summary>
            A JSON <see cref="T:System.String" /> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`2.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentSortDefinition`1" /> class.
            </summary>
            <param name="json">The json.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonProjectionDefinition`2.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.JsonProjectionDefinition`2.ProjectionSerializer">
            <summary>
            Gets the projection serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectProjectionDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectProjectionDefinition`1.Object"/> based projection whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectProjectionDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectProjectionDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectProjectionDefinition`2">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectProjectionDefinition`2.Object"/> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`2.#ctor(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectProjectionDefinition`2" /> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectProjectionDefinition`2.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ObjectProjectionDefinition`2.ProjectionSerializer">
            <summary>
            Gets the projection serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2">
            <summary>
            A client side only projection that is implemented solely by deserializing using a different serializer.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2"/> class.
            </summary>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
            <value>
            The result serializer.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinitionExtensions">
            <summary>
            Extension methods for projections.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.ElemMatch``2(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing projection with a projection that filters the contents of an array.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.ElemMatch``2(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing projection with a projection that filters the contents of an array.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.ElemMatch``2(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Combines an existing projection with a projection that filters the contents of an array.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Exclude``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a projection that excludes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Exclude``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a projection that excludes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Include``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a projection that includes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Include``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a projection that includes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Meta``1(MongoDB.Driver.ProjectionDefinition{``0},System.String,System.String)">
            <summary>
            Combines an existing projection with a meta projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="metaFieldName">The meta field name.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchHighlights``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a search highlights projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchHighlights``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a search highlights projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchScore``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a search score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchScore``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a search score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchScoreDetails``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a search score details projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchScoreDetails``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a search score details projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchSequenceToken``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a search sequence token projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaSearchSequenceToken``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a search sequence token projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaTextScore``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a text score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaTextScore``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a text score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaVectorSearchScore``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a VectorSearch score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaVectorSearchScore``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a VectorSearch score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.SearchMeta``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a search metadata projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.SearchMeta``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a search metadata projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Slice``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Int32)">
            <summary>
            Combines an existing projection with an array slice projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="limit">The limit.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Slice``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Int32,System.Int32)">
            <summary>
            Combines an existing projection with an array slice projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Slice``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32)">
            <summary>
            Combines an existing projection with an array slice projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="limit">The limit.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Slice``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Int32)">
            <summary>
            Combines an existing projection with an array slice projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinitionBuilder`1">
            <summary>
            A builder for a projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Creates a client side projection that is implemented solely by using a different serializer.
            </summary>
            <typeparam name="TProjection">The type of the projection.</typeparam>
            <param name="projectionSerializer">The projection serializer.</param>
            <returns>A client side deserialization projection.</returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Combine(MongoDB.Driver.ProjectionDefinition{`0}[])">
            <summary>
            Combines the specified projections.
            </summary>
            <param name="projections">The projections.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.ProjectionDefinition{`0}})">
            <summary>
            Combines the specified projections.
            </summary>
            <param name="projections">The projections.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.ElemMatch``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a projection that filters the contents of an array.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            An array filtering projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a projection that filters the contents of an array.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            An array filtering projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a projection that filters the contents of an array.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            An array filtering projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Exclude(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a projection that excludes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An exclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a projection that excludes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An exclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Expression``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a projection based on the expression.
            </summary>
            <typeparam name="TProjection">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An expression projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Include(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a projection that includes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An inclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a projection that includes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An inclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Meta(MongoDB.Driver.FieldDefinition{`0},System.String)">
            <summary>
            Creates a meta projection.
            </summary>
            <param name="field">The field.</param>
            <param name="metaFieldName">The meta field name.</param>
            <returns>
            A meta projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchHighlights(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search highlights projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search highlights projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchHighlights``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a search highlights projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search highlights projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchScore(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchScore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a search score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchScoreDetails(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search score details projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search score details projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchScoreDetails``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a search score details projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search score details projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchSequenceToken(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search sequence token projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search sequence token projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaSearchSequenceToken``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a search sequence token projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search sequence token projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaTextScore(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a text score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A text score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaTextScore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a text score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A text score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaVectorSearchScore(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a VectorSearch score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A VectorSearch score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaVectorSearchScore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a VectorSearch score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A VectorSearch score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.SearchMeta(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search metadata projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search metadata projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.SearchMeta(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a search metadata projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A search metadata projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Slice(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates an array slice projection.
            </summary>
            <param name="field">The field.</param>
            <param name="limit">The limit.</param>
            <returns>
            An array slice projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Slice(MongoDB.Driver.FieldDefinition{`0},System.Int32,System.Int32)">
            <summary>
            Creates an array slice projection.
            </summary>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            An array slice projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Slice(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates an array slice projection.
            </summary>
            <param name="field">The field.</param>
            <param name="limit">The limit.</param>
            <returns>
            An array slice projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Slice(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Int32)">
            <summary>
            Creates an array slice projection.
            </summary>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            An array slice projection.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.QueryVector">
            <summary>
            Vector search query vector.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.QueryVector.Array">
            <summary>
            Gets the underlying BSON array.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.#ctor(System.ReadOnlyMemory{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.QueryVector" /> class.
            </summary>
            <param name="readOnlyMemory">The memory.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.#ctor(System.ReadOnlyMemory{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.QueryVector" /> class.
            </summary>
            <param name="readOnlyMemory">The memory.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.#ctor(System.ReadOnlyMemory{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.QueryVector" /> class.
            </summary>
            <param name="readOnlyMemory">The memory.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.op_Implicit(System.Double[])~MongoDB.Driver.QueryVector">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double"/>[] to <see cref="T:MongoDB.Driver.QueryVector"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.op_Implicit(System.ReadOnlyMemory{System.Double})~MongoDB.Driver.QueryVector">
            <summary>
            Performs an implicit conversion from a of <see cref="T:System.ReadOnlyMemory`1"/> to <see cref="T:MongoDB.Driver.QueryVector"/>.
            </summary>
            <param name="readOnlyMemory">The readOnlyMemory.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.op_Implicit(System.Single[])~MongoDB.Driver.QueryVector">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/>[] to <see cref="T:MongoDB.Driver.QueryVector"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.op_Implicit(System.ReadOnlyMemory{System.Single})~MongoDB.Driver.QueryVector">
            <summary>
            Performs an implicit conversion from a of <see cref="T:System.ReadOnlyMemory`1"/> to <see cref="T:MongoDB.Driver.QueryVector"/>.
            </summary>
            <param name="readOnlyMemory">The readOnlyMemory.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.op_Implicit(System.Int32[])~MongoDB.Driver.QueryVector">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/>[] to <see cref="T:MongoDB.Driver.QueryVector"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.QueryVector.op_Implicit(System.ReadOnlyMemory{System.Int32})~MongoDB.Driver.QueryVector">
            <summary>
            Performs an implicit conversion from a of <see cref="T:System.ReadOnlyMemory`1"/> to <see cref="T:MongoDB.Driver.QueryVector"/>.
            </summary>
            <param name="readOnlyMemory">The readOnlyMemory.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.RangeWindow">
            <summary>
            Represents a range window for a SetWindowFields window method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RangeWindow.Current">
            <summary>
            Returns a "current" range window boundary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RangeWindow.Unbounded">
            <summary>
            Returns an "unbounded" range window boundary.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create``1(``0,``0)">
            <summary>
            Creates a range window.
            </summary>
            <typeparam name="TValue">The type of the boundary conditions.</typeparam>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create``1(``0,MongoDB.Driver.KeywordRangeWindowBoundary)">
            <summary>
            Creates a range window.
            </summary>
            <typeparam name="TValue">The type of the lower boundary condition.</typeparam>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create``1(MongoDB.Driver.KeywordRangeWindowBoundary,``0)">
            <summary>
            Creates a range window.
            </summary>
            <typeparam name="TValue">The type of the upper boundary condition.</typeparam>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create(MongoDB.Driver.TimeRangeWindowBoundary,MongoDB.Driver.TimeRangeWindowBoundary)">
            <summary>
            Creates a range window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create(MongoDB.Driver.TimeRangeWindowBoundary,MongoDB.Driver.KeywordRangeWindowBoundary)">
            <summary>
            Creates a range window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create(MongoDB.Driver.KeywordRangeWindowBoundary,MongoDB.Driver.TimeRangeWindowBoundary)">
            <summary>
            Creates a range window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Create(MongoDB.Driver.KeywordRangeWindowBoundary,MongoDB.Driver.KeywordRangeWindowBoundary)">
            <summary>
            Creates a range window.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
            <returns>A range window.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Days(System.Int32)">
            <summary>
            Returns a time range in days.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Hours(System.Int32)">
            <summary>
            Returns a time range in hours.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Milliseconds(System.Int32)">
            <summary>
            Returns a time range in milliseconds.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Minutes(System.Int32)">
            <summary>
            Returns a time range in minutes.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Months(System.Int32)">
            <summary>
            Returns a time range in months.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Quarters(System.Int32)">
            <summary>
            Returns a time range in quarters.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Seconds(System.Int32)">
            <summary>
            Returns a time range in seconds.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Weeks(System.Int32)">
            <summary>
            Returns a time range in weeks.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.Years(System.Int32)">
            <summary>
            Returns a time range in years.
            </summary>
            <param name="value">The value.</param>
            <returns>A time range.</returns>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.#ctor(MongoDB.Driver.RangeWindowBoundary,MongoDB.Driver.RangeWindowBoundary)">
            <summary>
            Initializes an instance of RangeWindow.
            </summary>
            <param name="lowerBoundary">The lower boundary.</param>
            <param name="upperBoundary">The upper boundary.</param>
        </member>
        <member name="P:MongoDB.Driver.RangeWindow.LowerBoundary">
            <summary>
            The lower boundary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RangeWindow.UpperBoundary">
            <summary>
            The upper boundary.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.RangeWindow.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.RangeWindowBoundary">
            <summary>
            Represents a boundary for a range window in SetWindowFields.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.KeywordRangeWindowBoundary">
            <summary>
            Represents a keyword boundary for a range window in SetWindowFields (i.e. "unbounded" or "current").
            </summary>
        </member>
        <member name="P:MongoDB.Driver.KeywordRangeWindowBoundary.Keyword">
            <summary>
            The keyword.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.KeywordRangeWindowBoundary.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ValueRangeWindowBoundary">
            <summary>
            Represents a value boundary for a document window in SetWindowFields.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ValueRangeWindowBoundary`1">
            <summary>
            Represents a value boundary for a range window in SetWindowFields.
            </summary>
            <typeparam name="TValue">The type of the range window boundary.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ValueRangeWindowBoundary`1.#ctor(`0)">
            <summary>
            Initializes a new instance of ValueRangeWindowBoundary.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Driver.ValueRangeWindowBoundary`1.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ValueRangeWindowBoundary`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.TimeRangeWindowBoundary">
            <summary>
            Represents a time boundary for a range window in SetWindowFields.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TimeRangeWindowBoundary.Unit">
            <summary>
            The unit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TimeRangeWindowBoundary.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.TimeRangeWindowBoundary.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.RenameCollectionOptions">
            <summary>
            Options for renaming a collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenameCollectionOptions.DropTarget">
            <summary>
            Gets or sets a value indicating whether to drop the target collection first if it already exists.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.PathRenderArgs">
            <summary>
            Encapsulates settings needed for path rendering.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PathRenderArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Encapsulates settings needed for path rendering.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RenderArgs`1">
            <summary>
            Encapsulates settings needed for rendering Builder definitions.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderArgs`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Driver.PathRenderArgs,System.Boolean,System.Boolean,System.Boolean,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderArgs`1"/> record.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <param name="pathRenderArgs">The path render arguments.</param>
            <param name="renderDollarForm">Value that specifies whether full dollar for should be rendered.</param>
            <param name="renderForFind">Value that specifies whether rendering a find operation.</param>
            <param name="renderForElemMatch">Value that specifies whether rendering an $elemMatch.</param>
            <param name="translationOptions">The translation options.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.DocumentSerializer">
            <summary>
            Gets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.RenderForElemMatch">
            <summary>
            Gets the value indicating whether Render is being called for ElemMatch.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.RenderForFind">
            <summary>
            Gets the value indicating whether Render is being called for Find.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.PathRenderArgs">
            <summary>
            Gets the path render arguments.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.RenderDollarForm">
            <summary>
            Gets the value indicating whether full dollar form should be rendered.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.SerializerRegistry">
            <summary>
            Gets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderArgs`1.TranslationOptions">
            <summary>
            Gets the translation options used when translation Expressions to MQL.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.RenderArgs`1.GetSerializer``1">
            <summary>
            Returns <see cref="P:MongoDB.Driver.RenderArgs`1.DocumentSerializer"/> if it implements <c>IBsonSerializer{T}</c>
            or resolves <c>IBsonSerializer{T}</c> from <see cref="P:MongoDB.Driver.RenderArgs`1.SerializerRegistry"/>.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.RenderArgs`1.WithNewDocumentType``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Creates a new RenderArgs with new document type {TNewDocument}
            </summary>
            <param name="serializer">The new serializer.</param>
            <returns>
            A new RenderArgs{TNewDocument} instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneModel`1">
            <summary>
            Model for replacing a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOneModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Replacement">
            <summary>
            Gets the replacement.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Sort">
            <summary>
            Gets or sets the sort definition.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneResult">
            <summary>
            The result of an update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the result is acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The available modified count.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.MatchedCount">
            <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.ModifiedCount">
            <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.UpsertedId">
            <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOneResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneResult"/> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneResult.Acknowledged">
            <summary>
            The result of an acknowledged update operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOneResult.Acknowledged.#ctor(System.Int64,System.Nullable{System.Int64},MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneResult.Acknowledged"/> class.
            </summary>
            <param name="matchedCount">The matched count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="upsertedId">The upserted id.</param>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneResult.Unacknowledged">
            <summary>
            The result of an unacknowledged update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOptions">
            <summary>
            Options for replacing a single document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOptions.From(MongoDB.Driver.UpdateOptions)">
            <summary>
            Creates a new ReplaceOptions from an UpdateOptions.
            </summary>
            <param name="updateOptions">The update options.</param>
            <returns>A ReplaceOptions.</returns>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOptions`1">
            <summary>
            Options for replacing a single document and specifying a sort order.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions`1.Sort">
            <summary>
            Gets or sets the sort definition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReturnDocument">
            <summary>
            Which version of the document to return when executing a FindAndModify command.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReturnDocument.Before">
            <summary>
            Return the document before the modification.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReturnDocument.After">
            <summary>
            Return the document after the modification.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1">
            <summary>
            A builder for compound search definitions.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.#ctor(MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1"/> class.
            </summary>
            <param name="score"></param>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.Must(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchDefinition{`0}})">
            <summary>
            Adds clauses which must match to produce results.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.Must(MongoDB.Driver.Search.SearchDefinition{`0}[])">
            <summary>
            Adds clauses which must match to produce results.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.MustNot(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchDefinition{`0}})">
            <summary>
            Adds clauses which must not match for a document to be included in the
            results.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.MustNot(MongoDB.Driver.Search.SearchDefinition{`0}[])">
            <summary>
            Adds clauses which must not match for a document to be included in the
            results.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.Should(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchDefinition{`0}})">
            <summary>
            Adds clauses which cause documents in the result set to be scored higher if
            they match.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.Should(MongoDB.Driver.Search.SearchDefinition{`0}[])">
            <summary>
            Adds clauses which cause documents in the result set to be scored higher if
            they match.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.Filter(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchDefinition{`0}})">
            <summary>
            Adds clauses which must all match for a document to be included in the
            results.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.Filter(MongoDB.Driver.Search.SearchDefinition{`0}[])">
            <summary>
            Adds clauses which must all match for a document to be included in the
            results.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.MinimumShouldMatch(System.Int32)">
            <summary>
            Sets a value specifying the minimum number of should clauses the must match
            to include a document in the results.
            </summary>
            <param name="minimumShouldMatch">The value to set.</param>
            <returns>The compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.ToSearchDefinition">
            <summary>
            Constructs a search definition from the builder.
            </summary>
            <returns>A compound search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1.op_Implicit(MongoDB.Driver.Search.CompoundSearchDefinitionBuilder{`0})~MongoDB.Driver.Search.SearchDefinition{`0}">
            <summary>
            Performs an implicit conversion from a <see cref="T:MongoDB.Driver.Search.CompoundSearchDefinitionBuilder`1"/>
            to a <see cref="T:MongoDB.Driver.Search.SearchDefinition`1"/>.
            </summary>
            <param name="builder">The compound search definition builder.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.GeoShapeRelation">
            <summary>
            The relation of the query shape geometry to the indexed field geometry in a
            geo shape search definition.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.GeoShapeRelation.Contains">
            <summary>
            Indicates that the indexed geometry contains the query geometry.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.GeoShapeRelation.Disjoint">
            <summary>
            Indicates that both the query and indexed geometries have nothing in common.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.GeoShapeRelation.Intersects">
            <summary>
            Indicates that both the query and indexed geometries intersect.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.GeoShapeRelation.Within">
            <summary>
            Indicates that the indexed geometry is within the query geometry.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.GeoWithinArea`1">
            <summary>
            Base class for area argument for GeoWithin queries.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.Search.GeoWithinBox`1">
            <summary>
            Object that specifies the bottom left and top right GeoJSON points of a box to
            search within.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.GeoWithinBox`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.GeoWithinBox`1"/> class.
            </summary>
            <param name="bottomLeft">The bottom left GeoJSON point.</param>
            <param name="topRight">The top right GeoJSON point.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.GeoWithinBox`1.BottomLeft">
            <summary> Gets the bottom left GeoJSON point.</summary>
        </member>
        <member name="P:MongoDB.Driver.Search.GeoWithinBox`1.TopRight">
            <summary> Gets the top right GeoJSON point.</summary>
        </member>
        <member name="T:MongoDB.Driver.Search.GeoWithinCircle`1">
            <summary>
            Object that specifies the center point and the radius in meters to search within.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.GeoWithinCircle`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0},System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.GeoWithinCircle`1"/> class.
            </summary>
            <param name="center">Center of the circle specified as a GeoJSON point.</param>
            <param name="radius">Radius specified in meters.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.GeoWithinCircle`1.Center">
            <summary>Gets the center of the circle specified as a GeoJSON point.</summary>
        </member>
        <member name="P:MongoDB.Driver.Search.GeoWithinCircle`1.Radius">
            <summary>Gets the radius specified in meters.</summary>
        </member>
        <member name="T:MongoDB.Driver.Search.GeoWithinGeometry`1">
            <summary>
            Object that specifies the GeoJson geometry to search within.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.GeoWithinGeometry`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.GeoWithinBox`1"/> class.
            </summary>
            <param name="geometry">GeoJSON object specifying the MultiPolygon or Polygon.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.GeoWithinGeometry`1.Geometry">
            <summary>Gets the GeoJson geometry.</summary>
        </member>
        <member name="T:MongoDB.Driver.Search.IMongoSearchIndexManager">
            <summary>
            An interface representing methods used to create, delete and modify search indexes.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateSearchIndexModel},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateSearchIndexModel},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.CreateOne(MongoDB.Bson.BsonDocument,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a search index.
            </summary>
            <param name="definition">The index definition.</param>
            <param name="name">The index name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.CreateOne(MongoDB.Driver.CreateSearchIndexModel,System.Threading.CancellationToken)">
            <summary>
            Creates a search index.
            </summary>
            <param name="model">The model defining the index.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.CreateOneAsync(MongoDB.Bson.BsonDocument,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a search index.
            </summary>
            <param name="definition">The index definition.</param>
            <param name="name">The index name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.CreateOneAsync(MongoDB.Driver.CreateSearchIndexModel,System.Threading.CancellationToken)">
            <summary>
            Creates a search index.
            </summary>
            <param name="model">The model defining the index.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.DropOne(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The index name.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.DropOneAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The index name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.List(System.String,MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the search indexes.
            </summary>
            <param name="name">Name of the index.</param>
            <param name="aggregateOptions">The aggregate options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.ListAsync(System.String,MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the search indexes.
            </summary>
            <param name="name">Name of the index.</param>
            <param name="aggregateOptions">The aggregate options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.Update(System.String,MongoDB.Bson.BsonDocument,System.Threading.CancellationToken)">
            <summary>
            Update the search index.
            </summary>
            <param name="name">Name of the index.</param>
            <param name="definition">The definition.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.Search.IMongoSearchIndexManager.UpdateAsync(System.String,MongoDB.Bson.BsonDocument,System.Threading.CancellationToken)">
            <summary>
            Update the search index.
            </summary>
            <param name="name">Name of the index.</param>
            <param name="definition">The definition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchAutocompleteTokenOrder">
            <summary>
            The order in which to search for tokens in an autocomplete search definition.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.SearchAutocompleteTokenOrder.Any">
            <summary>
            Indicates that tokens in the query can appear in any order in the documents.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.SearchAutocompleteTokenOrder.Sequential">
            <summary>
            Indicates that tokens in the query must appear adjacent to each other or in the order
            specified in the query in the documents.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchCountOptions">
            <summary>
            Options for counting the search results.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchCountOptions.Threshold">
            <summary>
            Gets or sets the number of documents to include in the exact count if
            <see cref="P:MongoDB.Driver.Search.SearchCountOptions.Type"/> is <see cref="F:MongoDB.Driver.Search.SearchCountType.LowerBound"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchCountOptions.Type">
            <summary>
            Gets or sets the type of count of the documents in the result set.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchCountType">
            <summary>
            The type of count of the documents in a search result set.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.SearchCountType.LowerBound">
            <summary>
            A lower bound count of the number of documents that match the query.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.SearchCountType.Total">
            <summary>
            An exact count of the number of documents that match the query.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchDefinition`1">
            <summary>
            Base class for search definitions.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the search definition to a <see cref="T:MongoDB.Bson.BsonDocument" />.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>
            A <see cref="T:MongoDB.Bson.BsonDocument" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.Search.SearchDefinition{`0}">
            <summary>
            Performs an implicit conversion from a BSON document to a <see cref="T:MongoDB.Driver.Search.SearchDefinition`1"/>.
            </summary>
            <param name="document">The BSON document specifying the search definition.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinition`1.op_Implicit(System.String)~MongoDB.Driver.Search.SearchDefinition{`0}">
            <summary>
            Performs an implicit conversion from a string to a <see cref="T:MongoDB.Driver.Search.SearchDefinition`1"/>.
            </summary>
            <param name="json">The string specifying the search definition in JSON.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Search.BsonDocumentSearchDefinition`1">
            <summary>
            A search definition based on a BSON document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.BsonDocumentSearchDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.BsonDocumentSearchDefinition`1"/> class.
            </summary>
            <param name="document">The BSON document specifying the search definition.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.BsonDocumentSearchDefinition`1.Document">
            <summary>
            Gets the BSON document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.BsonDocumentSearchDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Search.JsonSearchDefinition`1">
            <summary>
            A search definition based on a JSON string.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.JsonSearchDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.JsonSearchDefinition`1"/> class.
            </summary>
            <param name="json">The JSON string specifying the search definition.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.JsonSearchDefinition`1.Json">
            <summary>
            Gets the JSON string.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.JsonSearchDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Search.OperatorSearchDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Search.SearchDefinitionBuilder`1">
            <summary>
            A builder for a search definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Autocomplete(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition,MongoDB.Driver.Search.SearchAutocompleteTokenOrder,MongoDB.Driver.Search.SearchFuzzyOptions,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs a search for a word or phrase that contains
            a sequence of characters from an incomplete input string.
            </summary>
            <param name="path">The indexed field to search.</param>
            <param name="query">The query definition specifying the string or strings to search for.</param>
            <param name="tokenOrder">The order in which to search for tokens.</param>
            <param name="fuzzy">The options for fuzzy search.</param>
            <param name="score">The score modifier.</param>
            <returns>An autocomplete search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Autocomplete``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition,MongoDB.Driver.Search.SearchAutocompleteTokenOrder,MongoDB.Driver.Search.SearchFuzzyOptions,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs a search for a word or phrase that contains
            a sequence of characters from an incomplete search string.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field to search.</param>
            <param name="query">The query definition specifying the string or strings to search for.</param>
            <param name="tokenOrder">The order in which to search for tokens.</param>
            <param name="fuzzy">The options for fuzzy search.</param>
            <param name="score">The score modifier.</param>
            <returns>An autocomplete search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Compound(MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a builder for a compound search definition.
            </summary>
            <param name="score">The score modifier.</param>
            <returns>A compound search definition builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.EmbeddedDocument``1(MongoDB.Driver.FieldDefinition{`0,System.Collections.Generic.IEnumerable{``0}},MongoDB.Driver.Search.SearchDefinition{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs a search for documents where
            the specified query <paramref name="operator"/> is satisfied from a single element
            of an array of embedded documents specified by <paramref name="path"/>.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field to search.</param>
            <param name="operator">The operator.</param>
            <param name="score">The score modifier.</param>
            <returns>
            An embeddedDocument search definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.EmbeddedDocument``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Search.SearchDefinition{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs a search for documents where
            the specified query <paramref name="operator"/> is satisfied from a single element
            of an array of embedded documents specified by <paramref name="path"/>.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field to search.</param>
            <param name="operator">The operator.</param>
            <param name="score">The score modifier.</param>
            <returns>
            An embeddedDocument search definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Equals``1(MongoDB.Driver.FieldDefinition{`0,``0},``0,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where an indexed field is equal
            to the specified value.
            Supported value types are null, boolean, numeric, ObjectId, Guid, date and string.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field to search.</param>
            <param name="value">The value to query for.</param>
            <param name="score">The score modifier.</param>
            <returns>An equality search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Equals``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where an indexed field is equal
            to the specified value.
            Supported value types are null, boolean, numeric, ObjectId, Guid, date and string.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field to search.</param>
            <param name="value">The value to query for.</param>
            <param name="score">The score modifier.</param>
            <returns>An equality search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Equals``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where at least one element in an indexed array field is equal
            to the specified value.
            Supported value types are boolean, numeric, ObjectId, date and string.
            </summary>
            <typeparam name="TField">The type of elements contained in the indexed array field.</typeparam>
            <param name="path">The indexed array field to search.</param>
            <param name="value">The value to query for.</param>
            <param name="score">The score modifier.</param>
            <returns>An equality search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Exists(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search definition that tests if a path to a specified indexed field name
            exists in a document.
            </summary>
            <param name="path">The field to test for.</param>
            <returns>An existence search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a search definition that tests if a path to a specified indexed field name
            exists in a document.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The field to test for.</param>
            <returns>An existence search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Facet(MongoDB.Driver.Search.SearchDefinition{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchFacet{`0}})">
            <summary>
            Creates a search definition that groups results by values or ranges in the specified
            faceted fields and returns the count for each of those groups.
            </summary>
            <param name="operator">The operator to use to perform the facet over.</param>
            <param name="facets">Information for bucketing the data for each facet.</param>
            <returns>A facet search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Facet(MongoDB.Driver.Search.SearchDefinition{`0},MongoDB.Driver.Search.SearchFacet{`0}[])">
            <summary>
            Creates a search definition that groups results by values or ranges in the specified
            faceted fields and returns the count for each of those groups.
            </summary>
            <param name="operator">The operator to use to perform the facet over.</param>
            <param name="facets">Information for bucketing the data for each facet.</param>
            <returns>A facet search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.GeoShape``1(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.GeoShapeRelation,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for shapes with a given geometry.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="path">Indexed geo type field or fields to search.</param>
            <param name="geometry">
            GeoJSON object specifying the Polygon, MultiPolygon, or LineString shape or point
            to search.
            </param>
            <param name="relation">Relation of the query shape geometry to the indexed field geometry.</param>
            <param name="score">The score modifier.</param>
            <returns>A geo shape search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.GeoShape``2(System.Linq.Expressions.Expression{System.Func{`0,``1}},MongoDB.Driver.Search.GeoShapeRelation,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for shapes with a given geometry.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">Indexed geo type field or fields to search.</param>
            <param name="geometry">
            GeoJSON object specifying the Polygon, MultiPolygon, or LineString shape or point
            to search.
            </param>
            <param name="relation">Relation of the query shape geometry to the indexed field geometry.</param>
            <param name="score">The score modifier.</param>
            <returns>A geo shape search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.GeoWithin``1(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for geographic points within a given
            geometry.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="path">Indexed geo type field or fields to search.</param>
            <param name="geometry">
            GeoJSON object specifying the MultiPolygon or Polygon to search within.
            </param>
            <param name="score">The score modifier.</param>
            <returns>A geo within search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.GeoWithin``2(System.Linq.Expressions.Expression{System.Func{`0,``1}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for geographic points within a given
            geometry.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">Indexed geo type field or fields to search.</param>
            <param name="geometry">
            GeoJSON object specifying the MultiPolygon or Polygon to search within.
            </param>
            <param name="score">The score modifier.</param>
            <returns>A geo within search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.GeoWithin``2(System.Linq.Expressions.Expression{System.Func{`0,``1}},MongoDB.Driver.Search.GeoWithinArea{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for geographic points within a given geo object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">Indexed geo type field or fields to search.</param>
            <param name="area">Object that specifies the area to search within.</param>
            <param name="score">The score modifier.</param>
            <returns>A geo within search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.GeoWithin``1(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.GeoWithinArea{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for geographic points within a given geo object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="path">Indexed geo type field or fields to search.</param>
            <param name="area">Object that specifies the area to search within.</param>
            <param name="score">The score modifier.</param>
            <returns>A geo within search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.In``1(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where the value of the field equals to any of specified values.
            </summary>
            <typeparam name="TField">The type of the field. Valid types are: boolean, ObjectId, Guid, number, date, string.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="values">Values to compare the field with.</param>
            <param name="score">The score modifier.</param>
            <returns>An In search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where the value of the field equals to any of specified values.
            </summary>
            <typeparam name="TField">The type of the field. Valid types are: boolean, ObjectId, Guid, number, date, string.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="values">Values to compare the field with.</param>
            <param name="score">The score modifier.</param>
            <returns>An In search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.MoreLikeThis``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a search definition that returns documents similar to the input documents.
            </summary>
            <typeparam name="TLike">The type of the like documents.</typeparam>
            <param name="like">
            One or more documents that Atlas Search uses to extract representative terms for.
            </param>
            <returns>A more like this search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.MoreLikeThis``1(``0[])">
            <summary>
            Creates a search definition that returns documents similar to the input documents.
            </summary>
            <typeparam name="TLike">The type of the like documents.</typeparam>
            <param name="like">
            One or more documents that Atlas Search uses to extract representative terms for.
            </param>
            <returns>A more like this search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Double,System.Double,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Int32,System.Int32,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Int32,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Int64,System.Int64,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int64,System.Int64,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near(MongoDB.Driver.Search.SearchPathDefinition{`0},System.DateTime,System.Int64,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.DateTime,System.Int64,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near``1(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to use to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``1}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that supports querying and scoring numeric and date values.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates</typeparam>
            <typeparam name="TField">The type of the fields.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="origin">The number, date, or geographic point to search near.</param>
            <param name="pivot">The value to user to calculate scores of result documents.</param>
            <param name="score">The score modifier.</param>
            <returns>A near search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Phrase(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition,System.Nullable{System.Int32},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs search for documents containing an ordered
            sequence of terms.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="slop">The allowable distance between words in the query phrase.</param>
            <param name="score">The score modifier.</param>
            <returns>A phrase search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Phrase``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition,System.Nullable{System.Int32},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs search for documents containing an ordered
            sequence of terms.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="slop">The allowable distance between words in the query phrase.</param>
            <param name="score">The score modifier.</param>
            <returns>A phrase search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.QueryString(MongoDB.Driver.FieldDefinition{`0},System.String,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries a combination of indexed fields and values.
            </summary>
            <param name="defaultPath">The indexed field to search by default.</param>
            <param name="query">One or more indexed fields and values to search.</param>
            <param name="score">The score modifier.</param>
            <returns>A query string search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.QueryString``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries a combination of indexed fields and values.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="defaultPath">The indexed field to search by default.</param>
            <param name="query">One or more indexed fields and values to search.</param>
            <param name="score">The score modifier.</param>
            <returns>A query string search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Range``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchRange{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where a field is in the specified range.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="range">The field range.</param>
            <param name="score">The score modifier.</param>
            <returns>A range search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Range``1(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchRange{``0},MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that queries for documents where a field is in the specified range.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="range">The field range.</param>
            <param name="score">The score modifier.</param>
            <returns>A range search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Regex(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition,System.Boolean,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that interprets the query as a regular expression.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="allowAnalyzedField">
            Must be set to true if the query is run against an analyzed field.
            </param>
            <param name="score">The score modifier.</param>
            <returns>A regular expression search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Regex``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition,System.Boolean,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that interprets the query as a regular expression.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="allowAnalyzedField">
            Must be set to true if the query is run against an analyzed field.
            </param>
            <param name="score">The score modifier.</param>
            <returns>A regular expression search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Span(MongoDB.Driver.Search.SearchSpanDefinition{`0})">
            <summary>
            Creates a search definition that finds text search matches within regions of a text
            field.
            </summary>
            <param name="clause">The span clause.</param>
            <returns>A span search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Text(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition,MongoDB.Driver.Search.SearchFuzzyOptions,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs full-text search using the analyzer specified
            in the index configuration.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="fuzzy">The options for fuzzy search.</param>
            <param name="score">The score modifier.</param>
            <returns>A text search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Text(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition,System.String,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs full-text search with synonyms using the analyzer specified
            in the index configuration.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="synonyms">The name of the synonym mapping definition in the index definition</param>
            <param name="score">The score modifier.</param>
            <returns>A text search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Text``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition,MongoDB.Driver.Search.SearchFuzzyOptions,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs full-text search using the analyzer specified
            in the index configuration.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or field to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="fuzzy">The options for fuzzy search.</param>
            <param name="score">The score modifier.</param>
            <returns>A text search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Text``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition,System.String,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that performs full-text search with synonyms using the analyzer specified
            in the index configuration.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or field to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="synonyms">The name of the synonym mapping definition in the index definition</param>
            <param name="score">The score modifier.</param>
            <returns>A text search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Wildcard(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition,System.Boolean,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that uses special characters in the search string that can
            match any character.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="allowAnalyzedField">
            Must be set to true if the query is run against an analyzed field.
            </param>
            <param name="score">The score modifier.</param>
            <returns>A wildcard search definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchDefinitionBuilder`1.Wildcard``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition,System.Boolean,MongoDB.Driver.Search.SearchScoreDefinition{`0})">
            <summary>
            Creates a search definition that uses special characters in the search string that can
            match any character.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <param name="allowAnalyzedField">
            Must be set to true if the query is run against an analyzed field.
            </param>
            <param name="score">The score modifier.</param>
            <returns>A wildcard search definition.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchFacet`1">
            <summary>
            Base class for search facets.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacet`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchFacet`1"/> class.
            </summary>
            <param name="name">The name of the facet.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchFacet`1.Name">
            <summary>
            Gets the name of the facet.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacet`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the search facet to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument" />.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchFacetBuilder`1">
            <summary>
            A builder for a search facet.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Date(System.String,MongoDB.Driver.Search.SearchPathDefinition{`0},System.Collections.Generic.IEnumerable{System.DateTime},System.String)">
            <summary>
            Creates a facet that narrows down search result based on a date.
            </summary>
            <param name="name">The name of the fact.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of date values that specify the boundaries for each bucket.
            </param>
            <param name="default">
            The name of an additional bucket that counts documents returned from the operator that
            do not fall within the specified boundaries.
            </param>
            <returns>A date search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Date(System.String,MongoDB.Driver.Search.SearchPathDefinition{`0},System.DateTime[])">
            <summary>
            Creates a facet that narrows down search result based on a date.
            </summary>
            <param name="name">The name of the fact.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of date values that specify the boundaries for each bucket.
            </param>
            <returns>A date search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Date``1(System.String,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.DateTime},System.String)">
            <summary>
            Creates a facet that narrows down search result based on a date.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="name">The name of the fact.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of date values that specify the boundaries for each bucket.
            </param>
            <param name="default">
            The name of an additional bucket that counts documents returned from the operator that
            do not fall within the specified boundaries.
            </param>
            <returns>A date search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Date``1(System.String,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.DateTime[])">
            <summary>
            Creates a facet that narrows down search result based on a date.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="name">The name of the fact.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of date values that specify the boundaries for each bucket.
            </param>
            <returns>A date search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Number(System.String,MongoDB.Driver.Search.SearchPathDefinition{`0},System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue},System.String)">
            <summary>
            Creates a facet that determines the frequency of numeric values by breaking the search
            results into separate ranges of numbers.
            </summary>
            <param name="name">The name of the facet.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of numeric values that specify the boundaries for each bucket.
            </param>
            <param name="default">
            The name of an additional bucket that counts documents returned from the operator that
            do not fall within the specified boundaries.
            </param>
            <returns>A number search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Number(System.String,MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Bson.BsonValue[])">
            <summary>
            Creates a facet that determines the frequency of numeric values by breaking the search
            results into separate ranges of numbers.
            </summary>
            <param name="name">The name of the facet.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of numeric values that specify the boundaries for each bucket.
            </param>
            <returns>A number search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Number``1(System.String,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue},System.String)">
            <summary>
            Creates a facet that determines the frequency of numeric values by breaking the search
            results into separate ranges of numbers.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="name">The name of the facet.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of numeric values that specify the boundaries for each bucket.
            </param>
            <param name="default">
            The name of an additional bucket that counts documents returned from the operator that
            do not fall within the specified boundaries.
            </param>
            <returns>A number search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.Number``1(System.String,System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonValue[])">
            <summary>
            Creates a facet that determines the frequency of numeric values by breaking the search
            results into separate ranges of numbers.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="name">The name of the facet.</param>
            <param name="path">The field path to facet on.</param>
            <param name="boundaries">
            A list of numeric values that specify the boundaries for each bucket.
            </param>
            <returns>A number search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.String(System.String,MongoDB.Driver.Search.SearchPathDefinition{`0},System.Nullable{System.Int32})">
            <summary>
            Creates a facet that narrows down Atlas Search results based on the most frequent
            string values in the specified string field.
            </summary>
            <param name="name">The name of the facet.</param>
            <param name="path">The field path to facet on.</param>
            <param name="numBuckets">
            The maximum number of facet categories to return in the results.
            </param>
            <returns>A string search facet.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchFacetBuilder`1.String``1(System.String,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Int32})">
            <summary>
            Creates a facet that narrows down Atlas Search result based on the most frequent
            string values in the specified string field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="name">The name of the facet.</param>
            <param name="path">The field path to facet on.</param>
            <param name="numBuckets">
            The maximum number of facet categories to return in the results.
            </param>
            <returns>A string search facet.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchFuzzyOptions">
            <summary>
            Options for fuzzy search.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchFuzzyOptions.MaxEdits">
            <summary>
            Gets or sets the maximum number of single-character edits required to match the
            specified search term.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchFuzzyOptions.MaxExpansions">
            <summary>
            Gets or sets the number of variations to generate and search for.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchFuzzyOptions.PrefixLength">
            <summary>
            Gets or sets the number of characters at the beginning of each term in the result that
            must exactly match.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchHighlight">
            <summary>
            Represents a result of highlighting.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchHighlight.#ctor(System.String,System.Double,MongoDB.Driver.Search.SearchHighlightText[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchHighlight"/> class.
            </summary>
            <param name="path">document field which returned a match.</param>
            <param name="score">Score assigned to this result.</param>
            <param name="texts">Objects containing the matching text and the surrounding text.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlight.Path">
            <summary>
            Gets the document field which returned a match.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlight.Score">
            <summary>
            Gets the score assigned to this result.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlight.Texts">
            <summary>
            Gets one or more objects containing the matching text and the surrounding text
            (if any).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchHighlightText">
            <summary>
            Represents the matching text or the surrounding text of a highlighting result.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchHighlightText.#ctor(MongoDB.Driver.Search.HighlightTextType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchHighlightText"/> class.
            </summary>
            <param name="type">Type of search highlight.</param>
            <param name="value">Text from the field which returned a match.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlightText.Type">
            <summary>
            Gets or sets the type of text, matching or surrounding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlightText.Value">
            <summary>
            Gets the text from the field which returned a match.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.HighlightTextType">
            <summary>
            Represents the type of text in a highlighting result, matching or surrounding.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.HighlightTextType.Hit">
            <summary>
            Indicates that the text contains a match.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Search.HighlightTextType.Text">
            <summary>
            Indicates that the text contains the text content adjacent to a matching string.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchHighlightOptions`1">
            <summary>
            Options for highlighting.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchHighlightOptions`1.#ctor(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchHighlightOptions`1"/> class.
            </summary>
            <param name="path">The document field to search.</param>
            <param name="maxCharsToExamine">maximum number of characters to examine.</param>
            <param name="maxNumPassages">The number of high-scoring passages.</param>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchHighlightOptions`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates highlighting options.
            </summary>
            <param name="path">The document field to search.</param>
            <param name="maxCharsToExamine">
            The maximum number of characters to examine on a document when performing highlighting
            for a field.
            </param>
            <param name="maxNumPassages">
            The number of high-scoring passages to return per document in the highlighting results
            for each field.
            </param>
            <returns>Highlighting options.</returns>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlightOptions`1.MaxCharsToExamine">
            <summary>
            Gets or sets the maximum number of characters to examine on a document when performing
            highlighting for a field.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlightOptions`1.MaxNumPassages">
            <summary>
            Gets or sets the number of high-scoring passages to return per document in the
            highlighting results for each field.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchHighlightOptions`1.Path">
            <summary>
            Gets or sets the document field to search.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchHighlightOptions`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the options to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument" />.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchMetaCountResult">
            <summary>
            A search count result set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchMetaCountResult.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchMetaCountResult"/> class.
            </summary>
            <param name="lowerBound">Lower bound for this result set.</param>
            <param name="total">Total for this result set.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaCountResult.LowerBound">
            <summary>
            Gets the lower bound for this result set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaCountResult.Total">
            <summary>
            Gets the total for this result set.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchMetaFacetBucketResult">
            <summary>
            A search facet bucket result set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchMetaFacetBucketResult.#ctor(System.Int64,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchMetaFacetBucketResult"/> class.
            </summary>
            <param name="count">count of documents in this facet bucket.</param>
            <param name="id">Unique identifier that identifies this facet bucket.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaFacetBucketResult.Count">
            <summary>
            Gets the count of documents in this facet bucket.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaFacetBucketResult.Id">
            <summary>
            Gets the unique identifier that identifies this facet bucket.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchMetaFacetResult">
            <summary>
            A search facet result set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchMetaFacetResult.#ctor(MongoDB.Driver.Search.SearchMetaFacetBucketResult[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchMetaFacetResult"/> class.
            </summary>
            <param name="buckets">An array of bucket result sets.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaFacetResult.Buckets">
            <summary>
            Gets an array of bucket result sets.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchMetaResult">
            <summary>
            A result set for a search metadata query.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchMetaResult.#ctor(MongoDB.Driver.Search.SearchMetaCountResult,System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Driver.Search.SearchMetaFacetResult})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchMetaResult"/> class.
            </summary>
            <param name="count">Count result set.</param>
            <param name="facet">Facet result sets.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaResult.Count">
            <summary>
            Gets the count result set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchMetaResult.Facet">
            <summary>
            Gets the facet result sets.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchOptions`1">
            <summary>
            Options for search.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.CountOptions">
            <summary>
            Gets or sets the options for counting the search results.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.Highlight">
            <summary>
            Gets or sets the options for highlighting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.IndexName">
            <summary>
            Gets or sets the index name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.ReturnStoredSource">
            <summary>
            Gets or sets a flag that specifies whether to perform a full document lookup on the backend database
            or return only stored source fields directly from Atlas Search.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.ScoreDetails">
            <summary>
            Gets or sets a flag that specifies whether to return a detailed breakdown
            of the score for each document in the result.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.Sort">
            <summary>
            Gets or sets the sort specification.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.Tracking">
            <summary>
            Gets or sets the options for tracking search terms.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.SearchAfter">
            <summary>
            Gets or sets the "after" reference point for pagination.
            When set, the search retrieves documents starting immediately after the specified reference point.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchOptions`1.SearchBefore">
            <summary>
            Gets or sets the "before" reference point for pagination.
            When set, the search retrieves documents starting immediately before the specified reference point.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchPathDefinition`1">
            <summary>
            Base class for search paths.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the path to a <see cref="T:MongoDB.Bson.BsonValue"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.op_Implicit(MongoDB.Driver.FieldDefinition{`0})~MongoDB.Driver.Search.SearchPathDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.FieldDefinition`1"/> to
            <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.op_Implicit(System.String)~MongoDB.Driver.Search.SearchPathDefinition{`0}">
            <summary>
            Performs an implicit conversion from a field name to <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.op_Implicit(MongoDB.Driver.FieldDefinition{`0}[])~MongoDB.Driver.Search.SearchPathDefinition{`0}">
            <summary>
            Performs an implicit conversion from an array of <see cref="T:MongoDB.Driver.FieldDefinition`1"/> to
            <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.
            </summary>
            <param name="fields">The array of fields.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.op_Implicit(System.Collections.Generic.List{MongoDB.Driver.FieldDefinition{`0}})~MongoDB.Driver.Search.SearchPathDefinition{`0}">
            <summary>
            Performs an implicit conversion from a list of <see cref="T:MongoDB.Driver.FieldDefinition`1"/> to
            <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.
            </summary>
            <param name="fields">The list of fields.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.op_Implicit(System.String[])~MongoDB.Driver.Search.SearchPathDefinition{`0}">
            <summary>
            Performs an implicit conversion from an array of field names to 
            <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.
            </summary>
            <param name="fieldNames">The array of field names.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.op_Implicit(System.Collections.Generic.List{System.String})~MongoDB.Driver.Search.SearchPathDefinition{`0}">
            <summary>
            Performs an implicit conversion from an array of field names to 
            <see cref="T:MongoDB.Driver.Search.SearchPathDefinition`1"/>.
            </summary>
            <param name="fieldNames">The list of field names.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinition`1.RenderField(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the field.
            </summary>
            <param name="fieldDefinition">The field definition.</param>
            <param name="args">The render arguments.</param>
            <returns>The rendered field.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1">
            <summary>
            A builder for a search path.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Analyzer(MongoDB.Driver.FieldDefinition{`0},System.String)">
            <summary>
            Creates a search path that searches using the specified analyzer.
            </summary>
            <param name="field">The field definition</param>
            <param name="analyzerName">The name of the analyzer.</param>
            <returns>An analyzer search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Analyzer``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Creates a search path that searches using the specified analyzer.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field definition</param>
            <param name="analyzerName">The name of the analyzer.</param>
            <returns>An analyzer search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Multi(System.Collections.Generic.IEnumerable{MongoDB.Driver.FieldDefinition{`0}})">
            <summary>
            Creates a search path for multiple fields.
            </summary>
            <param name="fields">The collection of field definitions.</param>
            <returns>A multi-field search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Multi(MongoDB.Driver.FieldDefinition{`0}[])">
            <summary>
            Creates a search path for multiple fields.
            </summary>
            <param name="fields">The array of field definitions.</param>
            <returns>A multi-field search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Multi``1(System.Linq.Expressions.Expression{System.Func{`0,``0}}[])">
            <summary>
            Creates a search path for multiple fields.
            </summary>
            <typeparam name="TField">The type of the fields.</typeparam>
            <param name="fields">The array of field definitions.</param>
            <returns>A multi-field search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Single(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a search path for a single field.
            </summary>
            <param name="field">The field definition.</param>
            <returns>A single-field search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Single``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a search path for a single field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field definition.</param>
            <returns>A single-field search path.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchPathDefinitionBuilder`1.Wildcard(System.String)">
            <summary>
            Creates a search path that uses special characters in the field name
            that can match any character.
            </summary>
            <param name="query">
            The wildcard string that the field name must match.
            </param>
            <returns>A wildcard search path.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchQueryDefinition">
            <summary>
            Base class for search queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchQueryDefinition.Render">
            <summary>
            Renders the query to a <see cref="T:MongoDB.Bson.BsonValue"/>.
            </summary>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchQueryDefinition.op_Implicit(System.String)~MongoDB.Driver.Search.SearchQueryDefinition">
            <summary>
            Performs an implicit conversion from a string to <see cref="T:MongoDB.Driver.Search.SearchQueryDefinition"/>.
            </summary>
            <param name="query">The string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchQueryDefinition.op_Implicit(System.String[])~MongoDB.Driver.Search.SearchQueryDefinition">
            <summary>
            Performs an implicit conversion from an array of strings to <see cref="T:MongoDB.Driver.Search.SearchQueryDefinition"/>.
            </summary>
            <param name="queries">The array of strings.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchQueryDefinition.op_Implicit(System.Collections.Generic.List{System.String})~MongoDB.Driver.Search.SearchQueryDefinition">
            <summary>
            Performs an implicit conversion from a list of strings to <see cref="T:MongoDB.Driver.Search.SearchQueryDefinition"/>.
            </summary>
            <param name="queries">The list of strings.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SingleSearchQueryDefinition">
            <summary>
            A query definition for a single string.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SingleSearchQueryDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SingleSearchQueryDefinition"/> class.
            </summary>
            <param name="query">The query string.</param>
        </member>
        <member name="M:MongoDB.Driver.Search.SingleSearchQueryDefinition.Render">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Search.MultiSearchQueryDefinition">
            <summary>
            A query definition for multiple strings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.MultiSearchQueryDefinition.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.MultiSearchQueryDefinition"/> class.
            </summary>
            <param name="queries">The query strings.</param>
        </member>
        <member name="M:MongoDB.Driver.Search.MultiSearchQueryDefinition.Render">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchRange`1">
            <summary>
            Object that specifies range of scalar and DateTime values.
            </summary>
            <typeparam name="TValue">The type of the range value.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchRange`1.Empty">
            <summary>Empty range.</summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRange`1.#ctor(System.Nullable{`0},System.Nullable{`0},System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchRange`1"/> class.
            </summary>
            <param name="min">The lower bound of the range.</param>
            <param name="max">The upper bound of the range</param>
            <param name="isMinInclusive">Indicates whether the lower bound of the range is inclusive.</param>
            <param name="isMaxInclusive">Indicates whether the upper bound of the range is inclusive.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchRange`1.IsMaxInclusive">
            <summary>Gets the value that indicates whether the upper bound of the range is inclusive.</summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchRange`1.IsMinInclusive">
            <summary>Gets the value that indicates whether the lower bound of the range is inclusive.</summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchRange`1.Max">
            <summary>Gets the lower bound of the range.</summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchRange`1.Min">
            <summary>Gets the lower bound of the range.</summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchRangeBuilder">
            <summary>
            A builder for a SearchRange.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Gt``1(``0)">
            <summary>
            Creates a greater than search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <returns>Search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Gt``1(MongoDB.Driver.Search.SearchRange{``0},``0)">
            <summary>
            Adds a greater than value to a search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="searchRange">Search range.</param>
            <param name="value">The value.</param>
            <returns>Search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Gte``1(``0)">
            <summary>
            Creates a greater or equal than search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <returns>Search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Gte``1(MongoDB.Driver.Search.SearchRange{``0},``0)">
            <summary>
            Adds a greater or equal than value to a search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="searchRange">Search range.</param>
            <param name="value">The value.</param>
            <returns>Search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Lt``1(``0)">
            <summary>
            Creates a less than search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <returns>Search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Lt``1(MongoDB.Driver.Search.SearchRange{``0},``0)">
            <summary>
            Adds a less than value to a search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="searchRange">Search range.</param>
            <param name="value">The value.</param>
            <returns>Search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Lte``1(``0)">
            <summary>
            Creates a less than or equal search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <returns>search range.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchRangeBuilder.Lte``1(MongoDB.Driver.Search.SearchRange{``0},``0)">
            <summary>
            Adds a less than or equal value to a search range.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="searchRange">Search range.</param>
            <param name="value">The value.</param>
            <returns>search range.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchScoreDefinition`1">
            <summary>
            Base class for search score modifiers.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the score modifier to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1">
            <summary>
            A builder for a score modifier.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1.Boost(System.Double)">
            <summary>
            Creates a score modifier that multiplies a result's base score by a given number.
            </summary>
            <param name="value">The number to multiply the default base score by.</param>
            <returns>
            A boost score modifier.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1.Boost(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Double)">
            <summary>
            Creates a score modifier that multiples a result's base score by the value of a numeric
            field in the documents.
            </summary>
            <param name="path">
            The path to the numeric field whose value to multiply the default base score by.
            </param>
            <param name="undefined">
            The numeric value to substitute if the numeric field is not found in the documents.
            </param>
            <returns>
            A boost score modifier.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1.Boost(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
            <summary>
            Creates a score modifier that multiplies a result's base score by the value of a numeric
            field in the documents.
            </summary>
            <param name="path">
            The path to the numeric field whose value to multiply the default base score by.
            </param>
            <param name="undefined">
            The numeric value to substitute if the numeric field is not found in the documents.
            </param>
            <returns>
            A boost score modifier.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1.Constant(System.Double)">
            <summary>
            Creates a score modifier that replaces the base score with a given number.
            </summary>
            <param name="value">The number to replace the base score with.</param>
            <returns>
            A constant score modifier.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDefinitionBuilder`1.Function(MongoDB.Driver.Search.SearchScoreFunction{`0})">
            <summary>
            Creates a score modifier that computes the final score through an expression.
            </summary>
            <param name="function">The expression used to compute the score.</param>
            <returns>
            A function score modifier.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchScoreDetails">
            <summary>
            Represents the scoreDetails object for a document in the result.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreDetails.#ctor(System.Double,System.String,MongoDB.Driver.Search.SearchScoreDetails[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchScoreDetails"/> class.
            </summary>
            <param name="value">Contribution towards the score by a subset of the scoring formula.</param>
            <param name="description">Subset of the scoring formula.</param>
            <param name="details">Breakdown of the score for each match in the document.</param>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchScoreDetails.Value">
            <summary>
            Gets the contribution towards the score by a subset of the scoring formula.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchScoreDetails.Description">
            <summary>
            Gets the subset of the scoring formula including details about how the document
            was scored and factors considered in calculating the score.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchScoreDetails.Details">
            <summary>
            Breakdown of the score for each match in the document based on the subset of the scoring formula.
            (if any).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchScoreFunction`1">
            <summary>
            Base class for search score functions.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunction`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the score function to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument" />.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1">
            <summary>
            A builder for a score function.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Add(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchScoreFunction{`0}})">
            <summary>
            Creates a function that adds a series of numbers.
            </summary>
            <param name="operands">An array of expressions, which can have negative values.</param>
            <returns>An addition score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Add(MongoDB.Driver.Search.SearchScoreFunction{`0}[])">
            <summary>
            Creates a function that adds a series of numbers.
            </summary>
            <param name="operands">An array of expressions, which can have negative values.</param>
            <returns>An addition score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Constant(System.Double)">
            <summary>
            Creates a function that represents a constant number.
            </summary>
            <param name="value">Number that indicates a fixed value.</param>
            <returns>A constant score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Gauss(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a function that decays, or reduces by multiplying, the final scores of the
            documents based on the distance of a numeric field from a specified origin point.
            </summary>
            <param name="path">The path to the numeric field.</param>
            <param name="origin">The point of origin from which to calculate the distance.</param>
            <param name="scale">
            The distance from <paramref name="origin"/> plus or minus <paramref name="offset"/> at
            which scores must be multiplied.
            </param>
            <param name="decay">
            The rate at which to multiply score values, which must be a positive number between
            0 and 1 exclusive.
            </param>
            <param name="offset">
            The number of use to determine the distance from <paramref name="origin"/>.
            </param>
            <returns>A Guassian score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Gauss(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a function that decays, or reduces by multiplying, the final scores of the
            documents based on the distance of a numeric field from a specified origin point.
            </summary>
            <param name="path">The path to the numeric field.</param>
            <param name="origin">The point of origin from which to calculate the distance.</param>
            <param name="scale">
            The distance from <paramref name="origin"/> plus or minus <paramref name="offset"/> at
            which scores must be multiplied.
            </param>
            <param name="decay">
            The rate at which to multiply score values, which must be a positive number between
            0 and 1 exclusive.
            </param>
            <param name="offset">
            The number of use to determine the distance from <paramref name="origin"/>.
            </param>
            <returns>A Guassian score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Log(MongoDB.Driver.Search.SearchScoreFunction{`0})">
            <summary>
            Creates a function that calculates the base-10 logarithm of a number.
            </summary>
            <param name="operand">The number.</param>
            <returns>A logarithmic score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Log1p(MongoDB.Driver.Search.SearchScoreFunction{`0})">
            <summary>
            Creates a function that adds 1 to a number and then calculates its base-10 logarithm.
            </summary>
            <param name="operand">The number.</param>
            <returns>A logarithmic score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Multiply(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchScoreFunction{`0}})">
            <summary>
            Creates a function that multiplies a series of numbers.
            </summary>
            <param name="operands">An array of expressions, which can have negative values.</param>
            <returns>A multiplication score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Multiply(MongoDB.Driver.Search.SearchScoreFunction{`0}[])">
            <summary>
            Creates a function that multiplies a series of numbers.
            </summary>
            <param name="operands">An array of expressions, which can have negative values.</param>
            <returns>A mulitplication score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Path(MongoDB.Driver.Search.SearchPathDefinition{`0},System.Double)">
            <summary>
            Creates a function that incorporates an indexed numeric field value into the score.
            </summary>
            <param name="path">The path to the numeric field.</param>
            <param name="undefined">
            The value to use if the numeric field specified using <paramref name="path"/> is
            missing in the document.
            </param>
            <returns>A path score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Path(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
            <summary>
            Creates a function that incorporates an indexed numeric field value into the score.
            </summary>
            <param name="path">The path to the numeric field.</param>
            <param name="undefined">
            The value to use if the numeric field specified using <paramref name="path"/> is
            missing in the document.
            </param>
            <returns>A path score function.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchScoreFunctionBuilder`1.Relevance">
            <summary>
            Creates a function that represents the relevance score, which is the score Atlas Search
            assigns documents based on relevance.
            </summary>
            <returns>A relevance score function.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchSpanDefinition`1">
            <summary>
            Base class for span clauses.
            </summary>
            <typeparam name="TDocument"></typeparam>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchSpanDefinition`1.ClauseType">
            <summary>
            Span clause type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinition`1.#ctor(MongoDB.Driver.Search.SearchSpanDefinition{`0}.ClauseType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Search.SearchSpanDefinition`1"/> class.
            </summary>
            <param name="clauseType">The clause type.</param>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the span clause to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1">
            <summary>
            A builder for a span clause.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.First(MongoDB.Driver.Search.SearchSpanDefinition{`0},System.Int32)">
            <summary>
            Creates a span clause that matches near the beginning of the string.
            </summary>
            <param name="operator">The span operator.</param>
            <param name="endPositionLte">The highest position in which to match the query.</param>
            <returns>A first span clause.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.Near(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchSpanDefinition{`0}},System.Int32,System.Boolean)">
            <summary>
            Creates a span clause that matches multiple string found near each other.
            </summary>
            <param name="clauses">The clauses.</param>
            <param name="slop">The allowable distance between words in the query phrase.</param>
            <param name="inOrder">Whether to require that the clauses appear in the specified order.</param>
            <returns>A near span clause.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.Search.SearchSpanDefinition{`0}})">
            <summary>
            Creates a span clause that matches any of its subclauses.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>An or span clause.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.Or(MongoDB.Driver.Search.SearchSpanDefinition{`0}[])">
            <summary>
            Creates a span clause that matches any of its subclauses.
            </summary>
            <param name="clauses">The clauses.</param>
            <returns>An or span clause.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.Subtract(MongoDB.Driver.Search.SearchSpanDefinition{`0},MongoDB.Driver.Search.SearchSpanDefinition{`0})">
            <summary>
            Creates a span clause that excludes certain strings from the search results.
            </summary>
            <param name="include">Clause to be included.</param>
            <param name="exclude">Clause to be excluded.</param>
            <returns>A subtract span clause.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.Term(MongoDB.Driver.Search.SearchPathDefinition{`0},MongoDB.Driver.Search.SearchQueryDefinition)">
            <summary>
            Creates a span clause that matches a single term.
            </summary>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or strings to search for.</param>
            <returns>A term span clause.</returns>
        </member>
        <member name="M:MongoDB.Driver.Search.SearchSpanDefinitionBuilder`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.Search.SearchQueryDefinition)">
            <summary>
            Creates a span clause that matches a single term.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="path">The indexed field or fields to search.</param>
            <param name="query">The string or string to search for.</param>
            <returns>A term span clause.</returns>
        </member>
        <member name="T:MongoDB.Driver.Search.SearchTrackingOptions">
            <summary>
            Options for tracking the search query.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Search.SearchTrackingOptions.SearchTerms">
            <summary>
            Text or term associated with the query to track. You can specify only one term per query.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SearchIndexType">
            <summary>
            Represents an Atlas search index type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.SearchIndexType.Search">
            <summary>
            A search index type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.SearchIndexType.VectorSearch">
            <summary>
            A vector search index type.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ServerSession">
            <summary>
            A server session.
            </summary>
            <seealso cref="T:MongoDB.Driver.IServerSession" />
        </member>
        <member name="P:MongoDB.Driver.ServerSession.Id">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ServerSession.LastUsedAt">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ServerSession.AdvanceTransactionNumber">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ServerSession.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ServerSession.WasUsed">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ServerVersion">
            <summary>
            Represents server versions.
            </summary>
            <note>Only major/minor versions are represented.</note>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server26">
            <summary>
            Server version 2.6.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server30">
            <summary>
            Server version 3.0.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server32">
            <summary>
            Server version 3.2.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server34">
            <summary>
            Server version 2.6.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server36">
            <summary>
            Server version 3.6.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server40">
            <summary>
            Server version 4.0.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server42">
            <summary>
            Server version 4.2.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server44">
            <summary>
            Server version 4.4.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server47">
            <summary>
            Server version 4.7.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server48">
            <summary>
            Server version 4.8.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server49">
            <summary>
            Server version 4.9.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server50">
            <summary>
            Server version 5.0.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server51">
            <summary>
            Server version 5.1.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server52">
            <summary>
            Server version 5.2.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server53">
            <summary>
            Server version 5.3.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server60">
            <summary>
            Server version 6.0.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server61">
            <summary>
            Server version 6.1.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server62">
            <summary>
            Server version 6.2.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server63">
            <summary>
            Server version 6.3.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server70">
            <summary>
            Server version 7.0.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server71">
            <summary>
            Server version 7.1.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server72">
            <summary>
            Server version 7.2.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server73">
            <summary>
            Server version 7.3.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ServerVersion.Server80">
            <summary>
            Server version 8.0.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SetFieldDefinition`1">
            <summary>
            A definition of a single field to be set.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SetFieldDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the SetFieldDefinition.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>The rendered SetFieldDefinition.</returns>
        </member>
        <member name="T:MongoDB.Driver.ConstantSetFieldDefinition`2">
            <summary>
            A SetFieldDefinition that uses a field and a a constant to define the field to be set.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ConstantSetFieldDefinition`2.#ctor(MongoDB.Driver.FieldDefinition{`0,`1},`1)">
            <summary>
            Initializes an instance of ConstantSetFieldDefinition.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.ConstantSetFieldDefinition`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.SetFieldDefinitions`1">
            <summary>
            Defines the fields to be set by a $set stage.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SetFieldDefinitions`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the set field definitions.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>The rendered set field definitions.</returns>
        </member>
        <member name="T:MongoDB.Driver.ListSetFieldDefinitions`1">
            <summary>
            A subclass of SetFieldDefinitions containing a list of SetFieldDefinition instances to define the fields to be set.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ListSetFieldDefinitions`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.SetFieldDefinition{`0}})">
            <summary>
            Initializes an instances ListSetFieldDefinitions.
            </summary>
            <param name="setFieldDefinitions">The set field definitions.</param>
        </member>
        <member name="P:MongoDB.Driver.ListSetFieldDefinitions`1.List">
            <summary>
            Gets the list of SetFieldDefinition instances.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ListSetFieldDefinitions`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ExpressionSetFieldDefinitions`2">
            <summary>
            A subclass of SetFieldDefinition that uses an Expression to define the fields to be set.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TFields">The type of object specifying the fields to set.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionSetFieldDefinitions`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes an instance of ExpressionSetFieldDefinitions.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:MongoDB.Driver.ExpressionSetFieldDefinitions`2.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.SetFieldDefinitionsBuilder`1">
            <summary>
            A builder for SetFieldDefinitions.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SetFieldDefinitionsBuilder`1.Set``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Set a field to a value using a constant.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An instance of ListSetFieldDefinitions to which further set field definitions can be added.</returns>
        </member>
        <member name="M:MongoDB.Driver.SetFieldDefinitionsBuilder`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Set a field to a value using an expression to specify the field and a constant to specify the value.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An instance of ListSetFieldDefinitions to which further set field definitions can be added.</returns>
        </member>
        <member name="T:MongoDB.Driver.ListSetFieldDefinitionsExtensions">
            <summary>
            Extension methods to add additional set field definitions to an existing instance of ListSetFieldDefinitions.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ListSetFieldDefinitionsExtensions.Set``2(MongoDB.Driver.ListSetFieldDefinitions{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Set an additional field to value using a constant.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="fields">The existing ListSetFieldDefinitions.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>The ListSetFieldDefinitions instance with a SetFieldDefinition added.</returns>
        </member>
        <member name="M:MongoDB.Driver.ListSetFieldDefinitionsExtensions.Set``2(MongoDB.Driver.ListSetFieldDefinitions{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Set an additional field to value using an Expression to specify the field and a constant to specify the value.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="fields">The existing ListSetFieldDefinitions.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>The ListSetFieldDefinitions instance with a SetFieldDefinition added.</returns>
        </member>
        <member name="T:MongoDB.Driver.Setting`1">
            <summary>
            Represents a setting that may or may not have been set.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Setting`1.Value">
            <summary>
            Gets the value of the setting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Setting`1.HasBeenSet">
            <summary>
            Gets a value indicating whether the setting has been set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Setting`1.Reset">
            <summary>
            Resets the setting to the unset state.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Setting`1.ToString">
            <summary>
            Gets a canonical string representation for this setting.
            </summary>
            <returns>A canonical string representation for this setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.SetWindowFieldsWindow">
            <summary>
            Represents a window for a SetWindowFields window method.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SortDirection">
            <summary>
            The direction of the sort.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.SortDirection.Ascending">
            <summary>
            Ascending.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.SortDirection.Descending">
            <summary>
            Descending.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SortDefinition`1">
            <summary>
            Base class for sorts.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SortDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the sort to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.SortDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.SortDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinition`1.op_Implicit(System.String)~MongoDB.Driver.SortDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.SortDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentSortDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentSortDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentSortDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentSortDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentSortDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonSortDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonSortDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonSortDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonSortDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonSortDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectSortDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectSortDefinition`1.Object" /> based sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectSortDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectSortDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectSortDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectSortDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.SortDefinitionExtensions">
            <summary>
            Extension methods for SortDefinition.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Ascending``1(MongoDB.Driver.SortDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing sort with an ascending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Ascending``1(MongoDB.Driver.SortDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing sort with an ascending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Descending``1(MongoDB.Driver.SortDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing sort with an descending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Descending``1(MongoDB.Driver.SortDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing sort with an descending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.MetaSearchScoreDescending``1(MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a descending sort on the computed relevance score of atlas search.
            </summary>
            <returns>A meta search score sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.MetaSearchScoreAscending``1(MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a ascending sort on the computed relevance score of atlas search.
            </summary>
            <returns>A meta search score sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.MetaTextScore``1(MongoDB.Driver.SortDefinition{``0},System.String)">
            <summary>
            Combines an existing sort with a descending sort on the computed relevance score of a text search.
            The field name should be the name of the projected relevance score field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.SortDefinitionBuilder`1">
            <summary>
            A builder for a <see cref="T:MongoDB.Driver.SortDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Ascending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates an ascending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates an ascending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Combine(MongoDB.Driver.SortDefinition{`0}[])">
            <summary>
            Creates a combined sort.
            </summary>
            <param name="sorts">The sorts.</param>
            <returns>A combined sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.SortDefinition{`0}})">
            <summary>
            Creates a combined sort.
            </summary>
            <param name="sorts">The sorts.</param>
            <returns>A combined sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Descending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a descending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a descending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.MetaSearchScoreDescending">
            <summary>
            Creates a descending sort on the computed relevance score of atlas search.
            </summary>
            <returns>A meta search score sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.MetaSearchScoreAscending">
            <summary>
            Creates a ascending sort on the computed relevance score of atlas search.
            </summary>
            <returns>A meta search score sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.MetaTextScore(System.String)">
            <summary>
            Creates a descending sort on the computed relevance score of a text search.
            The name of the key should be the name of the projected relevance score field.
            </summary>
            <param name="field">The field.</param>
            <returns>A meta text score sort.</returns>
        </member>
        <member name="T:MongoDB.Driver.SslSettings">
            <summary>
            Represents the settings for using SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.CheckCertificateRevocation">
            <summary>
            Gets or sets a value indicating whether to check for certificate revocation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificates">
            <summary>
            Gets or sets the client certificates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificateSelectionCallback">
            <summary>
            Gets or sets the client certificate selection callback.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.EnabledSslProtocols">
            <summary>
            Gets or sets the enabled SSL protocols.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ServerCertificateValidationCallback">
            <summary>
            Gets or sets the server certificate validation callback.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificateCollection">
            <summary>
            Gets the client certificate collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.op_Equality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.op_Inequality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Clone">
            <summary>
            Clones an SslSettings.
            </summary>
            <returns>The cloned SslSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Equals(MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.SslSettings" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.SslSettings" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.SslSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.StringOrRegularExpression">
            <summary>
            Represents a value that is either a string or a BsonRegularExpression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.StringOrRegularExpression.op_Implicit(System.String)~MongoDB.Driver.StringOrRegularExpression">
            <summary>
            Implicit conversion from string to StringOrRegularExpression.
            </summary>
            <param name="value">A StringOrRegularExpression.</param>
            <returns>A StringOrRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.StringOrRegularExpression.op_Implicit(MongoDB.Bson.BsonRegularExpression)~MongoDB.Driver.StringOrRegularExpression">
            <summary>
            Implicit conversion from BsonRegularExpression to StringOrRegularExpression.
            </summary>
            <param name="value">A StringOrRegularExpression.</param>
            <returns>A StringOrRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.StringOrRegularExpression.op_Implicit(System.Text.RegularExpressions.Regex)~MongoDB.Driver.StringOrRegularExpression">
            <summary>
            Implicit conversion from Regex to StringOrRegularExpression.
            </summary>
            <param name="value">A StringOrRegularExpression.</param>
            <returns>A StringOrRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.StringOrRegularExpression.#ctor(System.String)">
            <summary>
            Initializes an instance of a StringOrRegularExpression.
            </summary>
            <param name="value">A string value.</param>
        </member>
        <member name="M:MongoDB.Driver.StringOrRegularExpression.#ctor(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Initializes an instance of a StringOrRegularExpression.
            </summary>
            <param name="value">A BsonRegularExpression value.</param>
        </member>
        <member name="P:MongoDB.Driver.StringOrRegularExpression.RegularExpression">
            <summary>
            Gets the BsonRegularExpression value (returns null if value is not a BsonRegularExpression).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.StringOrRegularExpression.String">
            <summary>
            Gets the string value (returns null if value is not a string).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.StringOrRegularExpression.Type">
            <summary>
            Gets the type of the value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.TextSearchOptions">
            <summary>
            Represents text search options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TextSearchOptions.CaseSensitive">
            <summary>
            Gets or sets whether a text search should be case sensitive.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TextSearchOptions.DiacriticSensitive">
            <summary>
            Gets or sets whether a text search should be diacritic sensitive.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TextSearchOptions.Language">
            <summary>
            Gets or sets the language for a text search.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinition`1">
            <summary>
            Base class for updates.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <summary>
            Renders the update to a <see cref="T:MongoDB.Bson.BsonValue"/>.
            </summary>
            <param name="args">The render arguments.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.UpdateDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.op_Implicit(System.String)~MongoDB.Driver.UpdateDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.op_Implicit(MongoDB.Driver.PipelineDefinition{`0,`0})~MongoDB.Driver.UpdateDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> to <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.PipelineUpdateDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> based update definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.#ctor(MongoDB.Driver.PipelineDefinition{`0,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PipelineUpdateDefinition`1"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
        </member>
        <member name="P:MongoDB.Driver.PipelineUpdateDefinition`1.Pipeline">
            <summary>
            Gets the pipeline.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentUpdateDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based update.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentUpdateDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentUpdateDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentUpdateDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentUpdateDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonUpdateDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based update.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonUpdateDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonUpdateDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonUpdateDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonUpdateDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectUpdateDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectUpdateDefinition`1.Object" /> based update.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectUpdateDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectUpdateDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectUpdateDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectUpdateDefinition`1.Render(MongoDB.Driver.RenderArgs{`0})">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinitionExtensions">
            <summary>
            Extension methods for UpdateDefinition.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSet``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},``1)">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSet``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},``1)">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSetEach``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSetEach``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseAnd``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a bitwise and operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseAnd``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a bitwise and operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseOr``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a bitwise or operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseOr``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a bitwise or operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseXor``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a bitwise xor operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseXor``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a bitwise xor operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.CurrentDate``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Combines an existing update with a current date operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.CurrentDate``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Combines an existing update with a current date operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Inc``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with an increment operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Inc``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with an increment operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Max``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a max operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Max``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a max operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Min``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a min operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Min``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a min operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Mul``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a multiply operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Mul``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a multiply operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopFirst``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopFirst``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopLast``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopLast``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Pull``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},``1)">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Pull``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},``1)">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullAll``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullAll``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullFilter``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullFilter``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullFilter``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Push``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},``1)">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Push``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},``1)">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PushEach``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Collections.Generic.IEnumerable{``1},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``1})">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PushEach``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Collections.Generic.IEnumerable{``1},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``1})">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Rename``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.String)">
            <summary>
            Combines an existing update with a field renaming operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Rename``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Combines an existing update with a field renaming operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Set``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Set``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.SetOnInsert``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a set on insert operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.SetOnInsert``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a set on insert operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Unset``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing update with an unset operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Unset``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing update with an unset operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinitionCurrentDateType">
            <summary>
            The type to use for a $currentDate operator.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateDefinitionCurrentDateType.Date">
            <summary>
            A date.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateDefinitionCurrentDateType.Timestamp">
            <summary>
            A timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinitionBuilder`1">
            <summary>
            A builder for an <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSet``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSetEach``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseAnd``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a bitwise and operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise and operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseAnd``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a bitwise and operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise and operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseOr``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a bitwise or operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise or operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseOr``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a bitwise or operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise or operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseXor``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a bitwise xor operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise xor operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseXor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a bitwise xor operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise xor operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Combine(MongoDB.Driver.UpdateDefinition{`0}[])">
            <summary>
            Creates a combined update.
            </summary>
            <param name="updates">The updates.</param>
            <returns>A combined update.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.UpdateDefinition{`0}})">
            <summary>
            Creates a combined update.
            </summary>
            <param name="updates">The updates.</param>
            <returns>A combined update.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.CurrentDate(MongoDB.Driver.FieldDefinition{`0},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Creates a current date operator.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A current date operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Creates a current date operator.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A current date operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Inc``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates an increment operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An increment operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Inc``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates an increment operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An increment operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Max``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a max operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A max operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a max operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A max operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Min``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a min operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A min operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a min operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A min operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Mul``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a multiply operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A multiply operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Mul``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a multiply operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A multiply operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Pipeline(MongoDB.Driver.PipelineDefinition{`0,`0})">
            <summary>
            Creates an update pipeline.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <returns>An update pipeline.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopFirst(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a pop operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopFirst(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a pop first operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop first operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopLast(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a pop operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopLast(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a pop first operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop last operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Pull``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullAll``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullFilter``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullFilter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullFilter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Push``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PushEach``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Rename(MongoDB.Driver.FieldDefinition{`0},System.String)">
            <summary>
            Creates a field renaming operator.
            </summary>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>A field rename operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Rename(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Creates a field renaming operator.
            </summary>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>A field rename operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Set``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a set operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a set operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.SetOnInsert``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a set on insert operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set on insert operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a set on insert operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set on insert operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Unset(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates an unset operator.
            </summary>
            <param name="field">The field.</param>
            <returns>An unset operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Unset(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates an unset operator.
            </summary>
            <param name="field">The field.</param>
            <returns>An unset operator.</returns>
        </member>
        <member name="T:MongoDB.Driver.UpdateManyModel`1">
            <summary>
            Model for updating many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateManyModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateManyModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Update">
            <summary>
            Gets the update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.ModelType">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.UpdateManyModel`1.ThrowIfNotValid">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.UpdateOneModel`1">
            <summary>
            Model for updating a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateOneModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateOneModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Sort">
            <summary>
            Gets or sets the sort definition.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Update">
            <summary>
            Gets the update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.ModelType">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.UpdateOneModel`1.ThrowIfNotValid">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.UpdateOptions">
            <summary>
            Options for updating a single document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.Let">
            <summary>
            Gets or sets the let document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateOptions`1">
            <summary>
            Options for updating a single document and specifying a sort order.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions`1.Sort">
            <summary>
            Gets or sets the sort definition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateResult">
            <summary>
            The result of an update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the result is acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The available modified count.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.MatchedCount">
            <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.ModifiedCount">
            <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.UpsertedId">
            <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateResult"/> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateResult.Acknowledged">
            <summary>
            The result of an acknowledged update operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateResult.Acknowledged.#ctor(System.Int64,System.Nullable{System.Int64},MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateResult.Acknowledged"/> class.
            </summary>
            <param name="matchedCount">The matched count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="upsertedId">The upserted id.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.UpdateResult.Unacknowledged">
            <summary>
            The result of an acknowledged update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.VectorSearchOptions`1">
            <summary>
            Vector search options.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.VectorSearchOptions`1.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.VectorSearchOptions`1.IndexName">
            <summary>
            Gets or sets the name of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.VectorSearchOptions`1.NumberOfCandidates">
            <summary>
            Gets or sets the number of candidates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.VectorSearchOptions`1.Exact">
            <summary>
            Get or sets a value indicating if exact nearest neighbor (ENN) is to be used, false by default.
            If false, approximate nearest neighbor (ANN) is used.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteConcernError">
            <summary>
            Represents the details of a write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.CodeName">
            <summary>
            Gets the name of the error code.
            </summary>
            <value>
            The name of the error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Details">
            <summary>
            Gets the error information.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.ErrorLabels">
            <summary>
            Gets the error labels.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcernError.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.WriteError">
            <summary>
            Represents the details of a write error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Details">
            <summary>
            Gets the error details.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteError.ToString">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.WriteModel`1">
            <summary>
            Base class for a write model.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.WriteModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteModel`1.ThrowIfNotValid">
            <summary>
            Validate model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteModelType">
            <summary>
            The type of a write model.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.InsertOne">
            <summary>
            A model to insert a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.DeleteOne">
            <summary>
            A model to delete a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.DeleteMany">
            <summary>
            A model to delete multiple documents.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.ReplaceOne">
            <summary>
            A model to replace a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.UpdateOne">
            <summary>
            A model to update a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.UpdateMany">
            <summary>
            A model to update many documents.
            </summary>
        </member>
    </members>
</doc>
